var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/interfaces/Amount.html",[0,1.18,1,1.18]],["body/interfaces/Amount.html",[0,2.11,1,2.349,2,2.492,3,0.414,4,0.414,5,0.305,6,2.771,7,0.596,8,1.402,9,2.846,10,1.717,11,0.73,12,0.032,13,1.972,14,0.549,15,1.288,16,2.525,17,2.061,18,2.994,19,2.26,20,2.26,21,2.26,22,2.26,23,2.26,24,3.121,25,2.492,26,2.26,27,2.061,28,0.021,29,0.026,30,0.021]],["title/components/AmountComponent.html",[31,0.395,32,0.921]],["body/components/AmountComponent.html",[1,2.326,3,0.303,4,0.303,5,0.223,7,0.436,9,2.731,10,1.244,11,0.436,12,0.033,13,1.351,14,0.303,15,0.769,28,0.016,29,0.021,30,0.016,31,0.607,32,1.524,33,1.467,34,1.268,35,1.268,36,1.268,37,1.268,38,2.627,39,1.381,40,1.594,41,3.123,42,2.773,43,2.062,44,2.842,45,1.268,46,1.888,47,1.888,48,2.279,49,2.078,50,1.594,51,4.903,52,1.594,53,4.303,54,1.145,55,3.055,56,2.773,57,5.271,58,1.672,59,1.304,60,4.303,61,3.147,62,0.837,63,1.073,64,0.596,65,1.381,66,2.494,67,0.39,68,0.303,69,2.627,70,3.147,71,1.824,72,3.147,73,3.147,74,3.16,75,3.147,76,3.147,77,3.147,78,4.303,79,4.303,80,0.769,81,1.733,82,1.733,83,1.268,84,2.123,85,1.268,86,1.052,87,1.268,88,0.91,89,1.268,90,1.268,91,0.837,92,1.268,93,0.91,94,1.073,95,1.268,96,0.769,97,1.268,98,0.837,99,1.268,100,0.91,101,1.268,102,0.91,103,1.268,104,0.91,105,1.166,106,1.268,107,1.268]],["title/components/AppComponent.html",[31,0.395,88,0.921]],["body/components/AppComponent.html",[3,0.378,4,0.378,5,0.278,12,0.032,14,0.378,28,0.019,29,0.025,30,0.019,31,0.677,32,1.134,33,1.696,34,1.579,35,1.579,36,1.579,37,1.579,40,1.453,45,1.579,48,2.362,49,2.124,50,1.843,52,1.843,64,0.543,67,0.486,68,0.378,80,0.959,81,2.004,82,2.004,83,1.579,84,2.315,85,1.579,86,1.216,87,1.579,88,1.661,89,2.201,90,1.579,91,1.043,92,1.579,93,1.134,94,1.337,95,1.579,96,0.959,97,1.579,98,1.043,99,1.579,100,1.134,101,1.579,102,1.134,103,1.579,104,1.134,105,1.453,106,1.579,107,1.579,108,3.273,109,2.384,110,5.463,111,4.974,112,2.846,113,2.061,114,2.273,115,3.273]],["title/modules/AppModule.html",[116,1.086,117,2.053]],["body/modules/AppModule.html",[3,0.394,4,0.394,5,0.29,12,0.032,14,0.394,28,0.02,29,0.025,30,0.02,64,0.832,67,0.506,68,0.394,80,0.999,88,1.863,116,1.394,117,4.082,118,1.793,119,1.793,120,2.927,121,2.927,122,2.148,123,2.148,124,3.411,125,3.411,126,3.411,127,3.411,128,3.549,129,2.683,130,2.148,131,1.793,132,4.087,133,2.959,134,5.105,135,2.967,136,2.634,137,2.959,138,4.087,139,4.087,140,5.105,141,2.967]],["title/components/CardComponent.html",[31,0.395,91,0.847]],["body/components/CardComponent.html",[3,0.244,4,0.244,5,0.18,7,0.352,8,0.983,11,0.705,12,0.033,14,0.244,15,1.534,28,0.013,29,0.018,30,0.013,31,0.631,32,0.733,33,1.26,34,1.022,35,1.022,36,1.022,37,1.022,39,1.113,40,0.94,43,1.771,45,1.022,46,1.621,47,1.621,48,2.185,49,1.985,50,1.369,52,1.369,54,0.983,58,1.26,59,1.459,62,1.159,63,1.486,64,0.736,65,1.113,67,0.314,68,0.244,71,2.526,80,0.62,81,1.488,82,1.488,83,1.022,84,1.929,85,1.022,86,1.17,87,1.022,88,0.733,89,1.022,90,1.022,91,1.274,92,1.022,93,0.733,94,0.865,95,1.022,96,0.62,97,1.022,98,0.675,99,1.022,100,0.733,101,1.022,102,0.733,103,1.022,104,0.733,105,0.94,106,1.022,107,1.022,112,1.841,113,1.333,114,1.47,115,2.117,142,2.117,143,3.694,144,2.682,145,3.084,146,4.788,147,3.856,148,2.775,149,3.28,150,3.424,151,4.358,152,3.694,153,4.358,154,3.694,155,3.079,156,2.14,157,4.358,158,4.788,159,2.536,160,2.516,161,2.882,162,2.295,163,3.694,164,1.26,165,1.16,166,2.536,167,2.536,168,3.694,169,2.536,170,1.486,171,2.117,172,3.694,173,2.536,174,4.358,175,2.536,176,2.536,177,1.47,178,2.117,179,2.117,180,0.796,181,1.841,182,2.117,183,2.536,184,3.694,185,2.536,186,1.635,187,2.536,188,2.536,189,2.536,190,2.536,191,2.381,192,1.635,193,2.536,194,2.536,195,1.841,196,2.536,197,2.381,198,2.536,199,2.536,200,2.381,201,1.841,202,2.117,203,2.117,204,2.536,205,1.841,206,2.536,207,2.536,208,1.633,209,2.536,210,1.47,211,1.841,212,2.536]],["title/components/ConfirmButtonComponent.html",[31,0.395,93,0.921]],["body/components/ConfirmButtonComponent.html",[3,0.284,4,0.284,5,0.209,7,0.409,8,1.095,11,0.657,12,0.033,14,0.284,28,0.015,29,0.02,30,0.015,31,0.587,32,0.853,33,1.403,34,1.188,35,1.188,36,1.188,37,1.188,40,1.899,45,1.188,46,1.805,47,1.805,48,2.252,49,2.051,50,1.524,52,1.524,54,1.095,59,1.486,62,1.261,63,1.616,64,0.409,65,1.294,67,0.365,68,0.284,80,0.721,81,1.657,82,1.657,83,1.188,84,2.065,85,1.188,86,1.006,87,1.188,88,0.853,89,1.188,90,1.188,91,0.785,92,1.188,93,1.482,94,2.121,95,1.188,96,0.721,97,1.188,98,0.785,99,1.188,100,0.853,101,1.188,102,0.853,103,1.188,104,0.853,105,1.093,106,1.188,107,1.188,150,3.305,195,2.141,208,1.006,213,4.16,214,4.009,215,2.462,216,4.114,217,4.738,218,4.114,219,2.746,220,5.127,221,2.986,222,3.439,223,4.738,224,3.476,225,2.949,226,2.949,227,2.949,228,2.949,229,2.949,230,2.986,231,1.294,232,1.294,233,2.746,234,2.949,235,3.054,236,1.19,237,3.434,238,1.414,239,2.949,240,2.141,241,2.949,242,2.462,243,2.949,244,2.385,245,2.949,246,2.949,247,2.986,248,2.462,249,1.901]],["title/modules/ConfirmButtonModule.html",[116,1.086,250,1.846]],["body/modules/ConfirmButtonModule.html",[3,0.399,4,0.399,5,0.294,12,0.032,14,0.399,28,0.02,29,0.025,30,0.02,64,0.836,67,0.514,68,0.399,80,1.013,93,1.867,94,1.414,116,1.414,118,1.819,119,1.819,120,2.946,121,2.179,122,2.179,123,2.946,129,2.707,130,2.179,131,1.819,133,2.403,137,2.986,213,3.009,214,3.32,250,3.611,251,3.46,252,3.46,253,3.46,254,4.145,255,3.32,256,2.403,257,4.145,258,4.3,259,3.46,260,5.151,261,4.145]],["title/injectables/CurrencyService.html",[161,1.674,262,1.086]],["body/injectables/CurrencyService.html",[1,1.88,3,0.324,4,0.324,5,0.239,7,0.467,8,1.198,10,1.567,11,0.751,12,0.033,13,1.918,14,0.324,18,1.769,28,0.017,29,0.022,30,0.017,54,1.198,58,1.148,59,1.442,62,1.198,64,0.783,67,0.417,68,0.324,71,2.942,86,1.101,109,1.614,141,2.444,156,2.044,161,2.367,164,1.536,165,1.414,170,2.024,180,1.057,182,4.236,262,1.536,263,1.951,264,2.17,265,5.075,266,5.418,267,2.81,268,4.523,269,4.503,270,3.759,271,3.366,272,5.418,273,5.418,274,3.366,275,3.366,276,2.17,277,2.81,278,2.159,279,4.503,280,3.366,281,1.614,282,1.247,283,2.444,284,3.366,285,2.81,286,4.523,287,3.366,288,3.366,289,1.769,290,3.366,291,1.769,292,3.366,293,2.81,294,3.366,295,3.366,296,1.594,297,3.366,298,2.81,299,3.366,300,2.444,301,3.366]],["title/components/DrawerComponent.html",[31,0.395,96,0.779]],["body/components/DrawerComponent.html",[3,0.222,4,0.222,5,0.164,7,0.572,8,0.917,11,0.737,12,0.033,14,0.222,28,0.011,29,0.017,30,0.011,31,0.511,32,0.667,33,1.175,34,1.842,35,0.929,36,0.929,37,0.929,40,1.528,45,0.929,48,2.14,49,1.941,50,1.276,52,1.276,54,0.917,56,2.221,59,1.415,62,1.217,63,0.787,64,0.572,66,1.997,67,0.286,68,0.222,80,0.564,81,1.388,82,1.388,83,0.929,84,1.842,85,0.929,86,1.196,87,0.929,88,0.667,89,0.929,90,0.929,91,0.614,92,0.929,93,0.667,94,0.787,95,0.929,96,1.118,97,0.929,98,0.614,99,0.929,100,0.667,101,0.929,102,0.667,103,0.929,104,0.667,105,0.855,106,0.929,107,0.929,113,1.811,148,2.39,149,3.669,156,1.661,164,1.669,165,1.295,170,1.406,171,1.926,180,0.725,197,2.221,208,1.814,219,2.39,231,1.809,232,1.809,233,2.39,236,1.322,237,1.926,238,1.651,244,1.337,249,1.487,296,1.295,302,1.926,303,3.445,304,4.123,305,4.123,306,3.445,307,4.123,308,2.993,309,3.445,310,3.445,311,3.32,312,2.307,313,3.445,314,3.32,315,2.307,316,1.926,317,3.445,318,2.993,319,3.445,320,4.573,321,2.307,322,1.926,323,4.123,324,2.501,325,2.307,326,1.675,327,2.221,328,2.307,329,4.123,330,3.445,331,3.445,332,2.307,333,3.155,334,2.307,335,2.307,336,1.487,337,1.675,338,1.675,339,1.675,340,2.307,341,3.445,342,3.445,343,3.445,344,2.307,345,2.307,346,4.123,347,3.445,348,3.445,349,3.445,350,3.445,351,2.39,352,3.445,353,3.445,354,2.876,355,2.501,356,2.221,357,3.445,358,4.123,359,3.442,360,2.876,361,2.307,362,3.445,363,2.307,364,2.307,365,3.445,366,2.307,367,2.993,368,2.307,369,2.307,370,2.307,371,1.213,372,5.134,373,2.307,374,3.445,375,3.445,376,1.926,377,1.926,378,1.675,379,2.307,380,2.307,381,2.307,382,2.307,383,2.307,384,2.307,385,2.307,386,2.307,387,2.307,388,1.926,389,2.307,390,1.926,391,3.445,392,2.307,393,2.307,394,1.675,395,2.307]],["title/modules/DrawerModule.html",[116,1.086,396,1.846]],["body/modules/DrawerModule.html",[3,0.343,4,0.343,5,0.253,11,0.493,12,0.033,13,1.118,14,0.343,15,0.87,28,0.018,29,0.023,30,0.018,31,0.686,39,1.562,40,1.731,64,0.818,67,0.441,68,0.343,80,0.87,91,1.571,96,1.493,116,1.594,118,1.562,119,1.562,120,2.742,121,1.871,122,1.871,123,1.871,129,2.456,130,1.871,131,1.562,133,2.709,137,3.024,148,2.063,149,3.708,162,1.706,219,2.063,255,3.012,256,2.063,282,1.319,296,1.118,336,2.294,396,3.58,397,2.971,398,2.971,399,3.559,400,3.559,401,3.901,402,4.673,403,3.901,404,4.624,405,3.559,406,5.217,407,2.971,408,3.559,409,2.971,410,3.901,411,2.742,412,4.673,413,3.559,414,2.971,415,3.559,416,3.559,417,3.559,418,3.559,419,2.584,420,3.559,421,3.559,422,2.584,423,4.673]],["title/classes/DrawerRef.html",[68,0.307,411,1.674]],["body/classes/DrawerRef.html",[3,0.295,4,0.295,5,0.217,7,0.424,8,1.122,11,0.722,12,0.033,14,0.465,28,0.015,29,0.021,30,0.015,54,1.122,58,1.439,59,1.453,62,1.122,63,1.043,64,0.722,67,0.379,68,0.407,86,1.031,96,0.748,109,1.466,148,2.446,155,2.446,156,2.332,162,1.466,164,1.439,165,1.325,170,1.647,177,2.446,180,0.96,231,1.342,232,1.342,236,1.731,238,1.466,262,1.439,282,1.929,289,1.607,296,1.517,308,3.506,311,3.78,314,2.22,318,4.1,324,3.506,326,3.966,333,3.522,336,1.971,337,2.22,338,2.22,339,2.22,411,3.147,422,2.22,424,2.22,425,1.971,426,4.56,427,3.058,428,4.219,429,3.058,430,3.058,431,3.058,432,4.032,433,3.522,434,4.56,435,2.553,436,3.522,437,3.522,438,4.032,439,2.22,440,2.553,441,2.553,442,2.553,443,2.553,444,2.553,445,2.553,446,2.553,447,2.553,448,2.553,449,2.553,450,2.553,451,2.553,452,2.553,453,2.553,454,2.553,455,2.553,456,2.553,457,2.553,458,2.553,459,2.553,460,2.553,461,2.553,462,2.553,463,3.522,464,2.553,465,2.553]],["title/injectables/DrawerService.html",[162,1.527,262,1.086]],["body/injectables/DrawerService.html",[3,0.277,4,0.277,5,0.204,7,0.398,8,1.074,11,0.805,12,0.033,14,0.45,28,0.014,29,0.02,30,0.014,54,1.074,58,1.377,59,1.473,62,1.242,63,0.979,64,0.702,67,0.356,68,0.389,86,1.239,96,0.702,109,1.376,148,2.34,156,2.292,162,1.935,164,1.888,165,1.591,170,1.377,177,2.34,180,0.902,219,2.34,236,1.679,238,1.376,262,1.377,263,1.664,282,1.877,289,1.509,296,1.467,308,2.084,311,2.084,314,2.084,316,3.37,318,3.876,324,3.39,326,4.285,333,3.01,336,1.851,337,2.084,338,2.084,339,2.084,411,3.208,422,2.084,425,1.851,426,4.23,432,4.622,433,4.23,434,4.927,435,2.397,436,4.23,437,3.898,438,4.23,439,2.084,440,2.397,441,3.898,442,3.898,443,2.397,444,2.397,445,2.397,446,2.397,447,2.397,448,3.37,449,2.397,450,2.397,451,2.397,452,2.397,453,2.397,454,2.397,455,2.397,456,2.397,457,2.397,458,2.397,459,2.397,460,2.397,461,2.397,462,3.898,463,3.37,464,2.397,465,2.397,466,2.871,467,4.038,468,2.871,469,2.871,470,2.871,471,2.871,472,2.871]],["title/interfaces/Expense.html",[0,1.18,15,0.779]],["body/interfaces/Expense.html",[0,2.009,1,2.3,2,2.237,3,0.372,4,0.372,5,0.274,6,2.488,7,0.535,8,1.31,9,1.85,10,1.424,11,0.861,12,0.032,13,1.997,14,0.523,15,1.326,16,2.829,17,2.738,18,3.295,19,3.003,20,3.003,21,3.003,22,3.003,23,3.003,24,4.147,25,2.237,26,2.029,27,1.85,28,0.019,29,0.024,30,0.019,165,1.794]],["title/interfaces/ExpenseStore.html",[0,1.18,25,1.846]],["body/interfaces/ExpenseStore.html",[0,2.105,1,2.196,2,2.48,3,0.412,4,0.412,5,0.304,6,2.758,7,0.593,8,1.397,9,2.051,10,1.714,11,0.822,12,0.032,13,1.91,14,0.548,15,1.284,16,2.517,17,2.051,18,2.987,19,2.249,20,2.249,21,2.249,22,2.249,23,2.249,24,3.105,25,3.044,26,3.115,27,2.841,28,0.021,29,0.026,30,0.021,473,3.044]],["title/modules/ExpensesModule.html",[116,1.086,128,1.846]],["body/modules/ExpensesModule.html",[3,0.291,4,0.291,5,0.214,12,0.033,14,0.291,28,0.015,29,0.021,30,0.015,32,1.626,64,0.887,67,0.374,68,0.291,80,0.737,91,1.564,94,1.028,98,1.496,100,1.78,102,1.626,116,1.028,118,1.323,119,1.323,120,2.52,121,1.585,122,2.196,123,2.52,128,3.72,129,2.196,130,1.585,131,1.323,133,2.422,135,2.189,137,2.422,214,1.944,250,3.26,255,2.693,256,1.748,258,3.488,259,2.517,396,3.26,404,3.488,407,2.517,474,2.517,475,2.517,476,2.517,477,2.517,478,3.26,479,3.016,480,4.178,481,3.016,482,4.178,483,3.016,484,4.178,485,1.944,486,3.016,487,3.016,488,4.178,489,3.016,490,4.178,491,3.016,492,3.016,493,4.795,494,2.189,495,4.178,496,3.016,497,4.178,498,3.016,499,4.178,500,3.016,501,3.016,502,2.517,503,3.016,504,3.016,505,3.016,506,3.016,507,3.016,508,3.016,509,3.016,510,3.016,511,3.016]],["title/injectables/ExpensesProviderService.html",[262,1.086,512,1.846]],["body/injectables/ExpensesProviderService.html",[3,0.193,4,0.193,5,0.142,7,0.278,10,1.466,11,0.813,12,0.033,13,1.885,14,0.193,15,1.493,16,1.814,17,1.485,18,1.628,26,1.628,27,1.485,28,0.01,29,0.015,30,0.01,54,0.824,58,0.684,59,1.528,62,1.509,64,0.674,67,0.249,68,0.193,74,2.44,86,1.404,109,0.962,141,1.456,156,2.491,164,1.959,165,1.804,170,1.959,180,0.63,186,1.997,236,1.095,262,1.057,263,1.163,267,1.675,268,3.553,270,2.586,276,1.293,277,1.675,278,1.485,281,0.962,282,1.878,283,2.249,289,1.054,291,1.054,296,1.804,298,2.586,371,1.054,473,2.468,512,1.796,513,1.456,514,3.098,515,3.098,516,3.098,517,3.098,518,2.748,519,3.098,520,3.785,521,3.098,522,3.098,523,3.098,524,2.249,525,3.16,526,2.006,527,3.098,528,2.006,529,2.006,530,3.098,531,2.006,532,1.163,533,3.098,534,2.006,535,3.098,536,2.006,537,3.098,538,2.006,539,2.249,540,2.006,541,1.456,542,4.601,543,2.468,544,2.194,545,2.006,546,1.814,547,3.098,548,3.098,549,2.006,550,2.006,551,3.098,552,2.006,553,3.098,554,2.006,555,3.098,556,2.006,557,2.006,558,3.16,559,2.006,560,2.006,561,1.054,562,2.249,563,1.675,564,2.006,565,3.53,566,1.675,567,1.675,568,3.098,569,2.006,570,2.006,571,2.006,572,2.006,573,2.006,574,2.006,575,1.163,576,2.006,577,3.098,578,2.006,579,2.006,580,3.098,581,1.456,582,2.006,583,2.006,584,2.006,585,2.006,586,2.006,587,3.098,588,3.098,589,2.006,590,2.006,591,2.006,592,2.006,593,2.006,594,2.006,595,2.006,596,2.006,597,2.006,598,2.006,599,2.006,600,2.006,601,2.006,602,2.006,603,1.163,604,2.006,605,2.006,606,2.006,607,2.006,608,2.006,609,3.098,610,3.098,611,3.098,612,2.006,613,2.006,614,2.006,615,2.006]],["title/injectables/ExpensesService.html",[160,1.674,262,1.086]],["body/injectables/ExpensesService.html",[0,0.776,3,0.202,4,0.202,5,0.149,7,0.29,8,0.852,10,1.125,11,0.794,12,0.033,13,1.709,14,0.202,15,1.418,16,1.536,23,1.101,26,1.101,27,2.372,28,0.01,29,0.016,30,0.01,41,1.521,42,1.351,54,0.852,58,0.715,59,1.477,62,1.159,63,1.326,64,0.651,67,0.26,68,0.202,74,2.065,86,1.147,109,1.004,156,1.567,160,1.684,164,1.601,165,1.474,170,1.954,180,0.658,186,2.065,191,1.351,208,0.715,231,2.059,232,2.059,236,0.926,262,1.093,263,1.215,278,1.864,281,1.004,282,1.833,289,1.101,291,1.101,296,1.006,300,3.592,371,1.684,473,1.857,512,2.525,524,2.326,525,2.674,532,2.255,539,1.521,541,1.521,543,3.561,544,3.457,546,2.931,561,1.101,575,1.857,581,1.521,603,1.215,616,1.351,617,2.507,618,2.869,619,3.247,620,2.096,621,2.096,622,2.674,623,2.096,624,2.096,625,2.326,626,2.096,627,2.096,628,2.674,629,2.096,630,4.433,631,4.433,632,3.592,633,2.674,634,2.674,635,2.096,636,2.096,637,2.674,638,3.025,639,2.096,640,2.096,641,3.247,642,2.674,643,2.096,644,1.749,645,1.351,646,1.351,647,2.823,648,2.674,649,3.247,650,1.749,651,3.247,652,3.636,653,1.749,654,1.749,655,1.749,656,2.674,657,2.674,658,2.674,659,1.749,660,1.521,661,1.749,662,1.749,663,1.521,664,1.749,665,1.749,666,1.521,667,1.749,668,1.749,669,2.674,670,1.749,671,1.749,672,1.749,673,1.749,674,1.749,675,1.749]],["title/components/FormComponent.html",[31,0.395,98,0.847]],["body/components/FormComponent.html",[1,1.855,3,0.187,4,0.187,5,0.138,7,0.269,8,0.803,9,2.654,10,0.561,11,0.737,12,0.033,13,1.163,14,0.291,15,1.3,17,0.929,19,1.947,20,1.019,21,1.586,22,1.019,28,0.01,29,0.015,30,0.01,31,0.561,32,0.561,33,1.029,34,0.781,35,0.781,36,0.781,37,0.781,39,0.851,40,0.718,43,1.776,44,2.147,45,0.781,46,1.324,47,1.324,48,2.052,49,1.854,50,1.118,52,1.118,54,0.803,55,2.423,56,1.945,58,0.661,59,1.534,62,0.986,63,1.263,64,0.694,65,0.851,66,2.147,67,0.24,68,0.291,71,2.147,80,0.474,81,1.216,82,1.216,83,0.781,84,1.684,85,0.781,86,0.906,87,0.781,88,0.561,89,0.781,90,0.781,91,0.516,92,0.781,93,0.561,94,0.661,95,0.781,96,0.474,97,0.781,98,1.112,99,0.781,100,0.561,101,0.781,102,0.561,103,0.781,104,0.561,105,0.718,106,0.781,107,0.781,114,1.124,144,3.861,147,3.481,150,3.091,155,3.377,161,2.521,164,0.661,165,0.609,170,1.263,180,0.609,181,1.407,192,1.945,200,1.25,205,1.407,208,1.426,210,1.124,211,1.407,221,2.19,222,2.689,224,3.091,230,1.407,231,1.324,232,1.324,233,2.147,235,2.388,236,1.668,238,0.929,240,1.407,244,1.749,249,1.25,278,1.446,281,0.929,282,0.718,291,1.019,296,0.609,327,1.945,351,2.147,355,1.407,378,2.19,485,1.25,494,1.407,518,1.407,561,1.947,575,1.124,676,1.407,677,2.519,678,3.092,679,2.519,680,3.092,681,3.092,682,3.092,683,3.092,684,3.092,685,3.092,686,1.939,687,3.017,688,1.939,689,1.939,690,1.939,691,1.939,692,1.939,693,1.939,694,1.939,695,4.539,696,1.939,697,1.939,698,1.939,699,1.939,700,1.939,701,2.388,702,4.44,703,1.618,704,2.519,705,2.519,706,2.519,707,2.519,708,2.519,709,1.618,710,3.092,711,1.618,712,1.618,713,1.618,714,1.618,715,2.519,716,1.618,717,1.618,718,1.618,719,1.618,720,2.519,721,1.618,722,1.618,723,1.618,724,1.618,725,2.519,726,1.618,727,3.092,728,1.618,729,1.618,730,1.618,731,1.618,732,1.618,733,1.618,734,1.618,735,1.618,736,1.618,737,1.618,738,1.618,739,3.017,740,3.017,741,3.017,742,3.017,743,3.017,744,3.017,745,1.939,746,1.945,747,1.407,748,1.25,749,1.939,750,1.939,751,1.939]],["title/components/ListComponent.html",[31,0.395,100,0.921]],["body/components/ListComponent.html",[1,1.608,3,0.171,4,0.171,5,0.126,7,0.246,8,0.749,9,1.349,10,1.012,11,0.696,12,0.033,13,0.884,14,0.171,15,1.398,16,0.851,17,0.851,18,2.282,19,1.839,20,0.933,21,0.933,22,1.839,28,0.009,29,0.014,30,0.009,31,0.433,32,0.513,33,0.96,34,0.715,35,0.715,36,0.715,37,0.715,39,0.779,40,1.296,42,2.566,43,1.349,44,2.028,45,0.715,46,1.235,47,1.235,48,2.003,49,1.844,50,1.043,52,1.043,54,0.749,55,2.308,58,0.96,59,1.464,62,1.288,63,1.575,64,0.696,65,0.779,67,0.22,68,0.171,69,2.349,80,0.434,81,1.134,82,1.134,83,0.715,84,1.604,85,0.715,86,1.228,87,0.715,88,0.513,89,0.715,90,0.715,91,0.931,92,0.715,93,0.513,94,0.605,95,0.715,96,0.434,97,0.715,98,0.472,99,0.715,100,1.151,101,0.715,102,0.513,103,0.715,104,0.513,105,0.657,106,0.715,107,0.715,113,0.933,114,1.029,149,2.255,155,3.189,156,1.134,160,2.428,162,1.908,164,1.575,165,1.451,170,1.764,178,1.481,179,1.481,180,0.557,191,1.144,192,1.144,200,1.144,201,1.288,208,1.651,210,2.678,211,2.043,231,1.535,232,1.535,236,0.513,242,2.349,244,1.632,278,1.349,281,0.851,282,0.657,293,2.349,296,0.557,327,1.144,351,1.029,355,1.288,356,2.798,359,2.92,360,2.349,367,1.288,371,1.839,390,2.349,394,1.288,401,1.481,411,1.839,414,1.481,419,2.043,502,1.481,524,2.043,532,2.806,543,2.308,544,1.632,546,2.214,561,0.933,617,2.255,625,2.043,660,1.288,746,1.144,747,3.353,748,2.978,752,1.481,753,3.498,754,2.815,755,3.498,756,3.981,757,2.815,758,2.349,759,2.815,760,1.775,761,2.815,762,1.775,763,2.815,764,1.775,765,1.775,766,2.815,767,1.775,768,1.775,769,2.815,770,1.775,771,2.815,772,1.775,773,2.815,774,1.775,775,2.815,776,2.815,777,1.775,778,1.775,779,2.349,780,1.775,781,2.815,782,1.775,783,1.775,784,1.775,785,1.775,786,1.775,787,1.775,788,2.815,789,2.815,790,2.815,791,1.775,792,2.815,793,2.349,794,2.815,795,3.498,796,2.815,797,2.815,798,1.775,799,1.775,800,1.775,801,2.815,802,3.498,803,1.481,804,2.815,805,2.349,806,1.775,807,1.775,808,2.815,809,2.815,810,1.775,811,1.775,812,1.775,813,1.775,814,1.775,815,1.775,816,2.92,817,2.92,818,1.481,819,1.775,820,1.288,821,1.775,822,1.775,823,1.775,824,1.481,825,3.498,826,1.775,827,1.775,828,1.481,829,1.775,830,1.775,831,1.775,832,1.481,833,1.481,834,1.775,835,1.775,836,1.775,837,1.775,838,1.775,839,1.775,840,1.775,841,1.775]],["title/components/LoaderComponent.html",[31,0.395,102,0.921]],["body/components/LoaderComponent.html",[3,0.286,4,0.286,5,0.211,7,0.412,12,0.033,14,0.286,28,0.015,29,0.02,30,0.015,31,0.589,32,0.859,33,1.41,34,1.196,35,1.196,36,1.196,37,1.196,39,1.303,40,1.531,43,1.981,44,2.756,45,1.196,46,1.814,47,1.814,48,2.255,49,2.054,50,1.531,52,1.531,54,1.1,55,2.981,58,1.622,59,1.1,62,0.79,63,1.013,64,0.412,65,1.303,67,0.368,68,0.286,80,0.726,81,1.665,82,1.665,83,1.196,84,2.071,85,1.196,86,1.011,87,1.196,88,0.859,89,1.196,90,1.196,91,0.79,92,1.196,93,0.859,94,1.013,95,1.196,96,0.726,97,1.196,98,0.79,99,1.196,100,0.859,101,1.196,102,1.487,103,1.196,104,0.859,105,1.1,106,1.196,107,1.196,113,1.561,131,1.814,197,1.914,208,1.41,210,1.721,247,3.001,248,2.479,351,1.721,356,1.914,367,4.063,746,3.065,748,1.914,803,4.888,805,3.451,820,2.155,824,3.451,828,4.672,842,2.479,843,3.451,844,4.134,845,5.142,846,4.134,847,4.755,848,4.134,849,2.969,850,2.969,851,5.142,852,4.134,853,2.969,854,5.142,855,5.142,856,4.134,857,4.134,858,4.134,859,2.969,860,5.142,861,4.134,862,2.969,863,4.134,864,3.451,865,4.755,866,4.134,867,4.755]],["title/classes/MyErrorStateMatcher.html",[68,0.307,701,2.053]],["body/classes/MyErrorStateMatcher.html",[1,1.911,3,0.253,4,0.253,5,0.186,7,0.364,9,2.656,10,0.759,11,0.364,12,0.033,13,1.189,14,0.365,15,1.261,17,1.258,19,1.379,20,1.379,21,1.379,22,1.379,28,0.013,29,0.019,30,0.013,31,0.551,39,1.152,43,2.13,44,2.195,46,1.152,47,1.152,48,0.972,49,0.895,50,0.972,52,0.972,54,1.007,55,1.521,59,0.698,62,0.698,64,0.768,65,1.152,66,2.576,67,0.325,68,0.365,71,1.521,86,0.642,98,0.698,144,4.022,147,1.905,150,1.691,155,2.99,161,2.335,164,0.895,165,0.824,170,1.291,180,0.824,181,1.905,222,1.905,224,3.136,230,2.749,233,2.195,235,2.864,236,1.752,238,1.258,240,1.905,278,1.815,281,1.258,282,0.972,291,1.379,296,0.824,327,3.464,424,1.905,485,1.691,494,1.905,518,2.749,561,2.335,575,1.521,676,1.905,677,2.19,678,2.19,679,2.19,680,2.19,681,2.19,682,2.19,683,2.19,684,2.19,685,2.19,695,4.625,701,2.864,702,4.959,703,2.19,704,4.061,705,4.061,706,3.161,707,3.161,708,3.709,709,3.161,710,4.306,711,3.161,712,3.161,713,3.161,714,3.709,715,3.161,716,2.19,717,2.19,718,2.19,719,2.19,720,3.161,721,2.19,722,2.19,723,2.19,724,2.19,725,3.161,726,2.19,727,3.709,728,2.19,729,2.19,730,2.19,731,2.19,732,2.19,733,2.19,734,2.19,735,2.19,736,2.19,737,2.19,738,2.19,868,2.624,869,2.624]],["title/components/PaginationComponent.html",[31,0.395,104,0.921]],["body/components/PaginationComponent.html",[3,0.226,4,0.226,5,0.166,7,0.325,8,0.927,10,1.493,11,0.639,12,0.033,14,0.226,28,0.012,29,0.017,30,0.012,31,0.515,32,0.677,33,1.188,34,0.943,35,0.943,36,0.943,37,0.943,39,1.027,40,1.541,43,1.67,45,0.943,46,1.529,47,1.529,48,2.147,49,1.948,50,1.29,52,1.29,54,0.927,56,2.245,58,1.419,59,1.422,62,0.927,63,1.188,64,0.325,65,1.027,66,2.411,67,0.29,68,0.226,80,0.572,81,1.403,82,1.403,83,0.943,84,1.856,85,0.943,86,1.017,87,0.943,88,0.677,89,0.943,90,0.943,91,0.623,92,0.943,93,0.677,94,0.798,95,0.943,96,0.572,97,0.943,98,0.623,99,0.943,100,0.677,101,0.943,102,0.677,103,0.943,104,1.332,105,2.251,106,0.943,107,0.943,112,1.699,113,2.186,114,1.357,164,0.798,165,0.735,192,2.245,195,1.699,197,2.245,200,2.969,201,1.699,202,1.954,203,1.954,205,2.528,208,1.679,210,2.67,221,2.528,224,2.969,231,2.022,232,1.825,235,2.245,236,0.677,244,1.357,247,3.019,249,1.509,296,0.735,351,2.67,354,1.954,356,1.509,371,2.81,376,1.954,377,1.954,378,1.699,388,1.954,394,1.699,409,2.908,546,2.36,603,1.357,617,2.681,746,1.509,748,1.509,758,3.472,816,1.954,817,2.908,818,1.954,820,1.699,832,2.908,833,1.954,843,2.908,864,1.954,870,1.954,871,4.607,872,4.607,873,4.924,874,4.16,875,4.16,876,3.483,877,4.607,878,3.483,879,4.16,880,3.483,881,2.341,882,2.341,883,2.341,884,2.341,885,3.483,886,2.341,887,2.341,888,2.341,889,2.341,890,2.341,891,2.341,892,2.341,893,2.341,894,2.341,895,2.341,896,2.341,897,2.341,898,2.341,899,2.341,900,2.341,901,2.341,902,3.483,903,2.341,904,2.341,905,2.341,906,2.341,907,2.341,908,2.341,909,4.607,910,2.341,911,3.483,912,2.341,913,2.341,914,2.341,915,3.483,916,2.341,917,2.341,918,2.341,919,2.341,920,3.483,921,2.341,922,2.341,923,2.341,924,2.341,925,2.341,926,2.341,927,2.341,928,2.341]],["title/modules/PaginationModule.html",[116,1.086,478,1.846]],["body/modules/PaginationModule.html",[3,0.415,4,0.415,5,0.306,12,0.032,14,0.415,28,0.021,29,0.026,30,0.021,64,0.79,67,0.534,68,0.415,80,1.054,104,1.876,116,1.47,118,1.891,119,1.891,120,2.997,121,2.265,122,2.265,123,2.997,129,2.773,130,2.265,131,1.891,133,2.498,137,3.058,255,3.401,256,2.498,478,3.641,929,3.598,930,3.598,931,3.598,932,4.31,933,4.31]],["title/interfaces/Store.html",[0,1.18,618,1.846]],["body/interfaces/Store.html",[0,0.926,2,1.449,3,0.241,4,0.241,5,0.177,7,0.346,8,0.973,10,1.578,11,0.757,12,0.033,13,1.847,14,0.241,15,1.334,16,1.752,23,1.314,26,1.314,27,2.683,28,0.012,29,0.018,30,0.012,41,1.814,42,1.611,64,0.701,67,0.31,68,0.241,74,2.356,109,1.198,156,1.007,160,1.314,170,1.862,180,0.785,186,1.611,191,1.611,208,0.852,236,0.723,262,1.247,278,1.752,281,1.198,282,1.958,289,1.314,291,1.314,296,1.148,300,3.137,371,1.921,473,2.119,512,2.119,532,1.449,539,1.814,541,1.814,543,3.58,544,3.58,546,2.989,561,1.314,575,1.449,581,1.814,603,1.449,616,1.611,617,1.611,618,2.933,619,2.086,622,2.086,625,1.814,628,2.086,630,3.969,631,3.969,632,4.062,633,2.086,634,2.086,637,2.086,638,3.065,641,3.051,642,2.086,644,2.086,645,1.611,646,1.611,647,3.137,648,3.051,649,3.607,650,2.086,651,3.607,652,3.969,653,2.086,654,2.086,655,2.086,656,3.051,657,3.051,658,3.051,659,2.086,660,1.814,661,2.086,662,2.086,663,1.814,664,2.086,665,2.086,666,1.814,667,2.086,668,2.086,669,3.051,670,2.086,671,2.086,672,2.086,673,2.086,674,2.086,675,2.086]],["title/coverage.html",[934,3.622]],["body/coverage.html",[0,2.017,1,1.262,5,0.242,6,3.29,11,0.472,12,0.032,15,0.833,25,1.974,28,0.017,29,0.022,30,0.017,31,0.759,32,0.985,38,2.843,68,0.437,88,0.985,91,0.906,93,0.985,96,0.833,98,0.906,100,0.985,102,0.985,104,0.985,108,2.843,142,2.843,160,1.79,161,1.79,162,1.633,177,1.974,208,2.209,213,2.472,214,2.926,215,2.843,236,0.985,262,1.857,264,2.926,276,2.926,302,2.843,411,1.79,425,3.29,512,1.974,513,3.705,565,2.472,616,3.509,618,1.974,638,2.195,646,2.195,676,3.295,701,2.195,747,2.472,752,2.843,842,2.843,870,2.843,934,2.843,935,2.843,936,3.406,937,3.406,938,6.122,939,4.539,940,4.539,941,6.047,942,3.406,943,3.406,944,3.406,945,4.539,946,4.539,947,3.406,948,4.539,949,3.406,950,3.406,951,3.406,952,3.406,953,3.406,954,3.406,955,3.406,956,3.406,957,3.406,958,3.406,959,3.406,960,2.843,961,2.843,962,3.406]],["title/dependencies.html",[119,1.68,963,2.665]],["body/dependencies.html",[12,0.033,28,0.022,29,0.027,30,0.022,67,0.549,119,1.944,135,3.895,136,3.459,180,1.392,256,2.568,485,2.856,779,3.698,964,4.431,965,6.455,966,4.431,967,4.431,968,4.431,969,4.431,970,4.431,971,4.431,972,4.431,973,4.431,974,4.431,975,4.431,976,4.431,977,4.431,978,4.431,979,4.431,980,4.431,981,4.431,982,4.431]],["title/index.html",[7,0.369,983,1.934,984,1.934]],["body/index.html",[5,0.269,12,0.03,15,0.927,28,0.019,29,0.024,30,0.019,31,0.47,33,1.293,49,1.293,105,1.804,136,2.445,219,2.198,403,3.166,419,3.535,532,2.823,546,1.818,562,2.753,663,2.753,666,4.119,793,3.166,983,2.753,984,2.753,985,3.792,986,3.792,987,4.869,988,3.792,989,3.792,990,3.792,991,5.378,992,3.166,993,3.792,994,3.792,995,3.792,996,3.792,997,3.792,998,3.792,999,3.792,1000,4.869,1001,3.792,1002,3.792,1003,3.792,1004,3.792,1005,3.792,1006,3.792,1007,3.166,1008,3.792,1009,4.869,1010,6.108,1011,3.792,1012,4.869,1013,6.108,1014,3.792,1015,3.792,1016,3.792,1017,3.792,1018,5.378,1019,5.378,1020,5.378,1021,3.792,1022,3.792,1023,4.869,1024,3.792,1025,3.792,1026,5.869,1027,3.792,1028,3.792,1029,4.869,1030,4.869,1031,3.792,1032,3.792,1033,3.792,1034,3.166,1035,3.166,1036,3.166,1037,3.535,1038,3.792,1039,3.792,1040,3.166,1041,3.166,1042,3.792,1043,3.792,1044,3.792]],["title/license.html",[983,1.934,984,1.934,1037,1.934]],["body/license.html",[12,0.025,28,0.02,29,0.025,30,0.02,131,1.76,145,3.348,322,3.348,333,2.586,410,4.212,935,3.348,1007,4.212,1034,3.348,1035,3.348,1036,3.348,1037,2.912,1040,3.348,1041,3.348,1045,4.011,1046,5.521,1047,4.011,1048,5.046,1049,4.011,1050,4.011,1051,4.011,1052,4.011,1053,4.011,1054,4.011,1055,5.046,1056,6.313,1057,4.011,1058,4.011,1059,4.011,1060,5.521,1061,4.011,1062,4.011,1063,4.011,1064,4.011,1065,4.011,1066,4.011,1067,4.011,1068,4.011,1069,4.011,1070,4.011,1071,5.046,1072,4.011,1073,4.011,1074,4.011,1075,4.011,1076,4.011,1077,4.011,1078,5.046,1079,5.046,1080,4.011,1081,4.011,1082,4.011,1083,4.011,1084,4.011,1085,4.011,1086,4.011,1087,4.011,1088,4.011,1089,4.011,1090,4.011,1091,4.011,1092,4.011,1093,4.011,1094,4.011,1095,4.011,1096,4.011,1097,4.011,1098,4.011,1099,4.011,1100,4.011,1101,4.011,1102,4.011,1103,4.011,1104,4.011,1105,4.011,1106,4.011,1107,4.011]],["title/modules.html",[118,1.904]],["body/modules.html",[12,0.028,28,0.024,29,0.028,30,0.024,117,3.076,118,2.094,128,2.766,136,4.04,250,2.766,396,2.766,478,2.766,1108,6.267,1109,6.267,1110,6.267]],["title/overview.html",[1111,3.622]],["body/overview.html",[2,2.098,12,0.032,28,0.018,29,0.023,30,0.018,32,1.521,33,1.234,80,0.885,88,1.747,91,1.399,93,1.747,96,1.286,98,1.399,100,1.747,102,1.521,104,1.747,116,1.234,117,3.894,118,1.588,119,1.588,120,1.902,121,1.902,122,1.902,123,1.902,124,3.021,125,3.021,126,3.021,127,3.021,128,3.776,129,2.483,130,1.902,131,1.588,250,3.438,251,3.021,252,3.021,253,3.021,263,2.098,396,3.352,397,3.021,398,3.021,424,2.627,474,3.021,475,3.021,476,3.021,477,3.021,478,3.438,645,2.333,929,3.021,930,3.021,931,3.021,1111,3.021,1112,3.619,1113,4.724,1114,3.619]],["title/miscellaneous/typealiases.html",[1115,1.717,1116,3.829]],["body/miscellaneous/typealiases.html",[7,0.692,11,0.798,12,0.028,28,0.025,29,0.028,30,0.025,264,3.217,286,4.805,473,2.893,1115,3.217,1117,4.991,1118,4.166]],["title/miscellaneous/variables.html",[1115,1.717,1119,3.196]],["body/miscellaneous/variables.html",[7,0.521,10,1.087,11,0.811,12,0.033,23,1.976,27,1.802,28,0.019,29,0.024,30,0.019,177,2.807,208,1.282,231,2.71,232,2.71,233,2.179,236,1.4,238,1.802,264,2.423,276,3.646,283,4.106,285,3.138,425,2.423,439,2.729,513,2.729,543,2.179,544,2.179,546,1.802,558,4.042,562,3.888,563,3.138,565,3.515,566,3.138,567,3.138,603,2.179,616,2.423,618,2.179,632,2.729,638,3.121,645,2.423,646,3.121,647,2.729,960,3.138,961,3.138,992,4.042,1115,2.423,1118,3.138,1119,3.138,1120,3.76,1121,3.76,1122,3.76,1123,4.842,1124,4.842,1125,4.842,1126,4.842,1127,3.76,1128,3.76,1129,3.76,1130,4.842,1131,4.842,1132,3.76]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"interfaces/Amount.html":{},"components/AmountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"modules/ConfirmButtonModule.html":{},"injectables/CurrencyService.html":{},"components/DrawerComponent.html":{},"modules/DrawerModule.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"interfaces/Expense.html":{},"interfaces/ExpenseStore.html":{},"modules/ExpensesModule.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PaginationComponent.html":{},"modules/PaginationModule.html":{},"interfaces/Store.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":208,"title":{},"body":{"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{},"interfaces/Store.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.12",{"_index":812,"title":{},"body":{"components/ListComponent.html":{}}}],["0.16s",{"_index":863,"title":{},"body":{"components/LoaderComponent.html":{}}}],["0.2",{"_index":365,"title":{},"body":{"components/DrawerComponent.html":{}}}],["0.25s",{"_index":804,"title":{},"body":{"components/ListComponent.html":{}}}],["0.32s",{"_index":861,"title":{},"body":{"components/LoaderComponent.html":{}}}],["0.5",{"_index":809,"title":{},"body":{"components/ListComponent.html":{}}}],["0.54",{"_index":750,"title":{},"body":{"components/FormComponent.html":{}}}],["0.55",{"_index":212,"title":{},"body":{"components/CardComponent.html":{}}}],["0.5s",{"_index":362,"title":{},"body":{"components/DrawerComponent.html":{}}}],["0.6",{"_index":800,"title":{},"body":{"components/ListComponent.html":{}}}],["0.7.5",{"_index":972,"title":{},"body":{"dependencies.html":{}}}],["0.75em",{"_index":751,"title":{},"body":{"components/FormComponent.html":{}}}],["0.9.1",{"_index":982,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":938,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":951,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":950,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":948,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":947,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":940,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":939,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":942,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":949,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":357,"title":{},"body":{"components/DrawerComponent.html":{}}}],["0fr",{"_index":380,"title":{},"body":{"components/DrawerComponent.html":{}}}],["0s",{"_index":361,"title":{},"body":{"components/DrawerComponent.html":{}}}],["1",{"_index":371,"title":{},"body":{"components/DrawerComponent.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/ListComponent.html":{},"components/PaginationComponent.html":{},"interfaces/Store.html":{}}}],["1.0.0",{"_index":975,"title":{},"body":{"dependencies.html":{}}}],["1.15rem",{"_index":206,"title":{},"body":{"components/CardComponent.html":{}}}],["1.168rem",{"_index":209,"title":{},"body":{"components/CardComponent.html":{}}}],["1.25em",{"_index":749,"title":{},"body":{"components/FormComponent.html":{}}}],["1.2rem",{"_index":913,"title":{},"body":{"components/PaginationComponent.html":{}}}],["1.3",{"_index":204,"title":{},"body":{"components/CardComponent.html":{}}}],["1.4s",{"_index":856,"title":{},"body":{"components/LoaderComponent.html":{}}}],["1.9.0",{"_index":979,"title":{},"body":{"dependencies.html":{}}}],["1.9466666667rem",{"_index":207,"title":{},"body":{"components/CardComponent.html":{}}}],["1/13",{"_index":957,"title":{},"body":{"coverage.html":{}}}],["1/15",{"_index":953,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":955,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":959,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":944,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":946,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":603,"title":{},"body":{"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/PaginationComponent.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":746,"title":{},"body":{"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{}}}],["100vh",{"_index":353,"title":{},"body":{"components/DrawerComponent.html":{}}}],["100vw",{"_index":352,"title":{},"body":{"components/DrawerComponent.html":{}}}],["10px",{"_index":914,"title":{},"body":{"components/PaginationComponent.html":{}}}],["12",{"_index":945,"title":{},"body":{"coverage.html":{}}}],["120",{"_index":740,"title":{},"body":{"components/FormComponent.html":{}}}],["15px",{"_index":813,"title":{},"body":{"components/ListComponent.html":{}}}],["1em",{"_index":193,"title":{},"body":{"components/CardComponent.html":{}}}],["1fr",{"_index":375,"title":{},"body":{"components/DrawerComponent.html":{}}}],["1px",{"_index":810,"title":{},"body":{"components/ListComponent.html":{}}}],["1s",{"_index":829,"title":{},"body":{"components/ListComponent.html":{}}}],["2",{"_index":1114,"title":{},"body":{"overview.html":{}}}],["200",{"_index":835,"title":{},"body":{"components/ListComponent.html":{}}}],["2019",{"_index":1047,"title":{},"body":{"license.html":{}}}],["2191",{"_index":839,"title":{},"body":{"components/ListComponent.html":{}}}],["2193",{"_index":837,"title":{},"body":{"components/ListComponent.html":{}}}],["242",{"_index":808,"title":{},"body":{"components/ListComponent.html":{}}}],["25",{"_index":943,"title":{},"body":{"coverage.html":{}}}],["25px",{"_index":841,"title":{},"body":{"components/ListComponent.html":{}}}],["2em",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{}}}],["2px",{"_index":394,"title":{},"body":{"components/DrawerComponent.html":{},"components/ListComponent.html":{},"components/PaginationComponent.html":{}}}],["2rem",{"_index":919,"title":{},"body":{"components/PaginationComponent.html":{}}}],["3",{"_index":608,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["3.3.2",{"_index":980,"title":{},"body":{"dependencies.html":{}}}],["30px",{"_index":911,"title":{},"body":{"components/PaginationComponent.html":{}}}],["33",{"_index":958,"title":{},"body":{"coverage.html":{}}}],["333",{"_index":853,"title":{},"body":{"components/LoaderComponent.html":{}}}],["3em",{"_index":194,"title":{},"body":{"components/CardComponent.html":{}}}],["3f51b5",{"_index":826,"title":{},"body":{"components/ListComponent.html":{}}}],["4",{"_index":1113,"title":{},"body":{"overview.html":{}}}],["40",{"_index":866,"title":{},"body":{"components/LoaderComponent.html":{}}}],["400",{"_index":202,"title":{},"body":{"components/CardComponent.html":{},"components/PaginationComponent.html":{}}}],["444",{"_index":912,"title":{},"body":{"components/PaginationComponent.html":{}}}],["5",{"_index":645,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["50",{"_index":954,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":814,"title":{},"body":{"components/ListComponent.html":{}}}],["6",{"_index":952,"title":{},"body":{"coverage.html":{}}}],["6.4.0",{"_index":977,"title":{},"body":{"dependencies.html":{}}}],["6px",{"_index":852,"title":{},"body":{"components/LoaderComponent.html":{}}}],["7",{"_index":956,"title":{},"body":{"coverage.html":{}}}],["768px",{"_index":379,"title":{},"body":{"components/DrawerComponent.html":{}}}],["793ed839b844d7b18667156be72d7eb0471ec706",{"_index":1129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7px",{"_index":395,"title":{},"body":{"components/DrawerComponent.html":{}}}],["8.0.1",{"_index":965,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":864,"title":{},"body":{"components/LoaderComponent.html":{},"components/PaginationComponent.html":{}}}],["9",{"_index":1112,"title":{},"body":{"overview.html":{}}}],["99",{"_index":350,"title":{},"body":{"components/DrawerComponent.html":{}}}],["992px",{"_index":923,"title":{},"body":{"components/PaginationComponent.html":{}}}],["999",{"_index":918,"title":{},"body":{"components/PaginationComponent.html":{}}}],["9fr",{"_index":381,"title":{},"body":{"components/DrawerComponent.html":{}}}],["_portaloutlet",{"_index":307,"title":{},"body":{"components/DrawerComponent.html":{}}}],["a.currency",{"_index":76,"title":{},"body":{"components/AmountComponent.html":{}}}],["above",{"_index":1077,"title":{},"body":{"license.html":{}}}],["acc",{"_index":74,"title":{},"body":{"components/AmountComponent.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["acc.find((a",{"_index":75,"title":{},"body":{"components/AmountComponent.html":{}}}],["action",{"_index":1102,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":107,"title":{},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{}}}],["add",{"_index":419,"title":{},"body":{"modules/DrawerModule.html":{},"components/ListComponent.html":{},"index.html":{}}}],["addexpense",{"_index":756,"title":{},"body":{"components/ListComponent.html":{}}}],["aliases",{"_index":1117,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":817,"title":{},"body":{"components/ListComponent.html":{},"components/PaginationComponent.html":{}}}],["amount",{"_index":1,"title":{"interfaces/Amount.html":{}},"body":{"interfaces/Amount.html":{},"components/AmountComponent.html":{},"injectables/CurrencyService.html":{},"interfaces/Expense.html":{},"interfaces/ExpenseStore.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["amount'},{'name",{"_index":87,"title":{},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{}}}],["amount.amount",{"_index":78,"title":{},"body":{"components/AmountComponent.html":{}}}],["amount.component.css",{"_index":51,"title":{},"body":{"components/AmountComponent.html":{}}}],["amount.component.html",{"_index":53,"title":{},"body":{"components/AmountComponent.html":{}}}],["amount.currency",{"_index":77,"title":{},"body":{"components/AmountComponent.html":{}}}],["amount.currency:\"symbol\":undefined:\"fr",{"_index":79,"title":{},"body":{"components/AmountComponent.html":{}}}],["amount/amount.component",{"_index":507,"title":{},"body":{"modules/ExpensesModule.html":{}}}],["amountcomponent",{"_index":32,"title":{"components/AmountComponent.html":{}},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"modules/ExpensesModule.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["amountform",{"_index":680,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["amounts",{"_index":57,"title":{},"body":{"components/AmountComponent.html":{}}}],["and/or",{"_index":1069,"title":{},"body":{"license.html":{}}}],["angular",{"_index":1026,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":964,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":966,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/portal",{"_index":336,"title":{},"body":{"components/DrawerComponent.html":{},"modules/DrawerModule.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["angular/common",{"_index":256,"title":{},"body":{"modules/ConfirmButtonModule.html":{},"modules/DrawerModule.html":{},"modules/ExpensesModule.html":{},"modules/PaginationModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"injectables/CurrencyService.html":{},"injectables/ExpensesProviderService.html":{}}}],["angular/common/locales/fr",{"_index":487,"title":{},"body":{"modules/ExpensesModule.html":{}}}],["angular/compiler",{"_index":967,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":67,"title":{},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"modules/ConfirmButtonModule.html":{},"injectables/CurrencyService.html":{},"components/DrawerComponent.html":{},"modules/DrawerModule.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"modules/ExpensesModule.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PaginationComponent.html":{},"modules/PaginationModule.html":{},"interfaces/Store.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":485,"title":{},"body":{"modules/ExpensesModule.html":{},"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{},"dependencies.html":{}}}],["angular/material",{"_index":968,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":259,"title":{},"body":{"modules/ConfirmButtonModule.html":{},"modules/ExpensesModule.html":{}}}],["angular/material/chips",{"_index":500,"title":{},"body":{"modules/ExpensesModule.html":{}}}],["angular/material/core",{"_index":494,"title":{},"body":{"modules/ExpensesModule.html":{},"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["angular/material/datepicker",{"_index":489,"title":{},"body":{"modules/ExpensesModule.html":{}}}],["angular/material/form",{"_index":491,"title":{},"body":{"modules/ExpensesModule.html":{}}}],["angular/material/icon",{"_index":261,"title":{},"body":{"modules/ConfirmButtonModule.html":{}}}],["angular/material/input",{"_index":496,"title":{},"body":{"modules/ExpensesModule.html":{}}}],["angular/material/select",{"_index":498,"title":{},"body":{"modules/ExpensesModule.html":{}}}],["angular/platform",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/ExpensesModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":970,"title":{},"body":{"dependencies.html":{}}}],["animation",{"_index":828,"title":{},"body":{"components/ListComponent.html":{},"components/LoaderComponent.html":{}}}],["api",{"_index":666,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{},"index.html":{}}}],["app",{"_index":89,"title":{},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{}}}],["app.component",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":88,"title":{"components/AppComponent.html":{}},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["apple",{"_index":895,"title":{},"body":{"components/PaginationComponent.html":{}}}],["application",{"_index":989,"title":{},"body":{"index.html":{}}}],["applicationref",{"_index":433,"title":{},"body":{"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["appmodule",{"_index":117,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appref",{"_index":442,"title":{},"body":{"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["area",{"_index":391,"title":{},"body":{"components/DrawerComponent.html":{}}}],["areas",{"_index":373,"title":{},"body":{"components/DrawerComponent.html":{}}}],["arising",{"_index":1106,"title":{},"body":{"license.html":{}}}],["array(this.pagecount",{"_index":888,"title":{},"body":{"components/PaginationComponent.html":{}}}],["asc",{"_index":647,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["asobservable",{"_index":631,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["associated",{"_index":1057,"title":{},"body":{"license.html":{}}}],["attachcomponentportal",{"_index":309,"title":{},"body":{"components/DrawerComponent.html":{}}}],["attachcomponentportal(portal",{"_index":313,"title":{},"body":{"components/DrawerComponent.html":{}}}],["attachtemplateportal",{"_index":310,"title":{},"body":{"components/DrawerComponent.html":{}}}],["attachtemplateportal(portal",{"_index":319,"title":{},"body":{"components/DrawerComponent.html":{}}}],["authorization",{"_index":566,"title":{},"body":{"injectables/ExpensesProviderService.html":{},"miscellaneous/variables.html":{}}}],["authors",{"_index":1034,"title":{},"body":{"index.html":{},"license.html":{}}}],["auto",{"_index":196,"title":{},"body":{"components/CardComponent.html":{}}}],["b",{"_index":604,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["b.length",{"_index":607,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["b[1",{"_index":610,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["b[2",{"_index":611,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["b[3",{"_index":612,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["b[4",{"_index":613,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["b[5",{"_index":614,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["b[6",{"_index":615,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["background",{"_index":356,"title":{},"body":{"components/DrawerComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{}}}],["base",{"_index":287,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["baseportaloutlet",{"_index":304,"title":{},"body":{"components/DrawerComponent.html":{}}}],["bearer",{"_index":567,"title":{},"body":{"injectables/ExpensesProviderService.html":{},"miscellaneous/variables.html":{}}}],["behaviorsubject",{"_index":641,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["behaviorsubject(initialstore",{"_index":642,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["bezier(0.4",{"_index":370,"title":{},"body":{"components/DrawerComponent.html":{}}}],["blinkmacsystemfont",{"_index":897,"title":{},"body":{"components/PaginationComponent.html":{}}}],["block",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DrawerComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{}}}],["bodyportalhost",{"_index":441,"title":{},"body":{"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["boolean",{"_index":230,"title":{},"body":{"components/ConfirmButtonComponent.html":{},"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["bootstrap",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfirmButtonModule.html":{},"modules/DrawerModule.html":{},"modules/ExpensesModule.html":{},"modules/PaginationModule.html":{},"overview.html":{}}}],["border",{"_index":748,"title":{},"body":{"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{}}}],["both",{"_index":858,"title":{},"body":{"components/LoaderComponent.html":{}}}],["bottom",{"_index":355,"title":{},"body":{"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{}}}],["bounce1",{"_index":859,"title":{},"body":{"components/LoaderComponent.html":{}}}],["bounce2",{"_index":862,"title":{},"body":{"components/LoaderComponent.html":{}}}],["bouncedelay",{"_index":855,"title":{},"body":{"components/LoaderComponent.html":{}}}],["box",{"_index":392,"title":{},"body":{"components/DrawerComponent.html":{}}}],["browse",{"_index":1110,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser/animations",{"_index":483,"title":{},"body":{"modules/ExpensesModule.html":{}}}],["browseranimationsmodule",{"_index":482,"title":{},"body":{"modules/ExpensesModule.html":{}}}],["browsermodule",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1020,"title":{},"body":{"index.html":{}}}],["buildurl",{"_index":514,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["buildurl(queryparams",{"_index":527,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["built",{"_index":1025,"title":{},"body":{"index.html":{}}}],["bulma",{"_index":971,"title":{},"body":{"dependencies.html":{}}}],["business",{"_index":995,"title":{},"body":{"index.html":{}}}],["button",{"_index":216,"title":{},"body":{"components/ConfirmButtonComponent.html":{}}}],["button'},{'name",{"_index":95,"title":{},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{}}}],["button.closed",{"_index":243,"title":{},"body":{"components/ConfirmButtonComponent.html":{}}}],["button.component",{"_index":257,"title":{},"body":{"modules/ConfirmButtonModule.html":{}}}],["button.component.css",{"_index":217,"title":{},"body":{"components/ConfirmButtonComponent.html":{}}}],["button.component.html",{"_index":218,"title":{},"body":{"components/ConfirmButtonComponent.html":{}}}],["button.component.ts",{"_index":215,"title":{},"body":{"components/ConfirmButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:15",{"_index":225,"title":{},"body":{"components/ConfirmButtonComponent.html":{}}}],["button.component.ts:16",{"_index":226,"title":{},"body":{"components/ConfirmButtonComponent.html":{}}}],["button.component.ts:18",{"_index":234,"title":{},"body":{"components/ConfirmButtonComponent.html":{}}}],["button.component.ts:20",{"_index":229,"title":{},"body":{"components/ConfirmButtonComponent.html":{}}}],["button.component.ts:24",{"_index":228,"title":{},"body":{"components/ConfirmButtonComponent.html":{}}}],["button.component.ts:28",{"_index":227,"title":{},"body":{"components/ConfirmButtonComponent.html":{}}}],["button.module",{"_index":506,"title":{},"body":{"modules/ExpensesModule.html":{}}}],["button.module.ts",{"_index":254,"title":{},"body":{"modules/ConfirmButtonModule.html":{}}}],["button.one",{"_index":241,"title":{},"body":{"components/ConfirmButtonComponent.html":{}}}],["button/confirm",{"_index":214,"title":{},"body":{"components/ConfirmButtonComponent.html":{},"modules/ConfirmButtonModule.html":{},"modules/ExpensesModule.html":{},"coverage.html":{}}}],["c",{"_index":322,"title":{},"body":{"components/DrawerComponent.html":{},"license.html":{}}}],["cache",{"_index":290,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["calc(100vh",{"_index":198,"title":{},"body":{"components/CardComponent.html":{}}}],["cancel",{"_index":150,"title":{},"body":{"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["cantarell",{"_index":904,"title":{},"body":{"components/PaginationComponent.html":{}}}],["card",{"_index":152,"title":{},"body":{"components/CardComponent.html":{}}}],["card'},{'name",{"_index":92,"title":{},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{}}}],["card.component.css",{"_index":153,"title":{},"body":{"components/CardComponent.html":{}}}],["card.component.html",{"_index":154,"title":{},"body":{"components/CardComponent.html":{}}}],["card/card.component",{"_index":502,"title":{},"body":{"modules/ExpensesModule.html":{},"components/ListComponent.html":{}}}],["cardcomponent",{"_index":91,"title":{"components/CardComponent.html":{}},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"modules/DrawerModule.html":{},"modules/ExpensesModule.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["catcherror",{"_index":560,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["catcherror(this.error",{"_index":577,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["cdkportaloutlet",{"_index":329,"title":{},"body":{"components/DrawerComponent.html":{}}}],["cell",{"_index":815,"title":{},"body":{"components/ListComponent.html":{}}}],["center",{"_index":910,"title":{},"body":{"components/PaginationComponent.html":{}}}],["change",{"_index":1021,"title":{},"body":{"index.html":{}}}],["changedetection",{"_index":46,"title":{},"body":{"components/AmountComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PaginationComponent.html":{}}}],["changedetectionstrategy",{"_index":65,"title":{},"body":{"components/AmountComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PaginationComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":47,"title":{},"body":{"components/AmountComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PaginationComponent.html":{}}}],["char",{"_index":741,"title":{},"body":{"components/FormComponent.html":{}}}],["charge",{"_index":1052,"title":{},"body":{"license.html":{}}}],["claim",{"_index":1098,"title":{},"body":{"license.html":{}}}],["class",{"_index":68,"title":{"classes/DrawerRef.html":{},"classes/MyErrorStateMatcher.html":{}},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"modules/ConfirmButtonModule.html":{},"injectables/CurrencyService.html":{},"components/DrawerComponent.html":{},"modules/DrawerModule.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"modules/ExpensesModule.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PaginationComponent.html":{},"modules/PaginationModule.html":{},"interfaces/Store.html":{},"coverage.html":{}}}],["classes",{"_index":424,"title":{},"body":{"classes/DrawerRef.html":{},"classes/MyErrorStateMatcher.html":{},"overview.html":{}}}],["cli",{"_index":1029,"title":{},"body":{"index.html":{}}}],["close",{"_index":148,"title":{},"body":{"components/CardComponent.html":{},"components/DrawerComponent.html":{},"modules/DrawerModule.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["close(data",{"_index":324,"title":{},"body":{"components/DrawerComponent.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["cluster_appmodule",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_confirmbuttonmodule",{"_index":251,"title":{},"body":{"modules/ConfirmButtonModule.html":{},"overview.html":{}}}],["cluster_confirmbuttonmodule_declarations",{"_index":252,"title":{},"body":{"modules/ConfirmButtonModule.html":{},"overview.html":{}}}],["cluster_confirmbuttonmodule_exports",{"_index":253,"title":{},"body":{"modules/ConfirmButtonModule.html":{},"overview.html":{}}}],["cluster_drawermodule",{"_index":397,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_drawermodule_declarations",{"_index":398,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_expensesmodule",{"_index":474,"title":{},"body":{"modules/ExpensesModule.html":{},"overview.html":{}}}],["cluster_expensesmodule_declarations",{"_index":475,"title":{},"body":{"modules/ExpensesModule.html":{},"overview.html":{}}}],["cluster_expensesmodule_exports",{"_index":477,"title":{},"body":{"modules/ExpensesModule.html":{},"overview.html":{}}}],["cluster_expensesmodule_imports",{"_index":476,"title":{},"body":{"modules/ExpensesModule.html":{},"overview.html":{}}}],["cluster_paginationmodule",{"_index":929,"title":{},"body":{"modules/PaginationModule.html":{},"overview.html":{}}}],["cluster_paginationmodule_declarations",{"_index":930,"title":{},"body":{"modules/PaginationModule.html":{},"overview.html":{}}}],["cluster_paginationmodule_exports",{"_index":931,"title":{},"body":{"modules/PaginationModule.html":{},"overview.html":{}}}],["code",{"_index":288,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["collapse",{"_index":797,"title":{},"body":{"components/ListComponent.html":{}}}],["color",{"_index":210,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{}}}],["column",{"_index":386,"title":{},"body":{"components/DrawerComponent.html":{}}}],["columns",{"_index":374,"title":{},"body":{"components/DrawerComponent.html":{}}}],["comment",{"_index":22,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/Expense.html":{},"interfaces/ExpenseStore.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["commonmodule",{"_index":255,"title":{},"body":{"modules/ConfirmButtonModule.html":{},"modules/DrawerModule.html":{},"modules/ExpensesModule.html":{},"modules/PaginationModule.html":{}}}],["component",{"_index":31,"title":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{}},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"modules/DrawerModule.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PaginationComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":85,"title":{},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{}}}],["componentfactoryresolver",{"_index":432,"title":{},"body":{"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["componentportal",{"_index":314,"title":{},"body":{"components/DrawerComponent.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["componentportal(componentref",{"_index":455,"title":{},"body":{"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["componentportal(drawercomponent",{"_index":453,"title":{},"body":{"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["componentref",{"_index":318,"title":{},"body":{"components/DrawerComponent.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["components",{"_index":33,"title":{},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{},"index.html":{},"overview.html":{}}}],["componenttype",{"_index":436,"title":{},"body":{"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["conditions",{"_index":1076,"title":{},"body":{"license.html":{}}}],["config",{"_index":1033,"title":{},"body":{"index.html":{}}}],["confirm",{"_index":94,"title":{},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"modules/ConfirmButtonModule.html":{},"components/DrawerComponent.html":{},"modules/ExpensesModule.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{}}}],["confirmbuttoncomponent",{"_index":93,"title":{"components/ConfirmButtonComponent.html":{}},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"modules/ConfirmButtonModule.html":{},"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["confirmbuttonmodule",{"_index":250,"title":{"modules/ConfirmButtonModule.html":{}},"body":{"modules/ConfirmButtonModule.html":{},"modules/ExpensesModule.html":{},"modules.html":{},"overview.html":{}}}],["connection",{"_index":145,"title":{},"body":{"components/CardComponent.html":{},"license.html":{}}}],["console.error(\"error",{"_index":597,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["console.log(token",{"_index":564,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["const",{"_index":282,"title":{},"body":{"injectables/CurrencyService.html":{},"modules/DrawerModule.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"classes/MyErrorStateMatcher.html":{},"interfaces/Store.html":{}}}],["constructor",{"_index":58,"title":{},"body":{"components/AmountComponent.html":{},"components/CardComponent.html":{},"injectables/CurrencyService.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{}}}],["constructor(componentfactoryresolver",{"_index":466,"title":{},"body":{"injectables/DrawerService.html":{}}}],["constructor(containerref",{"_index":427,"title":{},"body":{"classes/DrawerRef.html":{}}}],["constructor(currencyservice",{"_index":686,"title":{},"body":{"components/FormComponent.html":{}}}],["constructor(expenseservice",{"_index":159,"title":{},"body":{"components/CardComponent.html":{}}}],["constructor(expensesprovider",{"_index":620,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["constructor(expensesservice",{"_index":760,"title":{},"body":{"components/ListComponent.html":{}}}],["constructor(http",{"_index":267,"title":{},"body":{"injectables/CurrencyService.html":{},"injectables/ExpensesProviderService.html":{}}}],["constructor(private",{"_index":291,"title":{},"body":{"injectables/CurrencyService.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{},"interfaces/Store.html":{}}}],["constructor(public",{"_index":440,"title":{},"body":{"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["contain",{"_index":389,"title":{},"body":{"components/DrawerComponent.html":{}}}],["container",{"_index":143,"title":{},"body":{"components/CardComponent.html":{}}}],["containerref",{"_index":426,"title":{},"body":{"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["content",{"_index":390,"title":{},"body":{"components/DrawerComponent.html":{},"components/ListComponent.html":{}}}],["contract",{"_index":1103,"title":{},"body":{"license.html":{}}}],["control",{"_index":710,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["control.dirty",{"_index":718,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["control.invalid",{"_index":717,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["control.touched",{"_index":719,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["convert",{"_index":265,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["convert(amount",{"_index":271,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["convertalltoexpense",{"_index":515,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["convertalltoexpense(expenses",{"_index":530,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["converted",{"_index":744,"title":{},"body":{"components/FormComponent.html":{}}}],["convertedamount",{"_index":21,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/Expense.html":{},"interfaces/ExpenseStore.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["convertedform",{"_index":681,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["convertfromexpense",{"_index":516,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["convertfromexpense(expense",{"_index":533,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["converttoexpense",{"_index":517,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["converttoexpense(expense",{"_index":535,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["copies",{"_index":1071,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1055,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1046,"title":{},"body":{"license.html":{}}}],["count",{"_index":27,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/Expense.html":{},"interfaces/ExpenseStore.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":934,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":793,"title":{},"body":{"components/ListComponent.html":{},"index.html":{}}}],["createdat",{"_index":23,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/Expense.html":{},"interfaces/ExpenseStore.html":{},"injectables/ExpensesService.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["createinjector",{"_index":462,"title":{},"body":{"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["createinjector(drawerref",{"_index":469,"title":{},"body":{"injectables/DrawerService.html":{}}}],["css",{"_index":974,"title":{},"body":{"dependencies.html":{}}}],["cubic",{"_index":369,"title":{},"body":{"components/DrawerComponent.html":{}}}],["currencies",{"_index":71,"title":{},"body":{"components/AmountComponent.html":{},"components/CardComponent.html":{},"injectables/CurrencyService.html":{},"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["currency",{"_index":9,"title":{},"body":{"interfaces/Amount.html":{},"components/AmountComponent.html":{},"interfaces/Expense.html":{},"interfaces/ExpenseStore.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["currency.service",{"_index":181,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["currencyapi",{"_index":1130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currencyservice",{"_index":161,"title":{"injectables/CurrencyService.html":{}},"body":{"components/CardComponent.html":{},"injectables/CurrencyService.html":{},"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["currencyurl",{"_index":284,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["currentpage",{"_index":879,"title":{},"body":{"components/PaginationComponent.html":{}}}],["cursor",{"_index":832,"title":{},"body":{"components/ListComponent.html":{},"components/PaginationComponent.html":{}}}],["damages",{"_index":1099,"title":{},"body":{"license.html":{}}}],["data",{"_index":326,"title":{},"body":{"components/DrawerComponent.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["date",{"_index":18,"title":{},"body":{"interfaces/Amount.html":{},"injectables/CurrencyService.html":{},"interfaces/Expense.html":{},"interfaces/ExpenseStore.html":{},"injectables/ExpensesProviderService.html":{},"components/ListComponent.html":{}}}],["date(date.utc(b[0",{"_index":609,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["deal",{"_index":1059,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1107,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfirmButtonModule.html":{},"modules/DrawerModule.html":{},"modules/ExpensesModule.html":{},"modules/PaginationModule.html":{},"overview.html":{}}}],["decoration",{"_index":830,"title":{},"body":{"components/ListComponent.html":{}}}],["decorators",{"_index":171,"title":{},"body":{"components/CardComponent.html":{},"components/DrawerComponent.html":{}}}],["default",{"_index":231,"title":{},"body":{"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"classes/DrawerRef.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/PaginationComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":59,"title":{},"body":{"components/AmountComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"injectables/CurrencyService.html":{},"components/DrawerComponent.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PaginationComponent.html":{}}}],["delay",{"_index":860,"title":{},"body":{"components/LoaderComponent.html":{}}}],["dependencies",{"_index":119,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfirmButtonModule.html":{},"modules/DrawerModule.html":{},"modules/ExpensesModule.html":{},"modules/PaginationModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depends",{"_index":417,"title":{},"body":{"modules/DrawerModule.html":{}}}],["desc",{"_index":650,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["description",{"_index":39,"title":{},"body":{"components/AmountComponent.html":{},"components/CardComponent.html":{},"modules/DrawerModule.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PaginationComponent.html":{}}}],["design",{"_index":1031,"title":{},"body":{"index.html":{}}}],["details",{"_index":1044,"title":{},"body":{"index.html":{}}}],["dev.net/api/expenseitems",{"_index":1128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":1009,"title":{},"body":{"index.html":{}}}],["direction",{"_index":544,"title":{},"body":{"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/ListComponent.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["direction].filter(x",{"_index":572,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["directive",{"_index":83,"title":{},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{}}}],["directives",{"_index":106,"title":{},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{}}}],["dirty",{"_index":711,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["display",{"_index":40,"title":{},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"modules/DrawerModule.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{}}}],["displayconverted",{"_index":682,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["displayed",{"_index":409,"title":{},"body":{"modules/DrawerModule.html":{},"components/PaginationComponent.html":{}}}],["distribute",{"_index":1067,"title":{},"body":{"license.html":{}}}],["div",{"_index":248,"title":{},"body":{"components/ConfirmButtonComponent.html":{},"components/LoaderComponent.html":{}}}],["document.body",{"_index":444,"title":{},"body":{"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["documentation",{"_index":935,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":36,"title":{},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{}}}],["domportalhost",{"_index":438,"title":{},"body":{"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["drawer",{"_index":149,"title":{},"body":{"components/CardComponent.html":{},"components/DrawerComponent.html":{},"modules/DrawerModule.html":{},"components/ListComponent.html":{}}}],["drawer'},{'name",{"_index":97,"title":{},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{}}}],["drawer.component.css",{"_index":305,"title":{},"body":{"components/DrawerComponent.html":{}}}],["drawer.component.html",{"_index":306,"title":{},"body":{"components/DrawerComponent.html":{}}}],["drawer.open",{"_index":382,"title":{},"body":{"components/DrawerComponent.html":{}}}],["drawer/drawer.component",{"_index":422,"title":{},"body":{"modules/DrawerModule.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["drawer/drawer.module",{"_index":407,"title":{},"body":{"modules/DrawerModule.html":{},"modules/ExpensesModule.html":{}}}],["drawer/drawer.service",{"_index":178,"title":{},"body":{"components/CardComponent.html":{},"components/ListComponent.html":{}}}],["drawer_data",{"_index":177,"title":{},"body":{"components/CardComponent.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["drawercomponent",{"_index":96,"title":{"components/DrawerComponent.html":{}},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"modules/DrawerModule.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["drawermodule",{"_index":396,"title":{"modules/DrawerModule.html":{}},"body":{"modules/DrawerModule.html":{},"modules/ExpensesModule.html":{},"modules.html":{},"overview.html":{}}}],["drawerref",{"_index":411,"title":{"classes/DrawerRef.html":{}},"body":{"modules/DrawerModule.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"components/ListComponent.html":{},"coverage.html":{}}}],["drawerref(this.containerref",{"_index":449,"title":{},"body":{"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["drawerref.close(data",{"_index":459,"title":{},"body":{"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["drawerref.onmodalclose().subscribe((expense",{"_index":782,"title":{},"body":{"components/ListComponent.html":{}}}],["drawerref.onmodalclose().subscribe((response",{"_index":415,"title":{},"body":{"modules/DrawerModule.html":{}}}],["drawerservice",{"_index":162,"title":{"injectables/DrawerService.html":{}},"body":{"components/CardComponent.html":{},"modules/DrawerModule.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"components/ListComponent.html":{},"coverage.html":{}}}],["drawerservice.close(response",{"_index":420,"title":{},"body":{"modules/DrawerModule.html":{}}}],["duplicate",{"_index":70,"title":{},"body":{"components/AmountComponent.html":{}}}],["during",{"_index":1015,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":969,"title":{},"body":{"dependencies.html":{}}}],["ease",{"_index":805,"title":{},"body":{"components/ListComponent.html":{},"components/LoaderComponent.html":{}}}],["edit",{"_index":191,"title":{},"body":{"components/CardComponent.html":{},"injectables/ExpensesService.html":{},"components/ListComponent.html":{},"interfaces/Store.html":{}}}],["edit&nbsp",{"_index":791,"title":{},"body":{"components/ListComponent.html":{}}}],["editexpense",{"_index":757,"title":{},"body":{"components/ListComponent.html":{}}}],["editexpense(expense",{"_index":763,"title":{},"body":{"components/ListComponent.html":{}}}],["edition",{"_index":1008,"title":{},"body":{"index.html":{}}}],["ee6e73",{"_index":916,"title":{},"body":{"components/PaginationComponent.html":{}}}],["element",{"_index":82,"title":{},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{}}}],["embeddedviewref",{"_index":323,"title":{},"body":{"components/DrawerComponent.html":{}}}],["emulated",{"_index":1016,"title":{},"body":{"index.html":{}}}],["enter",{"_index":994,"title":{},"body":{"index.html":{}}}],["entities",{"_index":632,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["entities[key",{"_index":634,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["entrycomponents",{"_index":404,"title":{},"body":{"modules/DrawerModule.html":{},"modules/ExpensesModule.html":{}}}],["environment",{"_index":276,"title":{},"body":{"injectables/CurrencyService.html":{},"injectables/ExpensesProviderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.currencyapi",{"_index":285,"title":{},"body":{"injectables/CurrencyService.html":{},"miscellaneous/variables.html":{}}}],["environment.expenseapi",{"_index":563,"title":{},"body":{"injectables/ExpensesProviderService.html":{},"miscellaneous/variables.html":{}}}],["environment.prod.ts",{"_index":1022,"title":{},"body":{"index.html":{}}}],["environments/environment",{"_index":277,"title":{},"body":{"injectables/CurrencyService.html":{},"injectables/ExpensesProviderService.html":{}}}],["error",{"_index":518,"title":{},"body":{"injectables/ExpensesProviderService.html":{},"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["error(\"already",{"_index":343,"title":{},"body":{"components/DrawerComponent.html":{}}}],["error(error",{"_index":537,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["errorstatematcher",{"_index":708,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["eur",{"_index":293,"title":{},"body":{"injectables/CurrencyService.html":{},"components/ListComponent.html":{}}}],["event",{"_index":1095,"title":{},"body":{"license.html":{}}}],["eventemitter",{"_index":224,"title":{},"body":{"components/ConfirmButtonComponent.html":{},"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PaginationComponent.html":{}}}],["expense",{"_index":15,"title":{"interfaces/Expense.html":{}},"body":{"interfaces/Amount.html":{},"components/AmountComponent.html":{},"components/CardComponent.html":{},"modules/DrawerModule.html":{},"interfaces/Expense.html":{},"interfaces/ExpenseStore.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"classes/MyErrorStateMatcher.html":{},"interfaces/Store.html":{},"coverage.html":{},"index.html":{}}}],["expense.comment",{"_index":790,"title":{},"body":{"components/ListComponent.html":{}}}],["expense.createdat",{"_index":581,"title":{},"body":{"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["expense.id",{"_index":660,"title":{},"body":{"injectables/ExpensesService.html":{},"components/ListComponent.html":{},"interfaces/Store.html":{}}}],["expense.nature",{"_index":789,"title":{},"body":{"components/ListComponent.html":{}}}],["expense.purchasedon",{"_index":788,"title":{},"body":{"components/ListComponent.html":{}}}],["expense.purchasedon.toisostring().substr(0",{"_index":602,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["expenseapi",{"_index":1126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expenses",{"_index":532,"title":{},"body":{"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/ListComponent.html":{},"interfaces/Store.html":{},"index.html":{}}}],["expenses.map(expense",{"_index":599,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["expenses.provider.service",{"_index":644,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["expenses.service",{"_index":179,"title":{},"body":{"components/CardComponent.html":{},"components/ListComponent.html":{}}}],["expenses/expenses.module",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["expenseservice",{"_index":146,"title":{},"body":{"components/CardComponent.html":{}}}],["expensesmodule",{"_index":128,"title":{"modules/ExpensesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ExpensesModule.html":{},"modules.html":{},"overview.html":{}}}],["expensesprovider",{"_index":622,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["expensesproviderservice",{"_index":512,"title":{"injectables/ExpensesProviderService.html":{}},"body":{"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"interfaces/Store.html":{},"coverage.html":{}}}],["expensesservice",{"_index":160,"title":{"injectables/ExpensesService.html":{}},"body":{"components/CardComponent.html":{},"injectables/ExpensesService.html":{},"components/ListComponent.html":{},"interfaces/Store.html":{},"coverage.html":{}}}],["expensestore",{"_index":25,"title":{"interfaces/ExpenseStore.html":{}},"body":{"interfaces/Amount.html":{},"interfaces/Expense.html":{},"interfaces/ExpenseStore.html":{},"coverage.html":{}}}],["expensesub",{"_index":157,"title":{},"body":{"components/CardComponent.html":{}}}],["export",{"_index":14,"title":{},"body":{"interfaces/Amount.html":{},"components/AmountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"modules/ConfirmButtonModule.html":{},"injectables/CurrencyService.html":{},"components/DrawerComponent.html":{},"modules/DrawerModule.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"interfaces/Expense.html":{},"interfaces/ExpenseStore.html":{},"modules/ExpensesModule.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PaginationComponent.html":{},"modules/PaginationModule.html":{},"interfaces/Store.html":{}}}],["exports",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfirmButtonModule.html":{},"modules/DrawerModule.html":{},"modules/ExpensesModule.html":{},"modules/PaginationModule.html":{},"overview.html":{}}}],["express",{"_index":1086,"title":{},"body":{"license.html":{}}}],["extends",{"_index":303,"title":{},"body":{"components/DrawerComponent.html":{}}}],["false",{"_index":233,"title":{},"body":{"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":894,"title":{},"body":{"components/PaginationComponent.html":{}}}],["fetchexpense",{"_index":619,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["fetchexpense(undefined",{"_index":623,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["fff",{"_index":388,"title":{},"body":{"components/DrawerComponent.html":{},"components/PaginationComponent.html":{}}}],["field",{"_index":492,"title":{},"body":{"modules/ExpensesModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Amount.html":{},"components/AmountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"modules/ConfirmButtonModule.html":{},"injectables/CurrencyService.html":{},"components/DrawerComponent.html":{},"modules/DrawerModule.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"interfaces/Expense.html":{},"interfaces/ExpenseStore.html":{},"modules/ExpensesModule.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PaginationComponent.html":{},"modules/PaginationModule.html":{},"interfaces/Store.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":1058,"title":{},"body":{"license.html":{}}}],["fill(0",{"_index":889,"title":{},"body":{"components/PaginationComponent.html":{}}}],["fitness",{"_index":1091,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":348,"title":{},"body":{"components/DrawerComponent.html":{}}}],["flex",{"_index":384,"title":{},"body":{"components/DrawerComponent.html":{}}}],["float",{"_index":922,"title":{},"body":{"components/PaginationComponent.html":{}}}],["flow",{"_index":385,"title":{},"body":{"components/DrawerComponent.html":{}}}],["following",{"_index":1075,"title":{},"body":{"license.html":{}}}],["font",{"_index":200,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/PaginationComponent.html":{}}}],["forget",{"_index":418,"title":{},"body":{"modules/DrawerModule.html":{}}}],["form",{"_index":144,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["form'},{'name",{"_index":99,"title":{},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{}}}],["form.component.css",{"_index":678,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["form.component.html",{"_index":679,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["form.submitted",{"_index":716,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["form/form.component",{"_index":503,"title":{},"body":{"modules/ExpensesModule.html":{}}}],["formcomponent",{"_index":98,"title":{"components/FormComponent.html":{}},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"modules/ExpensesModule.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PaginationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["formcontrol",{"_index":702,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["formgroup",{"_index":695,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["formgroupdirective",{"_index":704,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["found",{"_index":667,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["fr",{"_index":511,"title":{},"body":{"modules/ExpensesModule.html":{}}}],["framework",{"_index":1028,"title":{},"body":{"index.html":{}}}],["free",{"_index":1051,"title":{},"body":{"license.html":{}}}],["fromcurrency",{"_index":272,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["full",{"_index":745,"title":{},"body":{"components/FormComponent.html":{}}}],["furnished",{"_index":1074,"title":{},"body":{"license.html":{}}}],["get(`${currencyurl}?base=${fromcurrency}&symbols=${tocurrency",{"_index":299,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["get(`${url}/${id",{"_index":578,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["get(u",{"_index":574,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["getcurrencies",{"_index":266,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["getexpense",{"_index":519,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["getexpense(id",{"_index":539,"title":{},"body":{"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["getexpenses",{"_index":520,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["getexpenses(page",{"_index":541,"title":{},"body":{"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["getting",{"_index":983,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["given",{"_index":403,"title":{},"body":{"modules/DrawerModule.html":{},"index.html":{}}}],["good",{"_index":1005,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1050,"title":{},"body":{"license.html":{}}}],["grid",{"_index":372,"title":{},"body":{"components/DrawerComponent.html":{}}}],["h3",{"_index":199,"title":{},"body":{"components/CardComponent.html":{}}}],["headers",{"_index":565,"title":{},"body":{"injectables/ExpensesProviderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":197,"title":{},"body":{"components/CardComponent.html":{},"components/DrawerComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{}}}],["helvetica",{"_index":905,"title":{},"body":{"components/PaginationComponent.html":{}}}],["here",{"_index":413,"title":{},"body":{"modules/DrawerModule.html":{}}}],["hereby",{"_index":1049,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":249,"title":{},"body":{"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/PaginationComponent.html":{}}}],["hiring",{"_index":990,"title":{},"body":{"index.html":{}}}],["holders",{"_index":1096,"title":{},"body":{"license.html":{}}}],["host",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/PaginationComponent.html":{}}}],["html",{"_index":81,"title":{},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{}}}],["html/css",{"_index":844,"title":{},"body":{"components/LoaderComponent.html":{}}}],["http",{"_index":270,"title":{},"body":{"injectables/CurrencyService.html":{},"injectables/ExpensesProviderService.html":{}}}],["http://localhost:3000/expenseitems",{"_index":1132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1014,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":268,"title":{},"body":{"injectables/CurrencyService.html":{},"injectables/ExpensesProviderService.html":{}}}],["httpclientmodule",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":558,"title":{},"body":{"injectables/ExpensesProviderService.html":{},"miscellaneous/variables.html":{}}}],["https://api.exchangeratesapi.io/latest",{"_index":1131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://mobile.ilucca",{"_index":1127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i18n",{"_index":1003,"title":{},"body":{"index.html":{}}}],["id",{"_index":16,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/Expense.html":{},"interfaces/ExpenseStore.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/ListComponent.html":{},"interfaces/Store.html":{}}}],["idea",{"_index":1006,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":936,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":43,"title":{},"body":{"components/AmountComponent.html":{},"components/CardComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PaginationComponent.html":{}}}],["implied",{"_index":1087,"title":{},"body":{"license.html":{}}}],["import",{"_index":64,"title":{},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"modules/ConfirmButtonModule.html":{},"injectables/CurrencyService.html":{},"components/DrawerComponent.html":{},"modules/DrawerModule.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"modules/ExpensesModule.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PaginationComponent.html":{},"modules/PaginationModule.html":{},"interfaces/Store.html":{}}}],["imports",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfirmButtonModule.html":{},"modules/DrawerModule.html":{},"modules/ExpensesModule.html":{},"modules/PaginationModule.html":{}}}],["included",{"_index":1080,"title":{},"body":{"license.html":{}}}],["including",{"_index":1007,"title":{},"body":{"index.html":{},"license.html":{}}}],["incomplete",{"_index":986,"title":{},"body":{"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Amount.html":{},"components/AmountComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"injectables/CurrencyService.html":{},"components/DrawerComponent.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"interfaces/Expense.html":{},"interfaces/ExpenseStore.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PaginationComponent.html":{},"interfaces/Store.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["infinite",{"_index":857,"title":{},"body":{"components/LoaderComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Amount.html":{},"components/AmountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"modules/ConfirmButtonModule.html":{},"injectables/CurrencyService.html":{},"components/DrawerComponent.html":{},"modules/DrawerModule.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"interfaces/Expense.html":{},"interfaces/ExpenseStore.html":{},"modules/ExpensesModule.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PaginationComponent.html":{},"modules/PaginationModule.html":{},"interfaces/Store.html":{}}}],["informations",{"_index":41,"title":{},"body":{"components/AmountComponent.html":{},"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["inherit",{"_index":827,"title":{},"body":{"components/ListComponent.html":{}}}],["initialstore",{"_index":646,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":176,"title":{},"body":{"components/CardComponent.html":{}}}],["inject(drawer_data",{"_index":172,"title":{},"body":{"components/CardComponent.html":{}}}],["injectable",{"_index":262,"title":{"injectables/CurrencyService.html":{},"injectables/DrawerService.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{}},"body":{"injectables/CurrencyService.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"interfaces/Store.html":{},"coverage.html":{}}}],["injectables",{"_index":263,"title":{},"body":{"injectables/CurrencyService.html":{},"injectables/DrawerService.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"overview.html":{}}}],["injectiontoken",{"_index":435,"title":{},"body":{"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["injectiontoken(\"portaldata",{"_index":439,"title":{},"body":{"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":434,"title":{},"body":{"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["injectortokens",{"_index":463,"title":{},"body":{"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["inline",{"_index":247,"title":{},"body":{"components/ConfirmButtonComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{}}}],["input",{"_index":66,"title":{},"body":{"components/AmountComponent.html":{},"components/DrawerComponent.html":{},"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PaginationComponent.html":{}}}],["inputs",{"_index":56,"title":{},"body":{"components/AmountComponent.html":{},"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/PaginationComponent.html":{}}}],["inside",{"_index":412,"title":{},"body":{"modules/DrawerModule.html":{}}}],["install",{"_index":1011,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Amount.html":{},"interfaces/Expense.html":{},"interfaces/ExpenseStore.html":{},"interfaces/Store.html":{}},"body":{"interfaces/Amount.html":{},"interfaces/Expense.html":{},"interfaces/ExpenseStore.html":{},"injectables/ExpensesService.html":{},"interfaces/Store.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/Expense.html":{},"interfaces/ExpenseStore.html":{},"interfaces/Store.html":{},"overview.html":{}}}],["invalid",{"_index":709,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["iserrorstate",{"_index":714,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["iserrorstate(control",{"_index":868,"title":{},"body":{"classes/MyErrorStateMatcher.html":{}}}],["isnewexpense",{"_index":669,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["issubmitted",{"_index":715,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["items",{"_index":26,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/Expense.html":{},"interfaces/ExpenseStore.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["items.reduce",{"_index":659,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["itemsperpage",{"_index":638,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["javascript",{"_index":406,"title":{},"body":{"modules/DrawerModule.html":{}}}],["join",{"_index":593,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["json",{"_index":1018,"title":{},"body":{"index.html":{}}}],["key",{"_index":587,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["keyframes",{"_index":824,"title":{},"body":{"components/ListComponent.html":{},"components/LoaderComponent.html":{}}}],["key}=${queryparams[key",{"_index":592,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["kind",{"_index":1085,"title":{},"body":{"license.html":{}}}],["lastmodifiedat",{"_index":24,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/Expense.html":{},"interfaces/ExpenseStore.html":{}}}],["left",{"_index":242,"title":{},"body":{"components/ConfirmButtonComponent.html":{},"components/ListComponent.html":{}}}],["legend",{"_index":80,"title":{},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"modules/ConfirmButtonModule.html":{},"components/DrawerComponent.html":{},"modules/DrawerModule.html":{},"modules/ExpensesModule.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{},"modules/PaginationModule.html":{},"overview.html":{}}}],["li",{"_index":909,"title":{},"body":{"components/PaginationComponent.html":{}}}],["li.active",{"_index":915,"title":{},"body":{"components/PaginationComponent.html":{}}}],["li.disabled",{"_index":917,"title":{},"body":{"components/PaginationComponent.html":{}}}],["li.next",{"_index":925,"title":{},"body":{"components/PaginationComponent.html":{}}}],["li.pages",{"_index":920,"title":{},"body":{"components/PaginationComponent.html":{}}}],["li.prev",{"_index":924,"title":{},"body":{"components/PaginationComponent.html":{}}}],["liability",{"_index":1100,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1097,"title":{},"body":{"license.html":{}}}],["license",{"_index":1037,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["license.md",{"_index":1043,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":1039,"title":{},"body":{"index.html":{}}}],["limit",{"_index":542,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["limitation",{"_index":1062,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1088,"title":{},"body":{"license.html":{}}}],["line",{"_index":203,"title":{},"body":{"components/CardComponent.html":{},"components/PaginationComponent.html":{}}}],["linear",{"_index":363,"title":{},"body":{"components/DrawerComponent.html":{}}}],["list",{"_index":42,"title":{},"body":{"components/AmountComponent.html":{},"injectables/ExpensesService.html":{},"components/ListComponent.html":{},"interfaces/Store.html":{}}}],["list'},{'name",{"_index":101,"title":{},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{}}}],["list.component.css",{"_index":753,"title":{},"body":{"components/ListComponent.html":{}}}],["list.component.html",{"_index":754,"title":{},"body":{"components/ListComponent.html":{}}}],["list/list.component",{"_index":501,"title":{},"body":{"modules/ExpensesModule.html":{}}}],["listcomponent",{"_index":100,"title":{"components/ListComponent.html":{}},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"modules/ExpensesModule.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["literal",{"_index":473,"title":{},"body":{"interfaces/ExpenseStore.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"interfaces/Store.html":{},"miscellaneous/typealiases.html":{}}}],["loader",{"_index":845,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader'},{'name",{"_index":103,"title":{},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{}}}],["loader.component.css",{"_index":847,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.component.html",{"_index":848,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader/loader.component",{"_index":505,"title":{},"body":{"modules/ExpensesModule.html":{}}}],["loadercomponent",{"_index":102,"title":{"components/LoaderComponent.html":{}},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"modules/ExpensesModule.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loading",{"_index":683,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["local",{"_index":408,"title":{},"body":{"modules/DrawerModule.html":{}}}],["locale_id",{"_index":480,"title":{},"body":{"modules/ExpensesModule.html":{}}}],["localefr",{"_index":486,"title":{},"body":{"modules/ExpensesModule.html":{}}}],["logic",{"_index":846,"title":{},"body":{"components/LoaderComponent.html":{}}}],["long",{"_index":742,"title":{},"body":{"components/FormComponent.html":{}}}],["mandatory",{"_index":739,"title":{},"body":{"components/FormComponent.html":{}}}],["map",{"_index":278,"title":{},"body":{"injectables/CurrencyService.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"classes/MyErrorStateMatcher.html":{},"interfaces/Store.html":{}}}],["map((_",{"_index":890,"title":{},"body":{"components/PaginationComponent.html":{}}}],["map(exp",{"_index":585,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["margin",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/PaginationComponent.html":{}}}],["matbuttonmodule",{"_index":258,"title":{},"body":{"modules/ConfirmButtonModule.html":{},"modules/ExpensesModule.html":{}}}],["matcher",{"_index":684,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["matching",{"_index":29,"title":{},"body":{"interfaces/Amount.html":{},"components/AmountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"modules/ConfirmButtonModule.html":{},"injectables/CurrencyService.html":{},"components/DrawerComponent.html":{},"modules/DrawerModule.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"interfaces/Expense.html":{},"interfaces/ExpenseStore.html":{},"modules/ExpensesModule.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PaginationComponent.html":{},"modules/PaginationModule.html":{},"interfaces/Store.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":499,"title":{},"body":{"modules/ExpensesModule.html":{}}}],["matdatepickermodule",{"_index":488,"title":{},"body":{"modules/ExpensesModule.html":{}}}],["material",{"_index":1030,"title":{},"body":{"index.html":{}}}],["materialize",{"_index":973,"title":{},"body":{"dependencies.html":{}}}],["matformfieldmodule",{"_index":490,"title":{},"body":{"modules/ExpensesModule.html":{}}}],["math.ceil((stored.count",{"_index":672,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["math.ceil(count",{"_index":637,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["maticonmodule",{"_index":260,"title":{},"body":{"modules/ConfirmButtonModule.html":{}}}],["matinputmodule",{"_index":495,"title":{},"body":{"modules/ExpensesModule.html":{}}}],["matnativedatemodule",{"_index":493,"title":{},"body":{"modules/ExpensesModule.html":{}}}],["matselectmodule",{"_index":497,"title":{},"body":{"modules/ExpensesModule.html":{}}}],["max",{"_index":378,"title":{},"body":{"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/PaginationComponent.html":{}}}],["media",{"_index":376,"title":{},"body":{"components/DrawerComponent.html":{},"components/PaginationComponent.html":{}}}],["merchantability",{"_index":1090,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1065,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":45,"title":{},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{}}}],["methods",{"_index":54,"title":{},"body":{"components/AmountComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"injectables/CurrencyService.html":{},"components/DrawerComponent.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PaginationComponent.html":{}}}],["middle",{"_index":819,"title":{},"body":{"components/ListComponent.html":{}}}],["miscellaneous",{"_index":1115,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":997,"title":{},"body":{"index.html":{}}}],["mit",{"_index":1041,"title":{},"body":{"index.html":{},"license.html":{}}}],["modalclose",{"_index":308,"title":{},"body":{"components/DrawerComponent.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["modify",{"_index":1064,"title":{},"body":{"license.html":{}}}],["module",{"_index":116,"title":{"modules/AppModule.html":{},"modules/ConfirmButtonModule.html":{},"modules/DrawerModule.html":{},"modules/ExpensesModule.html":{},"modules/PaginationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfirmButtonModule.html":{},"modules/DrawerModule.html":{},"modules/ExpensesModule.html":{},"modules/PaginationModule.html":{},"overview.html":{}}}],["modules",{"_index":118,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfirmButtonModule.html":{},"modules/DrawerModule.html":{},"modules/ExpensesModule.html":{},"modules/PaginationModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":999,"title":{},"body":{"index.html":{}}}],["moyse",{"_index":1036,"title":{},"body":{"index.html":{},"license.html":{}}}],["myerrorstatematcher",{"_index":701,"title":{"classes/MyErrorStateMatcher.html":{}},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["name",{"_index":86,"title":{},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"injectables/CurrencyService.html":{},"components/DrawerComponent.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PaginationComponent.html":{}}}],["nature",{"_index":19,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/Expense.html":{},"interfaces/ExpenseStore.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["neue",{"_index":906,"title":{},"body":{"components/PaginationComponent.html":{}}}],["new",{"_index":236,"title":{},"body":{"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PaginationComponent.html":{},"interfaces/Store.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":872,"title":{},"body":{"components/PaginationComponent.html":{}}}],["ngform",{"_index":705,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["ngmodule",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfirmButtonModule.html":{},"modules/DrawerModule.html":{},"modules/ExpensesModule.html":{},"modules/PaginationModule.html":{}}}],["ngonchanges",{"_index":877,"title":{},"body":{"components/PaginationComponent.html":{}}}],["ngondestroy",{"_index":158,"title":{},"body":{"components/CardComponent.html":{}}}],["ngoninit",{"_index":55,"title":{},"body":{"components/AmountComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["none",{"_index":244,"title":{},"body":{"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/PaginationComponent.html":{}}}],["noninfringement",{"_index":1094,"title":{},"body":{"license.html":{}}}],["note",{"_index":662,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["notice",{"_index":1078,"title":{},"body":{"license.html":{}}}],["nowrap",{"_index":928,"title":{},"body":{"components/PaginationComponent.html":{}}}],["npm",{"_index":1010,"title":{},"body":{"index.html":{}}}],["null",{"_index":327,"title":{},"body":{"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["number",{"_index":10,"title":{},"body":{"interfaces/Amount.html":{},"components/AmountComponent.html":{},"injectables/CurrencyService.html":{},"interfaces/Expense.html":{},"interfaces/ExpenseStore.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PaginationComponent.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["number(n",{"_index":606,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["object",{"_index":992,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["object.keys(entities).map(key",{"_index":633,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["object.keys(queryparams",{"_index":589,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["object.keys(rates",{"_index":294,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["observable",{"_index":170,"title":{},"body":{"components/CardComponent.html":{},"injectables/CurrencyService.html":{},"components/DrawerComponent.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"classes/MyErrorStateMatcher.html":{},"interfaces/Store.html":{}}}],["obtaining",{"_index":1054,"title":{},"body":{"license.html":{}}}],["of(amount",{"_index":297,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["offset",{"_index":568,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["old",{"_index":648,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["oncancel",{"_index":222,"title":{},"body":{"components/ConfirmButtonComponent.html":{},"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["onchanges",{"_index":874,"title":{},"body":{"components/PaginationComponent.html":{}}}],["onconfirm",{"_index":223,"title":{},"body":{"components/ConfirmButtonComponent.html":{}}}],["ondestroy",{"_index":151,"title":{},"body":{"components/CardComponent.html":{}}}],["one",{"_index":794,"title":{},"body":{"components/ListComponent.html":{}}}],["oninit",{"_index":44,"title":{},"body":{"components/AmountComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["onmodalclose",{"_index":311,"title":{},"body":{"components/DrawerComponent.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["onsave",{"_index":685,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["opacity",{"_index":359,"title":{},"body":{"components/DrawerComponent.html":{},"components/ListComponent.html":{}}}],["open",{"_index":219,"title":{},"body":{"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"modules/DrawerModule.html":{},"injectables/DrawerService.html":{},"index.html":{}}}],["open(componentref",{"_index":448,"title":{},"body":{"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["optional",{"_index":165,"title":{},"body":{"components/CardComponent.html":{},"injectables/CurrencyService.html":{},"components/DrawerComponent.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"interfaces/Expense.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PaginationComponent.html":{}}}],["orderby",{"_index":571,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["originalamount",{"_index":20,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/Expense.html":{},"interfaces/ExpenseStore.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["otherwise",{"_index":1105,"title":{},"body":{"license.html":{}}}],["out",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfirmButtonModule.html":{},"modules/DrawerModule.html":{},"modules/ExpensesModule.html":{},"components/LoaderComponent.html":{},"modules/PaginationModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":235,"title":{},"body":{"components/ConfirmButtonComponent.html":{},"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PaginationComponent.html":{}}}],["outputs",{"_index":221,"title":{},"body":{"components/ConfirmButtonComponent.html":{},"components/FormComponent.html":{},"components/PaginationComponent.html":{}}}],["overflow",{"_index":195,"title":{},"body":{"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/PaginationComponent.html":{}}}],["overlay",{"_index":346,"title":{},"body":{"components/DrawerComponent.html":{}}}],["overlay.open",{"_index":364,"title":{},"body":{"components/DrawerComponent.html":{}}}],["overview",{"_index":1111,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["oxygen",{"_index":901,"title":{},"body":{"components/PaginationComponent.html":{}}}],["package",{"_index":963,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":192,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/PaginationComponent.html":{}}}],["page",{"_index":546,"title":{},"body":{"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/ListComponent.html":{},"components/PaginationComponent.html":{},"interfaces/Store.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pagechange",{"_index":758,"title":{},"body":{"components/ListComponent.html":{},"components/PaginationComponent.html":{}}}],["pagechange(page",{"_index":766,"title":{},"body":{"components/ListComponent.html":{}}}],["pagecount",{"_index":617,"title":{},"body":{"injectables/ExpensesService.html":{},"components/ListComponent.html":{},"components/PaginationComponent.html":{},"interfaces/Store.html":{}}}],["pages",{"_index":873,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination",{"_index":105,"title":{},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{},"index.html":{}}}],["pagination.component.css",{"_index":875,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.component.html",{"_index":876,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination/pagination.component",{"_index":933,"title":{},"body":{"modules/PaginationModule.html":{}}}],["pagination/pagination.module",{"_index":504,"title":{},"body":{"modules/ExpensesModule.html":{}}}],["paginationcomponent",{"_index":104,"title":{"components/PaginationComponent.html":{}},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{},"modules/PaginationModule.html":{},"coverage.html":{},"overview.html":{}}}],["paginationmodule",{"_index":478,"title":{"modules/PaginationModule.html":{}},"body":{"modules/ExpensesModule.html":{},"modules/PaginationModule.html":{},"modules.html":{},"overview.html":{}}}],["parameters",{"_index":164,"title":{},"body":{"components/CardComponent.html":{},"injectables/CurrencyService.html":{},"components/DrawerComponent.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PaginationComponent.html":{}}}],["parseisostring",{"_index":521,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["parseisostring(s",{"_index":548,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["partialy",{"_index":1001,"title":{},"body":{"index.html":{}}}],["particular",{"_index":1092,"title":{},"body":{"license.html":{}}}],["permission",{"_index":1048,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1072,"title":{},"body":{"license.html":{}}}],["person",{"_index":1053,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1073,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":575,"title":{},"body":{"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{},"interfaces/Store.html":{}}}],["pipe(map",{"_index":300,"title":{},"body":{"injectables/CurrencyService.html":{},"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["pipe(map(exp",{"_index":579,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["please",{"_index":792,"title":{},"body":{"components/ListComponent.html":{}}}],["pointer",{"_index":833,"title":{},"body":{"components/ListComponent.html":{},"components/PaginationComponent.html":{}}}],["portal",{"_index":317,"title":{},"body":{"components/DrawerComponent.html":{}}}],["portalinjector",{"_index":437,"title":{},"body":{"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["portalinjector(this.injector",{"_index":465,"title":{},"body":{"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["portalmodule",{"_index":423,"title":{},"body":{"modules/DrawerModule.html":{}}}],["portions",{"_index":1082,"title":{},"body":{"license.html":{}}}],["position",{"_index":347,"title":{},"body":{"components/DrawerComponent.html":{}}}],["postexpense",{"_index":522,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["postexpense(expense",{"_index":551,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["prev",{"_index":871,"title":{},"body":{"components/PaginationComponent.html":{}}}],["private",{"_index":156,"title":{},"body":{"components/CardComponent.html":{},"injectables/CurrencyService.html":{},"components/DrawerComponent.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/ListComponent.html":{},"interfaces/Store.html":{}}}],["production",{"_index":1125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":1038,"title":{},"body":{"index.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/Amount.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"injectables/CurrencyService.html":{},"components/DrawerComponent.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"interfaces/Expense.html":{},"interfaces/ExpenseStore.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/PaginationComponent.html":{},"interfaces/Store.html":{}}}],["provide",{"_index":509,"title":{},"body":{"modules/ExpensesModule.html":{}}}],["provided",{"_index":1083,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":289,"title":{},"body":{"injectables/CurrencyService.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["providers",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfirmButtonModule.html":{},"modules/DrawerModule.html":{},"modules/ExpensesModule.html":{},"modules/PaginationModule.html":{},"overview.html":{}}}],["public",{"_index":155,"title":{},"body":{"components/CardComponent.html":{},"classes/DrawerRef.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["publish",{"_index":1066,"title":{},"body":{"license.html":{}}}],["publishreplay",{"_index":280,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["publishreplay(1",{"_index":295,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["purchasedon",{"_index":17,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/Expense.html":{},"interfaces/ExpenseStore.html":{},"injectables/ExpensesProviderService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["purpose",{"_index":1093,"title":{},"body":{"license.html":{}}}],["putexpense",{"_index":523,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["putexpense(expense",{"_index":553,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["query",{"_index":588,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["queryparams",{"_index":529,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["queryparams[key",{"_index":591,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["radius",{"_index":820,"title":{},"body":{"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{}}}],["rates",{"_index":286,"title":{},"body":{"injectables/CurrencyService.html":{},"miscellaneous/typealiases.html":{}}}],["rates[tocurrency",{"_index":301,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["rc.2",{"_index":976,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodule",{"_index":484,"title":{},"body":{"modules/ExpensesModule.html":{}}}],["readme",{"_index":399,"title":{},"body":{"modules/DrawerModule.html":{}}}],["reduce",{"_index":590,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["refcount",{"_index":279,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["registerlocaledata",{"_index":481,"title":{},"body":{"modules/ExpensesModule.html":{}}}],["registerlocaledata(localefr",{"_index":508,"title":{},"body":{"modules/ExpensesModule.html":{}}}],["released",{"_index":1045,"title":{},"body":{"license.html":{}}}],["remove",{"_index":69,"title":{},"body":{"components/AmountComponent.html":{},"components/ListComponent.html":{}}}],["removeexpense",{"_index":524,"title":{},"body":{"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/ListComponent.html":{}}}],["removeexpense(expense",{"_index":625,"title":{},"body":{"injectables/ExpensesService.html":{},"components/ListComponent.html":{},"interfaces/Store.html":{}}}],["removeexpense(expense.id",{"_index":661,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["removeexpense(id",{"_index":555,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["required",{"_index":743,"title":{},"body":{"components/FormComponent.html":{}}}],["reset",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfirmButtonModule.html":{},"modules/DrawerModule.html":{},"modules/ExpensesModule.html":{},"modules/PaginationModule.html":{},"overview.html":{}}}],["response",{"_index":416,"title":{},"body":{"modules/DrawerModule.html":{}}}],["restriction",{"_index":1061,"title":{},"body":{"license.html":{}}}],["result",{"_index":28,"title":{},"body":{"interfaces/Amount.html":{},"components/AmountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"modules/ConfirmButtonModule.html":{},"injectables/CurrencyService.html":{},"components/DrawerComponent.html":{},"modules/DrawerModule.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"interfaces/Expense.html":{},"interfaces/ExpenseStore.html":{},"modules/ExpensesModule.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PaginationComponent.html":{},"modules/PaginationModule.html":{},"interfaces/Store.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":30,"title":{},"body":{"interfaces/Amount.html":{},"components/AmountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"modules/ConfirmButtonModule.html":{},"injectables/CurrencyService.html":{},"components/DrawerComponent.html":{},"modules/DrawerModule.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"interfaces/Expense.html":{},"interfaces/ExpenseStore.html":{},"modules/ExpensesModule.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PaginationComponent.html":{},"modules/PaginationModule.html":{},"interfaces/Store.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":296,"title":{},"body":{"injectables/CurrencyService.html":{},"components/DrawerComponent.html":{},"modules/DrawerModule.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PaginationComponent.html":{},"interfaces/Store.html":{}}}],["returns",{"_index":62,"title":{},"body":{"components/AmountComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"injectables/CurrencyService.html":{},"components/DrawerComponent.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PaginationComponent.html":{}}}],["rgba(0",{"_index":211,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{}}}],["rgba(242",{"_index":807,"title":{},"body":{"components/ListComponent.html":{}}}],["right",{"_index":401,"title":{},"body":{"modules/DrawerModule.html":{},"components/ListComponent.html":{}}}],["rights",{"_index":1063,"title":{},"body":{"license.html":{}}}],["roboto",{"_index":900,"title":{},"body":{"components/PaginationComponent.html":{}}}],["root",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"injectables/CurrencyService.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["root'},{'name",{"_index":90,"title":{},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{}}}],["routing",{"_index":1004,"title":{},"body":{"index.html":{}}}],["run",{"_index":1023,"title":{},"body":{"index.html":{}}}],["running",{"_index":1024,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":180,"title":{},"body":{"components/CardComponent.html":{},"injectables/CurrencyService.html":{},"components/DrawerComponent.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"classes/MyErrorStateMatcher.html":{},"interfaces/Store.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":281,"title":{},"body":{"injectables/CurrencyService.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"classes/MyErrorStateMatcher.html":{},"interfaces/Store.html":{}}}],["s",{"_index":550,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["s.split(/\\d+/).map(n",{"_index":605,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["sans",{"_index":902,"title":{},"body":{"components/PaginationComponent.html":{}}}],["save",{"_index":147,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["save(expense",{"_index":168,"title":{},"body":{"components/CardComponent.html":{}}}],["savedexpense",{"_index":675,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["savedexpense.id",{"_index":674,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["saveexpense",{"_index":525,"title":{},"body":{"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{}}}],["saveexpense$.pipe",{"_index":584,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["saveexpense(expense",{"_index":186,"title":{},"body":{"components/CardComponent.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["scale(0",{"_index":865,"title":{},"body":{"components/LoaderComponent.html":{}}}],["scale(0.8",{"_index":840,"title":{},"body":{"components/ListComponent.html":{}}}],["scale(1",{"_index":867,"title":{},"body":{"components/LoaderComponent.html":{}}}],["screen",{"_index":377,"title":{},"body":{"components/DrawerComponent.html":{},"components/PaginationComponent.html":{}}}],["search",{"_index":665,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["section",{"_index":383,"title":{},"body":{"components/DrawerComponent.html":{}}}],["see",{"_index":1042,"title":{},"body":{"index.html":{}}}],["segoe",{"_index":898,"title":{},"body":{"components/PaginationComponent.html":{}}}],["selector",{"_index":48,"title":{},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PaginationComponent.html":{}}}],["sell",{"_index":1070,"title":{},"body":{"license.html":{}}}],["serif",{"_index":907,"title":{},"body":{"components/PaginationComponent.html":{}}}],["server",{"_index":1019,"title":{},"body":{"index.html":{}}}],["setpage",{"_index":878,"title":{},"body":{"components/PaginationComponent.html":{}}}],["setpage(page",{"_index":885,"title":{},"body":{"components/PaginationComponent.html":{}}}],["shadow",{"_index":393,"title":{},"body":{"components/DrawerComponent.html":{}}}],["shall",{"_index":1079,"title":{},"body":{"license.html":{}}}],["sided",{"_index":402,"title":{},"body":{"modules/DrawerModule.html":{}}}],["simple",{"_index":843,"title":{},"body":{"components/LoaderComponent.html":{},"components/PaginationComponent.html":{}}}],["single",{"_index":988,"title":{},"body":{"index.html":{}}}],["size",{"_index":205,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/PaginationComponent.html":{}}}],["sk",{"_index":854,"title":{},"body":{"components/LoaderComponent.html":{}}}],["slide",{"_index":220,"title":{},"body":{"components/ConfirmButtonComponent.html":{}}}],["small",{"_index":985,"title":{},"body":{"index.html":{}}}],["software",{"_index":1056,"title":{},"body":{"license.html":{}}}],["solid",{"_index":811,"title":{},"body":{"components/ListComponent.html":{}}}],["sort",{"_index":543,"title":{},"body":{"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/ListComponent.html":{},"interfaces/Store.html":{},"miscellaneous/variables.html":{}}}],["sort(by",{"_index":769,"title":{},"body":{"components/ListComponent.html":{}}}],["sort(sort",{"_index":628,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["sortclass",{"_index":759,"title":{},"body":{"components/ListComponent.html":{}}}],["sortclass(by",{"_index":771,"title":{},"body":{"components/ListComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Amount.html":{},"components/AmountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"modules/ConfirmButtonModule.html":{},"injectables/CurrencyService.html":{},"components/DrawerComponent.html":{},"modules/DrawerModule.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"interfaces/Expense.html":{},"interfaces/ExpenseStore.html":{},"modules/ExpensesModule.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PaginationComponent.html":{},"modules/PaginationModule.html":{},"interfaces/Store.html":{}}}],["spa",{"_index":987,"title":{},"body":{"index.html":{}}}],["space",{"_index":927,"title":{},"body":{"components/PaginationComponent.html":{}}}],["spacing",{"_index":798,"title":{},"body":{"components/ListComponent.html":{}}}],["span",{"_index":245,"title":{},"body":{"components/ConfirmButtonComponent.html":{}}}],["span.closed",{"_index":246,"title":{},"body":{"components/ConfirmButtonComponent.html":{}}}],["spinner",{"_index":851,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/.../currency.service.ts",{"_index":1118,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../drawer.service.ts",{"_index":1120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../expenses.provider.service.ts",{"_index":1123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../expenses.service.ts",{"_index":1124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.ts",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/confirm",{"_index":213,"title":{},"body":{"components/ConfirmButtonComponent.html":{},"modules/ConfirmButtonModule.html":{},"coverage.html":{}}}],["src/app/drawer/drawer.module.ts",{"_index":400,"title":{},"body":{"modules/DrawerModule.html":{}}}],["src/app/drawer/drawer.service.ts",{"_index":425,"title":{},"body":{"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/drawer/drawer.service.ts:21",{"_index":428,"title":{},"body":{"classes/DrawerRef.html":{}}}],["src/app/drawer/drawer.service.ts:23",{"_index":429,"title":{},"body":{"classes/DrawerRef.html":{}}}],["src/app/drawer/drawer.service.ts:25",{"_index":431,"title":{},"body":{"classes/DrawerRef.html":{}}}],["src/app/drawer/drawer.service.ts:29",{"_index":430,"title":{},"body":{"classes/DrawerRef.html":{}}}],["src/app/drawer/drawer.service.ts:39",{"_index":472,"title":{},"body":{"injectables/DrawerService.html":{}}}],["src/app/drawer/drawer.service.ts:40",{"_index":467,"title":{},"body":{"injectables/DrawerService.html":{}}}],["src/app/drawer/drawer.service.ts:55",{"_index":471,"title":{},"body":{"injectables/DrawerService.html":{}}}],["src/app/drawer/drawer.service.ts:75",{"_index":468,"title":{},"body":{"injectables/DrawerService.html":{}}}],["src/app/drawer/drawer.service.ts:79",{"_index":470,"title":{},"body":{"injectables/DrawerService.html":{}}}],["src/app/drawer/drawer/drawer.component.ts",{"_index":302,"title":{},"body":{"components/DrawerComponent.html":{},"coverage.html":{}}}],["src/app/drawer/drawer/drawer.component.ts:22",{"_index":332,"title":{},"body":{"components/DrawerComponent.html":{}}}],["src/app/drawer/drawer/drawer.component.ts:25",{"_index":312,"title":{},"body":{"components/DrawerComponent.html":{}}}],["src/app/drawer/drawer/drawer.component.ts:27",{"_index":334,"title":{},"body":{"components/DrawerComponent.html":{}}}],["src/app/drawer/drawer/drawer.component.ts:29",{"_index":328,"title":{},"body":{"components/DrawerComponent.html":{}}}],["src/app/drawer/drawer/drawer.component.ts:33",{"_index":325,"title":{},"body":{"components/DrawerComponent.html":{}}}],["src/app/drawer/drawer/drawer.component.ts:40",{"_index":315,"title":{},"body":{"components/DrawerComponent.html":{}}}],["src/app/drawer/drawer/drawer.component.ts:48",{"_index":321,"title":{},"body":{"components/DrawerComponent.html":{}}}],["src/app/expenses/amount/amount.component.ts",{"_index":38,"title":{},"body":{"components/AmountComponent.html":{},"coverage.html":{}}}],["src/app/expenses/amount/amount.component.ts:19",{"_index":60,"title":{},"body":{"components/AmountComponent.html":{}}}],["src/app/expenses/amount/amount.component.ts:23",{"_index":61,"title":{},"body":{"components/AmountComponent.html":{}}}],["src/app/expenses/card/card.component.ts",{"_index":142,"title":{},"body":{"components/CardComponent.html":{},"coverage.html":{}}}],["src/app/expenses/card/card.component.ts:26",{"_index":175,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/expenses/card/card.component.ts:27",{"_index":163,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/expenses/card/card.component.ts:33",{"_index":173,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/expenses/card/card.component.ts:38",{"_index":169,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/expenses/card/card.component.ts:46",{"_index":166,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/expenses/card/card.component.ts:50",{"_index":167,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/expenses/currency.service.ts",{"_index":264,"title":{},"body":{"injectables/CurrencyService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/expenses/currency.service.ts:16",{"_index":269,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["src/app/expenses/currency.service.ts:20",{"_index":275,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["src/app/expenses/currency.service.ts:31",{"_index":274,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["src/app/expenses/expense.ts",{"_index":6,"title":{},"body":{"interfaces/Amount.html":{},"interfaces/Expense.html":{},"interfaces/ExpenseStore.html":{},"coverage.html":{}}}],["src/app/expenses/expenses.module.ts",{"_index":479,"title":{},"body":{"modules/ExpensesModule.html":{}}}],["src/app/expenses/expenses.provider.service.ts",{"_index":513,"title":{},"body":{"injectables/ExpensesProviderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/expenses/expenses.provider.service.ts:100",{"_index":536,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["src/app/expenses/expenses.provider.service.ts:107",{"_index":534,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["src/app/expenses/expenses.provider.service.ts:114",{"_index":549,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["src/app/expenses/expenses.provider.service.ts:19",{"_index":526,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["src/app/expenses/expenses.provider.service.ts:22",{"_index":545,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["src/app/expenses/expenses.provider.service.ts:47",{"_index":540,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["src/app/expenses/expenses.provider.service.ts:53",{"_index":557,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["src/app/expenses/expenses.provider.service.ts:64",{"_index":556,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["src/app/expenses/expenses.provider.service.ts:68",{"_index":528,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["src/app/expenses/expenses.provider.service.ts:81",{"_index":552,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["src/app/expenses/expenses.provider.service.ts:85",{"_index":554,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["src/app/expenses/expenses.provider.service.ts:91",{"_index":538,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["src/app/expenses/expenses.provider.service.ts:96",{"_index":531,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["src/app/expenses/expenses.service.ts",{"_index":616,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/expenses/expenses.service.ts:103",{"_index":627,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["src/app/expenses/expenses.service.ts:29",{"_index":643,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["src/app/expenses/expenses.service.ts:31",{"_index":635,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["src/app/expenses/expenses.service.ts:37",{"_index":639,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["src/app/expenses/expenses.service.ts:41",{"_index":636,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["src/app/expenses/expenses.service.ts:45",{"_index":640,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["src/app/expenses/expenses.service.ts:50",{"_index":621,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["src/app/expenses/expenses.service.ts:54",{"_index":629,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["src/app/expenses/expenses.service.ts:61",{"_index":624,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["src/app/expenses/expenses.service.ts:91",{"_index":626,"title":{},"body":{"injectables/ExpensesService.html":{}}}],["src/app/expenses/form/form.component.ts",{"_index":676,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{},"coverage.html":{}}}],["src/app/expenses/form/form.component.ts:114",{"_index":694,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/expenses/form/form.component.ts:123",{"_index":692,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/expenses/form/form.component.ts:25",{"_index":869,"title":{},"body":{"classes/MyErrorStateMatcher.html":{}}}],["src/app/expenses/form/form.component.ts:50",{"_index":689,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/expenses/form/form.component.ts:51",{"_index":688,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/expenses/form/form.component.ts:52",{"_index":691,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/expenses/form/form.component.ts:53",{"_index":690,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/expenses/form/form.component.ts:55",{"_index":699,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/expenses/form/form.component.ts:56",{"_index":696,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/expenses/form/form.component.ts:57",{"_index":697,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/expenses/form/form.component.ts:58",{"_index":698,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/expenses/form/form.component.ts:59",{"_index":700,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/expenses/form/form.component.ts:61",{"_index":687,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/expenses/form/form.component.ts:99",{"_index":693,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/expenses/list/list.component.ts",{"_index":752,"title":{},"body":{"components/ListComponent.html":{},"coverage.html":{}}}],["src/app/expenses/list/list.component.ts:20",{"_index":774,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/expenses/list/list.component.ts:21",{"_index":778,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/expenses/list/list.component.ts:22",{"_index":777,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/expenses/list/list.component.ts:23",{"_index":761,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/expenses/list/list.component.ts:30",{"_index":765,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/expenses/list/list.component.ts:34",{"_index":764,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/expenses/list/list.component.ts:44",{"_index":762,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/expenses/list/list.component.ts:61",{"_index":768,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/expenses/list/list.component.ts:65",{"_index":770,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/expenses/list/list.component.ts:69",{"_index":772,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/expenses/list/list.component.ts:75",{"_index":767,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/expenses/loader/loader.component.ts",{"_index":842,"title":{},"body":{"components/LoaderComponent.html":{},"coverage.html":{}}}],["src/app/expenses/loader/loader.component.ts:12",{"_index":849,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/expenses/loader/loader.component.ts:15",{"_index":850,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/pagination/pagination.module.ts",{"_index":932,"title":{},"body":{"modules/PaginationModule.html":{}}}],["src/app/pagination/pagination/pagination.component.ts",{"_index":870,"title":{},"body":{"components/PaginationComponent.html":{},"coverage.html":{}}}],["src/app/pagination/pagination/pagination.component.ts:23",{"_index":882,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/pagination/pagination/pagination.component.ts:24",{"_index":881,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/pagination/pagination/pagination.component.ts:25",{"_index":883,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/pagination/pagination/pagination.component.ts:26",{"_index":880,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/pagination/pagination/pagination.component.ts:30",{"_index":884,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/pagination/pagination/pagination.component.ts:36",{"_index":886,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":960,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":961,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":1012,"title":{},"body":{"index.html":{}}}],["started",{"_index":984,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["startwith",{"_index":707,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["statements",{"_index":937,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":331,"title":{},"body":{"components/DrawerComponent.html":{}}}],["store",{"_index":618,"title":{"interfaces/Store.html":{}},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stored",{"_index":652,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["stored.direction",{"_index":654,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["stored.entities",{"_index":673,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["stored.page",{"_index":655,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["stored.sort",{"_index":653,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["string",{"_index":13,"title":{},"body":{"interfaces/Amount.html":{},"components/AmountComponent.html":{},"injectables/CurrencyService.html":{},"modules/DrawerModule.html":{},"interfaces/Expense.html":{},"interfaces/ExpenseStore.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"classes/MyErrorStateMatcher.html":{},"interfaces/Store.html":{}}}],["stuff",{"_index":998,"title":{},"body":{"index.html":{}}}],["styles",{"_index":35,"title":{},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{}}}],["styleurls",{"_index":50,"title":{},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PaginationComponent.html":{}}}],["subject",{"_index":333,"title":{},"body":{"components/DrawerComponent.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"license.html":{}}}],["sublicense",{"_index":1068,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":713,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["subscribe",{"_index":657,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["subscribe((amount",{"_index":728,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["subscribe((exp",{"_index":187,"title":{},"body":{"components/CardComponent.html":{}}}],["subscription",{"_index":174,"title":{},"body":{"components/CardComponent.html":{}}}],["substantial",{"_index":1081,"title":{},"body":{"license.html":{}}}],["support",{"_index":1108,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1109,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":706,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["system",{"_index":896,"title":{},"body":{"components/PaginationComponent.html":{}}}],["t",{"_index":316,"title":{},"body":{"components/DrawerComponent.html":{},"injectables/DrawerService.html":{}}}],["t8g",{"_index":49,"title":{},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PaginationComponent.html":{},"index.html":{}}}],["table",{"_index":747,"title":{},"body":{"components/FormComponent.html":{},"components/ListComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":962,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":561,"title":{},"body":{"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"classes/MyErrorStateMatcher.html":{},"interfaces/Store.html":{}}}],["tap(savedexpense",{"_index":671,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["tbody",{"_index":801,"title":{},"body":{"components/ListComponent.html":{}}}],["td",{"_index":796,"title":{},"body":{"components/ListComponent.html":{}}}],["td.right",{"_index":822,"title":{},"body":{"components/ListComponent.html":{}}}],["template",{"_index":34,"title":{},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{}}}],["templateportal",{"_index":320,"title":{},"body":{"components/DrawerComponent.html":{}}}],["templateurl",{"_index":52,"title":{},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PaginationComponent.html":{}}}],["test",{"_index":991,"title":{},"body":{"index.html":{}}}],["tested",{"_index":1002,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1000,"title":{},"body":{"index.html":{}}}],["text",{"_index":816,"title":{},"body":{"components/ListComponent.html":{},"components/PaginationComponent.html":{}}}],["tfoot",{"_index":823,"title":{},"body":{"components/ListComponent.html":{}}}],["th",{"_index":795,"title":{},"body":{"components/ListComponent.html":{}}}],["th.asc:after",{"_index":836,"title":{},"body":{"components/ListComponent.html":{}}}],["th.desc:after",{"_index":838,"title":{},"body":{"components/ListComponent.html":{}}}],["th.right",{"_index":821,"title":{},"body":{"components/ListComponent.html":{}}}],["th:after",{"_index":834,"title":{},"body":{"components/ListComponent.html":{}}}],["thanks",{"_index":1017,"title":{},"body":{"index.html":{}}}],["thead",{"_index":799,"title":{},"body":{"components/ListComponent.html":{}}}],["this._portaloutlet.attachcomponentportal(portal",{"_index":344,"title":{},"body":{"components/DrawerComponent.html":{}}}],["this._portaloutlet.attachtemplateportal(portal",{"_index":345,"title":{},"body":{"components/DrawerComponent.html":{}}}],["this._portaloutlet.detach",{"_index":340,"title":{},"body":{"components/DrawerComponent.html":{}}}],["this._portaloutlet.hasattached",{"_index":341,"title":{},"body":{"components/DrawerComponent.html":{}}}],["this.amountform",{"_index":720,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.amountform.controls",{"_index":732,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.amountform.valuechanges",{"_index":724,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.amounts",{"_index":72,"title":{},"body":{"components/AmountComponent.html":{}}}],["this.amounts.reduce",{"_index":73,"title":{},"body":{"components/AmountComponent.html":{}}}],["this.appref",{"_index":446,"title":{},"body":{"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["this.bodyportalhost",{"_index":443,"title":{},"body":{"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["this.bodyportalhost.attach",{"_index":452,"title":{},"body":{"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["this.bodyportalhost.detach",{"_index":460,"title":{},"body":{"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["this.buildurl",{"_index":570,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["this.componentfactoryresolver",{"_index":445,"title":{},"body":{"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["this.containerref",{"_index":451,"title":{},"body":{"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["this.containerref.instance.attachcomponentportal",{"_index":454,"title":{},"body":{"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["this.containerref.instance.close(data",{"_index":461,"title":{},"body":{"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["this.containerref.instance.onmodalclose().subscribe(data",{"_index":458,"title":{},"body":{"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["this.containerref.instance.open",{"_index":457,"title":{},"body":{"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["this.convertalltoexpense(items",{"_index":576,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["this.converttoexpense(exp",{"_index":580,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["this.converttoexpense(expense",{"_index":600,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["this.createinjector(drawerref",{"_index":450,"title":{},"body":{"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["this.currencies",{"_index":182,"title":{},"body":{"components/CardComponent.html":{},"injectables/CurrencyService.html":{}}}],["this.currencyservice.convert",{"_index":726,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.currencyservice.getcurrencies",{"_index":183,"title":{},"body":{"components/CardComponent.html":{}}}],["this.currentpage",{"_index":892,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.displayconverted",{"_index":731,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.drawer.close(expense",{"_index":188,"title":{},"body":{"components/CardComponent.html":{}}}],["this.drawer.close(null",{"_index":189,"title":{},"body":{"components/CardComponent.html":{}}}],["this.drawer.open",{"_index":414,"title":{},"body":{"modules/DrawerModule.html":{},"components/ListComponent.html":{}}}],["this.drawerservice.close(\"ok",{"_index":421,"title":{},"body":{"modules/DrawerModule.html":{}}}],["this.editexpense",{"_index":784,"title":{},"body":{"components/ListComponent.html":{}}}],["this.expense",{"_index":737,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.expense.convertedamount.currency",{"_index":727,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.expense.originalamount.currency",{"_index":734,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.expenseservice",{"_index":185,"title":{},"body":{"components/CardComponent.html":{}}}],["this.expensesprovider",{"_index":656,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["this.expensesprovider.saveexpense(expense).pipe",{"_index":670,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["this.expensesservice.expenses",{"_index":773,"title":{},"body":{"components/ListComponent.html":{}}}],["this.expensesservice.fetchexpense",{"_index":781,"title":{},"body":{"components/ListComponent.html":{}}}],["this.expensesservice.page",{"_index":775,"title":{},"body":{"components/ListComponent.html":{}}}],["this.expensesservice.pagecount",{"_index":776,"title":{},"body":{"components/ListComponent.html":{}}}],["this.expensesservice.removeexpense(expense",{"_index":785,"title":{},"body":{"components/ListComponent.html":{}}}],["this.expensesservice.sort$.pipe",{"_index":787,"title":{},"body":{"components/ListComponent.html":{}}}],["this.expensesservice.sort(by",{"_index":786,"title":{},"body":{"components/ListComponent.html":{}}}],["this.expensesub",{"_index":184,"title":{},"body":{"components/CardComponent.html":{}}}],["this.expensesub.unsubscribe",{"_index":190,"title":{},"body":{"components/CardComponent.html":{}}}],["this.fetchexpense",{"_index":651,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["this.form",{"_index":721,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.form.controls[\"convertedamount\"].patchvalue",{"_index":729,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.form.patchvalue(this.expense",{"_index":730,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.form.valid",{"_index":735,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.form.value",{"_index":738,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.getexpense",{"_index":668,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["this.http",{"_index":298,"title":{},"body":{"injectables/CurrencyService.html":{},"injectables/ExpensesProviderService.html":{}}}],["this.http.delete(`${url}/${id",{"_index":586,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["this.http.get(currencyurl).pipe",{"_index":292,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["this.http.post(`${url",{"_index":595,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["this.http.put(`${url}/${expense.id",{"_index":596,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["this.injector",{"_index":447,"title":{},"body":{"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["this.loading",{"_index":725,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.modalclose.asobservable",{"_index":337,"title":{},"body":{"components/DrawerComponent.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["this.modalclose.complete",{"_index":339,"title":{},"body":{"components/DrawerComponent.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["this.modalclose.next(data",{"_index":338,"title":{},"body":{"components/DrawerComponent.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["this.oncancel.emit",{"_index":240,"title":{},"body":{"components/ConfirmButtonComponent.html":{},"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.onconfirm.emit",{"_index":239,"title":{},"body":{"components/ConfirmButtonComponent.html":{}}}],["this.onsave.emit",{"_index":736,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["this.open",{"_index":237,"title":{},"body":{"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{}}}],["this.pagechange.emit(this.currentpage",{"_index":893,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.pagecount",{"_index":891,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.pages",{"_index":887,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.parseisostring(expense.purchasedon",{"_index":601,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["this.postexpense(this.convertfromexpense(expense",{"_index":583,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["this.putexpense(this.convertfromexpense(expense",{"_index":582,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["this.store",{"_index":630,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["this.store$.next",{"_index":658,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["this.store$.value",{"_index":649,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["this.updateditemid",{"_index":783,"title":{},"body":{"components/ListComponent.html":{}}}],["thomas",{"_index":1035,"title":{},"body":{"index.html":{},"license.html":{}}}],["throw",{"_index":342,"title":{},"body":{"components/DrawerComponent.html":{}}}],["throwerror",{"_index":559,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["throwerror(error",{"_index":598,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["tocurrency",{"_index":273,"title":{},"body":{"injectables/CurrencyService.html":{}}}],["todo",{"_index":664,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{}}}],["token",{"_index":562,"title":{},"body":{"injectables/ExpensesProviderService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["top",{"_index":354,"title":{},"body":{"components/DrawerComponent.html":{},"components/PaginationComponent.html":{}}}],["tort",{"_index":1104,"title":{},"body":{"license.html":{}}}],["touched",{"_index":712,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["tr",{"_index":802,"title":{},"body":{"components/ListComponent.html":{}}}],["tr:hover",{"_index":806,"title":{},"body":{"components/ListComponent.html":{}}}],["transform",{"_index":367,"title":{},"body":{"components/DrawerComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{}}}],["transition",{"_index":360,"title":{},"body":{"components/DrawerComponent.html":{},"components/ListComponent.html":{}}}],["translatex(200",{"_index":368,"title":{},"body":{"components/DrawerComponent.html":{}}}],["tree",{"_index":37,"title":{},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{}}}],["trip",{"_index":996,"title":{},"body":{"index.html":{}}}],["true",{"_index":238,"title":{},"body":{"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":978,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/Amount.html":{},"components/AmountComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"injectables/CurrencyService.html":{},"components/DrawerComponent.html":{},"modules/DrawerModule.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"interfaces/Expense.html":{},"interfaces/ExpenseStore.html":{},"injectables/ExpensesProviderService.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"classes/MyErrorStateMatcher.html":{},"components/PaginationComponent.html":{},"interfaces/Store.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1116,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["u",{"_index":569,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["ubuntu",{"_index":903,"title":{},"body":{"components/PaginationComponent.html":{}}}],["ui",{"_index":899,"title":{},"body":{"components/PaginationComponent.html":{}}}],["ul",{"_index":921,"title":{},"body":{"components/PaginationComponent.html":{}}}],["ul.pagination",{"_index":908,"title":{},"body":{"components/PaginationComponent.html":{}}}],["undefined",{"_index":456,"title":{},"body":{"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["under",{"_index":1040,"title":{},"body":{"index.html":{},"license.html":{}}}],["underline",{"_index":831,"title":{},"body":{"components/ListComponent.html":{}}}],["updated",{"_index":825,"title":{},"body":{"components/ListComponent.html":{}}}],["updateditemid",{"_index":755,"title":{},"body":{"components/ListComponent.html":{}}}],["url",{"_index":283,"title":{},"body":{"injectables/CurrencyService.html":{},"injectables/ExpensesProviderService.html":{},"miscellaneous/variables.html":{}}}],["url}?${query",{"_index":594,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["usage",{"_index":405,"title":{},"body":{"modules/DrawerModule.html":{}}}],["use",{"_index":410,"title":{},"body":{"modules/DrawerModule.html":{},"license.html":{}}}],["used",{"_index":663,"title":{},"body":{"injectables/ExpensesService.html":{},"interfaces/Store.html":{},"index.html":{}}}],["usevalue",{"_index":510,"title":{},"body":{"modules/ExpensesModule.html":{}}}],["using",{"_index":993,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":779,"title":{},"body":{"components/ListComponent.html":{},"dependencies.html":{}}}],["uuid/v4",{"_index":780,"title":{},"body":{"components/ListComponent.html":{}}}],["validation",{"_index":677,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["validators",{"_index":703,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["validators.maxlength(120",{"_index":723,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["validators.required",{"_index":722,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["value",{"_index":232,"title":{},"body":{"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"classes/DrawerRef.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/PaginationComponent.html":{},"miscellaneous/variables.html":{}}}],["valuechanges.pipe",{"_index":733,"title":{},"body":{"components/FormComponent.html":{},"classes/MyErrorStateMatcher.html":{}}}],["var",{"_index":84,"title":{},"body":{"components/AmountComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{}}}],["variable",{"_index":941,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1119,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vertical",{"_index":818,"title":{},"body":{"components/ListComponent.html":{},"components/PaginationComponent.html":{}}}],["viewchild",{"_index":335,"title":{},"body":{"components/DrawerComponent.html":{}}}],["viewchild(cdkportaloutlet",{"_index":330,"title":{},"body":{"components/DrawerComponent.html":{}}}],["visibility",{"_index":358,"title":{},"body":{"components/DrawerComponent.html":{}}}],["visible",{"_index":366,"title":{},"body":{"components/DrawerComponent.html":{}}}],["void",{"_index":63,"title":{},"body":{"components/AmountComponent.html":{},"components/CardComponent.html":{},"components/ConfirmButtonComponent.html":{},"components/DrawerComponent.html":{},"classes/DrawerRef.html":{},"injectables/DrawerService.html":{},"injectables/ExpensesService.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{}}}],["warranties",{"_index":1089,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1084,"title":{},"body":{"license.html":{}}}],["weakmap",{"_index":464,"title":{},"body":{"classes/DrawerRef.html":{},"injectables/DrawerService.html":{}}}],["web",{"_index":1027,"title":{},"body":{"index.html":{}}}],["webkit",{"_index":803,"title":{},"body":{"components/ListComponent.html":{},"components/LoaderComponent.html":{}}}],["weight",{"_index":201,"title":{},"body":{"components/CardComponent.html":{},"components/ListComponent.html":{},"components/PaginationComponent.html":{}}}],["whether",{"_index":1101,"title":{},"body":{"license.html":{}}}],["white",{"_index":926,"title":{},"body":{"components/PaginationComponent.html":{}}}],["width",{"_index":351,"title":{},"body":{"components/DrawerComponent.html":{},"components/FormComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{}}}],["without",{"_index":1060,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":387,"title":{},"body":{"components/DrawerComponent.html":{}}}],["x).join",{"_index":573,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["yarn",{"_index":1013,"title":{},"body":{"index.html":{}}}],["yes",{"_index":547,"title":{},"body":{"injectables/ExpensesProviderService.html":{}}}],["z",{"_index":349,"title":{},"body":{"components/DrawerComponent.html":{}}}],["zero",{"_index":1032,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":981,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfirmButtonModule.html":{},"modules/DrawerModule.html":{},"modules/ExpensesModule.html":{},"modules/PaginationModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Amount.html":{"url":"interfaces/Amount.html","title":"interface - Amount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Amount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/expenses/expense.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        amount\n                                \n                                \n                                        currency\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currency\n                                    \n                                \n                                \n                                    \n                                        currency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Amount {\n  amount: number;\n  currency: string;\n}\n\nexport interface Expense {\n  id: string;\n  purchasedOn: Date;\n  nature: string;\n  originalAmount: Amount;\n  convertedAmount: Amount;\n  comment: string;\n  createdAt?: Date;\n  lastModifiedAt?: Date;\n}\n\nexport interface ExpenseStore {\n  items: { [id: string]: Expense };\n  count: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AmountComponent.html":{"url":"components/AmountComponent.html","title":"component - AmountComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AmountComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/expenses/amount/amount.component.ts\n\n\n    \n        Description\n    \n    \n        Display informations (amount & currency) for a list of Amount { amount: number, currency: string }\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                t8g-amount\n            \n\n            \n                styleUrls\n                ./amount.component.css\n            \n\n\n\n            \n                templateUrl\n                ./amount.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                amounts\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/expenses/amount/amount.component.ts:19\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        amounts\n                    \n                \n                \n                    \n                        Type :         Amount[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/expenses/amount/amount.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/expenses/amount/amount.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  Input\n} from \"@angular/core\";\nimport { Amount } from \"../expense\";\n\n/**\n * Display informations (amount & currency) for a list of Amount { amount: number, currency: string }\n */\n@Component({\n  selector: \"t8g-amount\",\n  templateUrl: \"./amount.component.html\",\n  styleUrls: [\"./amount.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AmountComponent implements OnInit {\n  @Input() amounts: Amount[];\n\n  constructor() {}\n\n  ngOnInit() {\n    // remove duplicate currencies amounts\n    this.amounts = this.amounts.reduce(\n      (acc, amount) =>\n        !!acc.find((a: Amount) => a.currency === amount.currency)\n          ? acc\n          : [...acc, amount],\n      []\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    {{ amount.amount | currency: amount.currency:\"symbol\":undefined:\"fr\" }}\n  \n\n\n    \n\n    \n                \n                    ./amount.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ amount.amount | currency: amount.currency:\"symbol\":undefined:\"fr\" }}  '\n    var COMPONENTS = [{'name': 'AmountComponent', 'selector': 't8g-amount'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 't8g-card'},{'name': 'ConfirmButtonComponent', 'selector': 't8g-confirm-button'},{'name': 'DrawerComponent', 'selector': 't8g-drawer'},{'name': 'FormComponent', 'selector': 't8g-form'},{'name': 'ListComponent', 'selector': 't8g-list'},{'name': 'LoaderComponent', 'selector': 't8g-loader'},{'name': 'PaginationComponent', 'selector': 't8g-pagination'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AmountComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent {}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                :host {\n  display: block;\n  margin: 2em;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AmountComponent', 'selector': 't8g-amount'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 't8g-card'},{'name': 'ConfirmButtonComponent', 'selector': 't8g-confirm-button'},{'name': 'DrawerComponent', 'selector': 't8g-drawer'},{'name': 'FormComponent', 'selector': 't8g-form'},{'name': 'ListComponent', 'selector': 't8g-list'},{'name': 'LoaderComponent', 'selector': 't8g-loader'},{'name': 'PaginationComponent', 'selector': 't8g-pagination'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nExpensesModule\n\nExpensesModule\n\nAppModule -->\n\nExpensesModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ExpensesModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AppComponent } from \"./app.component\";\nimport { ExpensesModule } from \"./expenses/expenses.module\";\nimport { HttpClientModule } from \"@angular/common/http\";\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, HttpClientModule, ExpensesModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/expenses/card/card.component.ts\n\n\n    \n        Description\n    \n    \n        Container component for Expense form\n\nConnection to ExpenseService for save\nClose drawer on close (cancel or save)\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                t8g-card\n            \n\n            \n                styleUrls\n                ./card.component.css\n            \n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currencies$\n                            \n                            \n                                    Public\n                                expense\n                            \n                            \n                                    Private\n                                expenseSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(expenseService: ExpensesService, currencyService: CurrencyService, drawer: DrawerService, expense: Expense)\n                    \n                \n                        \n                            \n                                Defined in src/app/expenses/card/card.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpensesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        currencyService\n                                                  \n                                                        \n                                                                        CurrencyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        drawer\n                                                  \n                                                        \n                                                                        DrawerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        expense\n                                                  \n                                                        \n                                                                        Expense\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/expenses/card/card.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/expenses/card/card.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            save\n                        \n                        \n                    \n                \n            \n            \n                \nsave(expense: Expense)\n                \n            \n\n\n            \n                \n                    Defined in src/app/expenses/card/card.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expense\n                                    \n                                                Expense\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currencies$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/expenses/card/card.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expense\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Expense\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(DRAWER_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/expenses/card/card.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            expenseSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/expenses/card/card.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  ChangeDetectionStrategy,\n  Inject,\n  OnDestroy\n} from \"@angular/core\";\nimport { DrawerService, DRAWER_DATA } from \"../../drawer/drawer.service\";\nimport { Expense } from \"../expense\";\nimport { ExpensesService } from \"../expenses.service\";\nimport { Subscription, Observable } from \"rxjs\";\nimport { CurrencyService } from \"../currency.service\";\n\n/**\n * Container component for Expense form\n *\n * - Connection to ExpenseService for save\n * - Close drawer on close (cancel or save)\n */\n@Component({\n  selector: \"t8g-card\",\n  templateUrl: \"./card.component.html\",\n  styleUrls: [\"./card.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CardComponent implements OnDestroy {\n  private expenseSub: Subscription;\n  public currencies$: Observable;\n\n  constructor(\n    private expenseService: ExpensesService,\n    private currencyService: CurrencyService,\n    private drawer: DrawerService,\n    @Inject(DRAWER_DATA) public expense: Expense\n  ) {\n    this.currencies$ = this.currencyService.getCurrencies();\n  }\n\n  save(expense: Expense) {\n    this.expenseSub = this.expenseService\n      .saveExpense(expense)\n      .subscribe((exp: Expense) => {\n        this.drawer.close(expense);\n      });\n  }\n\n  cancel() {\n    this.drawer.close(null);\n  }\n\n  ngOnDestroy() {\n    this.expenseSub && this.expenseSub.unsubscribe();\n  }\n}\n\n    \n\n    \n        Edit this expense\n\n\n    \n\n    \n                \n                    ./card.component.css\n                \n                :host {\n  display: block;\n  padding: 1em 3em;\n  overflow: auto;\n  height: calc(100vh - 2em);\n}\n\nh3 {\n  font-weight: 400;\n  line-height: 1.3;\n  font-size: 1.15rem;\n  margin: 1.9466666667rem 0 1.168rem 0;\n  color: rgba(0, 0, 0, 0.55);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Edit this expense'\n    var COMPONENTS = [{'name': 'AmountComponent', 'selector': 't8g-amount'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 't8g-card'},{'name': 'ConfirmButtonComponent', 'selector': 't8g-confirm-button'},{'name': 'DrawerComponent', 'selector': 't8g-drawer'},{'name': 'FormComponent', 'selector': 't8g-form'},{'name': 'ListComponent', 'selector': 't8g-list'},{'name': 'LoaderComponent', 'selector': 't8g-loader'},{'name': 'PaginationComponent', 'selector': 't8g-pagination'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmButtonComponent.html":{"url":"components/ConfirmButtonComponent.html","title":"component - ConfirmButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/confirm-button/confirm-button/confirm-button.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                t8g-confirm-button\n            \n\n            \n                styleUrls\n                ./confirm-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./confirm-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                open\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                confirm\n                            \n                            \n                                slide\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onCancel\n                            \n                            \n                                onConfirm\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onCancel\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/confirm-button/confirm-button/confirm-button.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onConfirm\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/confirm-button/confirm-button/confirm-button.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/confirm-button/confirm-button/confirm-button.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirm\n                        \n                        \n                    \n                \n            \n            \n                \nconfirm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/confirm-button/confirm-button/confirm-button.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            slide\n                        \n                        \n                    \n                \n            \n            \n                \nslide()\n                \n            \n\n\n            \n                \n                    Defined in src/app/confirm-button/confirm-button/confirm-button.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            open\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/confirm-button/confirm-button/confirm-button.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  ChangeDetectionStrategy,\n  Output,\n  EventEmitter\n} from \"@angular/core\";\n\n@Component({\n  selector: \"t8g-confirm-button\",\n  templateUrl: \"./confirm-button.component.html\",\n  styleUrls: [\"./confirm-button.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ConfirmButtonComponent {\n  @Output() onCancel = new EventEmitter();\n  @Output() onConfirm = new EventEmitter();\n\n  open: boolean = false;\n\n  slide() {\n    this.open = true;\n  }\n\n  confirm() {\n    this.onConfirm.emit();\n  }\n\n  cancel() {\n    this.onCancel.emit();\n    this.open = false;\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    Confirm\n    \n      \n        \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./confirm-button.component.css\n                \n                button.one {\n  left: 0;\n}\nbutton.closed {\n  display: none;\n}\nspan {\n  display: none;\n}\nspan.closed {\n  display: inline;\n}\n\ndiv {\n  display: inline;\n  overflow: hidden;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Confirm                                      '\n    var COMPONENTS = [{'name': 'AmountComponent', 'selector': 't8g-amount'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 't8g-card'},{'name': 'ConfirmButtonComponent', 'selector': 't8g-confirm-button'},{'name': 'DrawerComponent', 'selector': 't8g-drawer'},{'name': 'FormComponent', 'selector': 't8g-form'},{'name': 'ListComponent', 'selector': 't8g-list'},{'name': 'LoaderComponent', 'selector': 't8g-loader'},{'name': 'PaginationComponent', 'selector': 't8g-pagination'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfirmButtonModule.html":{"url":"modules/ConfirmButtonModule.html","title":"module - ConfirmButtonModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfirmButtonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfirmButtonModule\n\n\n\ncluster_ConfirmButtonModule_declarations\n\n\n\ncluster_ConfirmButtonModule_exports\n\n\n\n\nConfirmButtonComponent\n\nConfirmButtonComponent\n\n\n\nConfirmButtonModule\n\nConfirmButtonModule\n\nConfirmButtonModule -->\n\nConfirmButtonComponent->ConfirmButtonModule\n\n\n\n\n\nConfirmButtonComponent \n\nConfirmButtonComponent \n\nConfirmButtonComponent  -->\n\nConfirmButtonModule->ConfirmButtonComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/confirm-button/confirm-button.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ConfirmButtonComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConfirmButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { ConfirmButtonComponent } from \"./confirm-button/confirm-button.component\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatIconModule } from \"@angular/material/icon\";\n\n@NgModule({\n  declarations: [ConfirmButtonComponent],\n  imports: [CommonModule, MatButtonModule, MatIconModule],\n  exports: [ConfirmButtonComponent]\n})\nexport class ConfirmButtonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CurrencyService.html":{"url":"injectables/CurrencyService.html","title":"injectable - CurrencyService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CurrencyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/expenses/currency.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currencies$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convert\n                            \n                            \n                                getCurrencies\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/expenses/currency.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \nconvert(amount: number, fromCurrency: string, toCurrency: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/expenses/currency.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fromCurrency\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toCurrency\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrencies\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrencies()\n                \n            \n\n\n            \n                \n                    Defined in src/app/expenses/currency.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currencies$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/expenses/currency.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable, of } from \"rxjs\";\nimport { environment } from \"../../environments/environment\";\nimport { map, refCount, publishReplay } from \"rxjs/operators\";\n\nconst { url: currencyUrl } = environment.currencyApi;\n\ntype Rates = { base: string; date: string; rates: { [code: string]: number } };\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CurrencyService {\n  // cache\n  private currencies$: Observable;\n\n  constructor(private http: HttpClient) {}\n\n  getCurrencies(): Observable {\n    if (!this.currencies$) {\n      this.currencies$ = this.http.get(currencyUrl).pipe(\n        map(({ rates }) => [\"EUR\", ...Object.keys(rates)]),\n        publishReplay(1),\n        refCount()\n      );\n    }\n    return this.currencies$;\n  }\n\n  convert(\n    amount: number,\n    fromCurrency: string,\n    toCurrency: string\n  ): Observable {\n    if (fromCurrency === toCurrency) return of(amount);\n    return this.http\n      .get(`${currencyUrl}?base=${fromCurrency}&symbols=${toCurrency}`)\n      .pipe(map(({ rates }) => rates[toCurrency] * amount));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DrawerComponent.html":{"url":"components/DrawerComponent.html","title":"component - DrawerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DrawerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/drawer/drawer/drawer.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BasePortalOutlet\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                t8g-drawer\n            \n\n            \n                styleUrls\n                ./drawer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./drawer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _portalOutlet\n                            \n                            \n                                    Private\n                                modalClose\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                attachComponentPortal\n                            \n                            \n                                attachTemplatePortal\n                            \n                            \n                                close\n                            \n                            \n                                onModalClose\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        open\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/drawer/drawer/drawer.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            attachComponentPortal\n                        \n                        \n                    \n                \n            \n            \n                \nattachComponentPortal(portal: ComponentPortal)\n                \n            \n\n\n            \n                \n                    Defined in src/app/drawer/drawer/drawer.component.ts:40\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    portal\n                                    \n                                            ComponentPortal\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ComponentRef\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            attachTemplatePortal\n                        \n                        \n                    \n                \n            \n            \n                \nattachTemplatePortal(portal: TemplatePortal)\n                \n            \n\n\n            \n                \n                    Defined in src/app/drawer/drawer/drawer.component.ts:48\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        C\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    portal\n                                    \n                                            TemplatePortal\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     EmbeddedViewRef\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/drawer/drawer/drawer.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModalClose\n                        \n                        \n                    \n                \n            \n            \n                \nonModalClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/drawer/drawer/drawer.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _portalOutlet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CdkPortalOutlet\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(CdkPortalOutlet, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/drawer/drawer/drawer.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            modalClose\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/drawer/drawer/drawer.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  ViewChild,\n  EmbeddedViewRef,\n  ComponentRef,\n  Input\n} from \"@angular/core\";\nimport {\n  BasePortalOutlet,\n  CdkPortalOutlet,\n  TemplatePortal,\n  ComponentPortal\n} from \"@angular/cdk/portal\";\nimport { Observable, Subject } from \"rxjs\";\n\n@Component({\n  selector: \"t8g-drawer\",\n  templateUrl: \"./drawer.component.html\",\n  styleUrls: [\"./drawer.component.css\"]\n})\nexport class DrawerComponent extends BasePortalOutlet {\n  @ViewChild(CdkPortalOutlet, { static: true }) _portalOutlet: CdkPortalOutlet;\n\n  @Input()\n  open = false;\n\n  private modalClose: Subject = new Subject();\n\n  onModalClose(): Observable {\n    return this.modalClose.asObservable();\n  }\n\n  close(data: any = null) {\n    this.open = false;\n    this.modalClose.next(data);\n    this.modalClose.complete();\n    this._portalOutlet.detach();\n  }\n\n  attachComponentPortal(portal: ComponentPortal): ComponentRef {\n    if (this._portalOutlet.hasAttached()) {\n      throw new Error(\"already\");\n    }\n\n    return this._portalOutlet.attachComponentPortal(portal);\n  }\n\n  attachTemplatePortal(portal: TemplatePortal): EmbeddedViewRef {\n    if (this._portalOutlet.hasAttached()) {\n      throw new Error(\"already\");\n    }\n    return this._portalOutlet.attachTemplatePortal(portal);\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./drawer.component.css\n                \n                .drawer-overlay {\n  position: fixed;\n  z-index: 99;\n  width: 100vw;\n  height: 100vh;\n  top: 0;\n  bottom: 0;\n  background: #000;\n  visibility: hidden;\n  opacity: 0;\n  transition: visibility 0s, opacity 0.5s linear;\n}\n.drawer-overlay.open {\n  opacity: 0.2;\n  visibility: visible;\n}\n\n.drawer {\n  position: fixed;\n  z-index: 99;\n  width: 100vw;\n  height: 100vh;\n  top: 0;\n  bottom: 0;\n  transform: translateX(200%);\n  transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1);\n  display: grid;\n  grid-template-areas: \"OVERLAY DRAWER\";\n  grid-template-columns: 1fr 1fr;\n}\n\n@media screen and (max-width: 768px) {\n  .drawer {\n    grid-template-columns: 0fr 9fr;\n  }\n}\n\n.drawer.open {\n  transform: none;\n}\n\n.drawer section {\n  display: block;\n  flex-flow: column wrap;\n  background: #fff;\n  contain: content;\n  grid-area: \"DRAWER\";\n  box-shadow: 2px 0 7px #000;\n}\n.drawer .close {\n  display: block;\n  grid-area: \"OVERLAY\";\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AmountComponent', 'selector': 't8g-amount'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 't8g-card'},{'name': 'ConfirmButtonComponent', 'selector': 't8g-confirm-button'},{'name': 'DrawerComponent', 'selector': 't8g-drawer'},{'name': 'FormComponent', 'selector': 't8g-form'},{'name': 'ListComponent', 'selector': 't8g-list'},{'name': 'LoaderComponent', 'selector': 't8g-loader'},{'name': 'PaginationComponent', 'selector': 't8g-pagination'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DrawerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DrawerModule.html":{"url":"modules/DrawerModule.html","title":"module - DrawerModule","body":"\n                   \n\n\n\n\n    Modules\n    DrawerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DrawerModule\n\n\n\ncluster_DrawerModule_declarations\n\n\n\n\nDrawerComponent\n\nDrawerComponent\n\n\n\nDrawerModule\n\nDrawerModule\n\nDrawerModule -->\n\nDrawerComponent->DrawerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        README\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/drawer/drawer.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Display a right sided drawer with a given component.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DrawerComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            DrawerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n    \n        Usage:\nImport DrawerModule in your module\n```javascript\nimport { DrawerModule } from \"../drawer/drawer.module\";\n@NgModule {\n  imports: [ DrawerModule ],\n  entryComponents: [ CardComponent ] // local component displayed in the drawer\n}\n```\nUse DrawerService & DrawerRef to open drawer with your component inside (here CardComponent)\njavascript\nconst drawerRef: DrawerRef = this.drawer.open(\n  CardComponent,\n  expense\n);\ndrawerRef.onModalClose().subscribe((response: string) => {\n  // the response type depends on CardComponent return\n});\nDo not forget to add CardComponent to entryComponents\nInside CardComponent you can use DrawerService.close(response) to close the drawer\njavascript\nthis.drawerService.close(\"OK\");\n\n    \n\n    \n        import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { DrawerComponent } from \"./drawer/drawer.component\";\nimport { PortalModule } from \"@angular/cdk/portal\";\n\n/**\n * **Display a right sided drawer with a given component.**\n */\n@NgModule({\n  declarations: [DrawerComponent],\n  imports: [CommonModule, PortalModule],\n  entryComponents: [DrawerComponent]\n})\nexport class DrawerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DrawerRef.html":{"url":"classes/DrawerRef.html","title":"class - DrawerRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DrawerRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/drawer/drawer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                containerRef\n                            \n                            \n                                    Private\n                                modalClose\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                onModalClose\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(containerRef: ComponentRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/drawer/drawer.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        containerRef\n                                                  \n                                                        \n                                                                        ComponentRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            containerRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ComponentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/drawer/drawer.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            modalClose\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/drawer/drawer.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/drawer/drawer.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModalClose\n                        \n                        \n                    \n                \n            \n            \n                \nonModalClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/drawer/drawer.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Injectable,\n  ComponentFactoryResolver,\n  ApplicationRef,\n  Injector,\n  ComponentRef,\n  InjectionToken\n} from \"@angular/core\";\nimport {\n  ComponentPortal,\n  ComponentType,\n  PortalInjector,\n  DomPortalHost\n} from \"@angular/cdk/portal\";\nimport { DrawerComponent } from \"./drawer/drawer.component\";\nimport { Observable, Subject } from \"rxjs\";\n\nexport const DRAWER_DATA = new InjectionToken(\"PortalData\");\n\nexport class DrawerRef {\n  private modalClose: Subject = new Subject();\n\n  constructor(public containerRef: ComponentRef) {}\n\n  onModalClose(): Observable {\n    return this.modalClose.asObservable();\n  }\n\n  close(data: any) {\n    this.modalClose.next(data);\n    this.modalClose.complete();\n  }\n}\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DrawerService {\n  containerRef: ComponentRef;\n  bodyPortalHost: DomPortalHost;\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private appRef: ApplicationRef,\n    private injector: Injector\n  ) {\n    this.bodyPortalHost = new DomPortalHost(\n      document.body,\n      this.componentFactoryResolver,\n      this.appRef,\n      this.injector\n    );\n  }\n\n  open(componentRef: ComponentType, data: any): DrawerRef {\n    const drawerRef = new DrawerRef(this.containerRef);\n    const injector = this.createInjector(drawerRef, data);\n\n    this.containerRef = this.bodyPortalHost.attach(\n      new ComponentPortal(DrawerComponent)\n    );\n\n    this.containerRef.instance.attachComponentPortal(\n      new ComponentPortal(componentRef, undefined, injector)\n    );\n\n    this.containerRef.instance.open = true;\n    this.containerRef.instance.onModalClose().subscribe(data => {\n      drawerRef.close(data);\n      this.bodyPortalHost.detach();\n    });\n    return drawerRef;\n  }\n\n  close(data: any) {\n    this.containerRef.instance.close(data);\n  }\n\n  private createInjector(\n    drawerRef: DrawerRef,\n    data: any\n  ): PortalInjector {\n    const injectorTokens = new WeakMap([\n      [DrawerRef, drawerRef],\n      [DRAWER_DATA, data]\n    ]);\n    return new PortalInjector(this.injector, injectorTokens);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DrawerService.html":{"url":"injectables/DrawerService.html","title":"injectable - DrawerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DrawerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/drawer/drawer.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bodyPortalHost\n                            \n                            \n                                containerRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                    Private\n                                createInjector\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver, appRef: ApplicationRef, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/drawer/drawer.service.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appRef\n                                                  \n                                                        \n                                                                        ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/drawer/drawer.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createInjector\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInjector(drawerRef: DrawerRef, data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/drawer/drawer.service.ts:79\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    drawerRef\n                                    \n                                                DrawerRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     PortalInjector\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(componentRef: ComponentType, data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/drawer/drawer.service.ts:55\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    componentRef\n                                    \n                                            ComponentType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DrawerRef\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bodyPortalHost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DomPortalHost\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/drawer/drawer.service.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            containerRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ComponentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/drawer/drawer.service.ts:39\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  ComponentFactoryResolver,\n  ApplicationRef,\n  Injector,\n  ComponentRef,\n  InjectionToken\n} from \"@angular/core\";\nimport {\n  ComponentPortal,\n  ComponentType,\n  PortalInjector,\n  DomPortalHost\n} from \"@angular/cdk/portal\";\nimport { DrawerComponent } from \"./drawer/drawer.component\";\nimport { Observable, Subject } from \"rxjs\";\n\nexport const DRAWER_DATA = new InjectionToken(\"PortalData\");\n\nexport class DrawerRef {\n  private modalClose: Subject = new Subject();\n\n  constructor(public containerRef: ComponentRef) {}\n\n  onModalClose(): Observable {\n    return this.modalClose.asObservable();\n  }\n\n  close(data: any) {\n    this.modalClose.next(data);\n    this.modalClose.complete();\n  }\n}\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DrawerService {\n  containerRef: ComponentRef;\n  bodyPortalHost: DomPortalHost;\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private appRef: ApplicationRef,\n    private injector: Injector\n  ) {\n    this.bodyPortalHost = new DomPortalHost(\n      document.body,\n      this.componentFactoryResolver,\n      this.appRef,\n      this.injector\n    );\n  }\n\n  open(componentRef: ComponentType, data: any): DrawerRef {\n    const drawerRef = new DrawerRef(this.containerRef);\n    const injector = this.createInjector(drawerRef, data);\n\n    this.containerRef = this.bodyPortalHost.attach(\n      new ComponentPortal(DrawerComponent)\n    );\n\n    this.containerRef.instance.attachComponentPortal(\n      new ComponentPortal(componentRef, undefined, injector)\n    );\n\n    this.containerRef.instance.open = true;\n    this.containerRef.instance.onModalClose().subscribe(data => {\n      drawerRef.close(data);\n      this.bodyPortalHost.detach();\n    });\n    return drawerRef;\n  }\n\n  close(data: any) {\n    this.containerRef.instance.close(data);\n  }\n\n  private createInjector(\n    drawerRef: DrawerRef,\n    data: any\n  ): PortalInjector {\n    const injectorTokens = new WeakMap([\n      [DrawerRef, drawerRef],\n      [DRAWER_DATA, data]\n    ]);\n    return new PortalInjector(this.injector, injectorTokens);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Expense.html":{"url":"interfaces/Expense.html","title":"interface - Expense","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Expense\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/expenses/expense.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        comment\n                                \n                                \n                                        convertedAmount\n                                \n                                \n                                            Optional\n                                        createdAt\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        lastModifiedAt\n                                \n                                \n                                        nature\n                                \n                                \n                                        originalAmount\n                                \n                                \n                                        purchasedOn\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        convertedAmount\n                                    \n                                \n                                \n                                    \n                                        convertedAmount:         Amount\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Amount\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastModifiedAt\n                                    \n                                \n                                \n                                    \n                                        lastModifiedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nature\n                                    \n                                \n                                \n                                    \n                                        nature:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        originalAmount\n                                    \n                                \n                                \n                                    \n                                        originalAmount:         Amount\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Amount\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        purchasedOn\n                                    \n                                \n                                \n                                    \n                                        purchasedOn:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Amount {\n  amount: number;\n  currency: string;\n}\n\nexport interface Expense {\n  id: string;\n  purchasedOn: Date;\n  nature: string;\n  originalAmount: Amount;\n  convertedAmount: Amount;\n  comment: string;\n  createdAt?: Date;\n  lastModifiedAt?: Date;\n}\n\nexport interface ExpenseStore {\n  items: { [id: string]: Expense };\n  count: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExpenseStore.html":{"url":"interfaces/ExpenseStore.html","title":"interface - ExpenseStore","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ExpenseStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/expenses/expense.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        count\n                                \n                                \n                                        items\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Amount {\n  amount: number;\n  currency: string;\n}\n\nexport interface Expense {\n  id: string;\n  purchasedOn: Date;\n  nature: string;\n  originalAmount: Amount;\n  convertedAmount: Amount;\n  comment: string;\n  createdAt?: Date;\n  lastModifiedAt?: Date;\n}\n\nexport interface ExpenseStore {\n  items: { [id: string]: Expense };\n  count: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExpensesModule.html":{"url":"modules/ExpensesModule.html","title":"module - ExpensesModule","body":"\n                   \n\n\n\n\n    Modules\n    ExpensesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ExpensesModule\n\n\n\ncluster_ExpensesModule_declarations\n\n\n\ncluster_ExpensesModule_imports\n\n\n\ncluster_ExpensesModule_exports\n\n\n\n\nAmountComponent\n\nAmountComponent\n\n\n\nExpensesModule\n\nExpensesModule\n\nExpensesModule -->\n\nAmountComponent->ExpensesModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\nExpensesModule -->\n\nCardComponent->ExpensesModule\n\n\n\n\n\nFormComponent\n\nFormComponent\n\nExpensesModule -->\n\nFormComponent->ExpensesModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nExpensesModule -->\n\nListComponent->ExpensesModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nExpensesModule -->\n\nLoaderComponent->ExpensesModule\n\n\n\n\n\nListComponent \n\nListComponent \n\nListComponent  -->\n\nExpensesModule->ListComponent \n\n\n\n\n\nConfirmButtonModule\n\nConfirmButtonModule\n\nExpensesModule -->\n\nConfirmButtonModule->ExpensesModule\n\n\n\n\n\nDrawerModule\n\nDrawerModule\n\nExpensesModule -->\n\nDrawerModule->ExpensesModule\n\n\n\n\n\nPaginationModule\n\nPaginationModule\n\nExpensesModule -->\n\nPaginationModule->ExpensesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/expenses/expenses.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AmountComponent\n                        \n                        \n                            CardComponent\n                        \n                        \n                            FormComponent\n                        \n                        \n                            ListComponent\n                        \n                        \n                            LoaderComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            CardComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ConfirmButtonModule\n                        \n                        \n                            DrawerModule\n                        \n                        \n                            PaginationModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ListComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, LOCALE_ID } from \"@angular/core\";\nimport { CommonModule, registerLocaleData } from \"@angular/common\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport localeFr from \"@angular/common/locales/fr\";\n\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatNativeDateModule } from \"@angular/material/core\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatChipsModule } from \"@angular/material/chips\";\n\nimport { ListComponent } from \"./list/list.component\";\nimport { CardComponent } from \"./card/card.component\";\nimport { FormComponent } from \"./form/form.component\";\nimport { DrawerModule } from \"../drawer/drawer.module\";\nimport { PaginationModule } from \"../pagination/pagination.module\";\nimport { LoaderComponent } from \"./loader/loader.component\";\nimport { ConfirmButtonModule } from \"../confirm-button/confirm-button.module\";\nimport { AmountComponent } from \"./amount/amount.component\";\n\nregisterLocaleData(localeFr);\n\n@NgModule({\n  declarations: [\n    ListComponent,\n    CardComponent,\n    FormComponent,\n    LoaderComponent,\n    AmountComponent\n  ],\n  imports: [\n    CommonModule,\n    DrawerModule,\n    BrowserAnimationsModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatNativeDateModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatChipsModule,\n    ReactiveFormsModule,\n    PaginationModule,\n    ConfirmButtonModule\n  ],\n  exports: [ListComponent],\n  entryComponents: [CardComponent],\n  providers: [MatNativeDateModule, { provide: LOCALE_ID, useValue: \"fr\" }]\n})\nexport class ExpensesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExpensesProviderService.html":{"url":"injectables/ExpensesProviderService.html","title":"injectable - ExpensesProviderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ExpensesProviderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/expenses/expenses.provider.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildUrl\n                            \n                            \n                                    Private\n                                convertAllToExpense\n                            \n                            \n                                    Private\n                                convertFromExpense\n                            \n                            \n                                    Private\n                                convertToExpense\n                            \n                            \n                                    Private\n                                error\n                            \n                            \n                                getExpense\n                            \n                            \n                                getExpenses\n                            \n                            \n                                    Private\n                                parseISOString\n                            \n                            \n                                    Private\n                                postExpense\n                            \n                            \n                                    Private\n                                putExpense\n                            \n                            \n                                removeExpense\n                            \n                            \n                                saveExpense\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/expenses/expenses.provider.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buildUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildUrl(queryParams: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/expenses/expenses.provider.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryParams\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            convertAllToExpense\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertAllToExpense(expenses: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/expenses/expenses.provider.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expenses\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Expense[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            convertFromExpense\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertFromExpense(expense: Expense)\n                \n            \n\n\n            \n                \n                    Defined in src/app/expenses/expenses.provider.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expense\n                                    \n                                                Expense\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            convertToExpense\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertToExpense(expense: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/expenses/expenses.provider.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expense\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Expense\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            error\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    error(error)\n                \n            \n\n\n            \n                \n                    Defined in src/app/expenses/expenses.provider.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExpense\n                        \n                        \n                    \n                \n            \n            \n                \ngetExpense(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/expenses/expenses.provider.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExpenses\n                        \n                        \n                    \n                \n            \n            \n                \ngetExpenses(page: number, limit: number, sort?: string, direction?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/expenses/expenses.provider.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sort\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    direction\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            parseISOString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parseISOString(s: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/expenses/expenses.provider.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    s\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            postExpense\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    postExpense(expense)\n                \n            \n\n\n            \n                \n                    Defined in src/app/expenses/expenses.provider.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expense\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            putExpense\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putExpense(expense: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/expenses/expenses.provider.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expense\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeExpense\n                        \n                        \n                    \n                \n            \n            \n                \nremoveExpense(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/expenses/expenses.provider.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveExpense\n                        \n                        \n                    \n                \n            \n            \n                \nsaveExpense(expense: Expense)\n                \n            \n\n\n            \n                \n                    Defined in src/app/expenses/expenses.provider.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expense\n                                    \n                                                Expense\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { environment } from \"../../environments/environment\";\nimport { Expense } from \"./expense\";\nimport { Observable, throwError } from \"rxjs\";\nimport { map, catchError, tap } from \"rxjs/operators\";\n\nconst { url, token } = environment.expenseApi;\n\nconsole.log(token);\n\nconst headers: HttpHeaders = new HttpHeaders({\n  Authorization: `Bearer ${token}`\n});\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ExpensesProviderService {\n  constructor(private http: HttpClient) {}\n\n  getExpenses(\n    page: number,\n    limit: number,\n    sort?: string,\n    direction?: string\n  ): Observable {\n    const offset = (page - 1) * limit;\n    const u = this.buildUrl({\n      offset,\n      limit,\n      orderby: [sort, direction].filter(x => !!x).join(\",\")\n    });\n\n    return this.http\n      .get(u, {\n        headers\n      })\n      .pipe(\n        map(({ items, count }) => {\n          return { items: this.convertAllToExpense(items), count };\n        }),\n        catchError(this.error)\n      );\n  }\n\n  getExpense(id: string): Observable {\n    return this.http\n      .get(`${url}/${id}`, { headers })\n      .pipe(map(exp => this.convertToExpense(exp)));\n  }\n\n  saveExpense(expense: Expense): Observable {\n    const saveExpense$ = expense.createdAt\n      ? this.putExpense(this.convertFromExpense(expense))\n      : this.postExpense(this.convertFromExpense(expense));\n\n    return saveExpense$.pipe(\n      map(exp => this.convertToExpense(exp)),\n      catchError(this.error)\n    );\n  }\n\n  removeExpense(id: string): Observable {\n    return this.http.delete(`${url}/${id}`, { headers });\n  }\n\n  private buildUrl(queryParams: { [key: string]: string | number }) {\n    const query = Object.keys(queryParams)\n      .reduce(\n        (acc, key) =>\n          queryParams[key] !== \"\"\n            ? [...acc, `${key}=${queryParams[key]}`]\n            : acc,\n        []\n      )\n      .join(\"&\");\n    return query ? `${url}?${query}` : url;\n  }\n\n  private postExpense(expense): Observable {\n    return this.http.post(`${url}`, expense, { headers });\n  }\n\n  private putExpense(expense: { id: string }): Observable {\n    return this.http.put(`${url}/${expense.id}`, expense, {\n      headers\n    });\n  }\n\n  private error(error) {\n    console.error(\"ERROR\");\n    return throwError(error);\n  }\n\n  private convertAllToExpense(expenses: any[]): Expense[] {\n    return expenses.map(expense => this.convertToExpense(expense));\n  }\n\n  private convertToExpense(expense: any): Expense {\n    return {\n      ...expense,\n      purchasedOn: this.parseISOString(expense.purchasedOn)\n    };\n  }\n\n  private convertFromExpense(expense: Expense) {\n    return {\n      ...expense,\n      purchasedOn: expense.purchasedOn.toISOString().substr(0, 10)\n    };\n  }\n\n  private parseISOString(s: string): Date {\n    const b = s.split(/\\D+/).map(n => Number(n));\n    return b.length > 3\n      ? new Date(Date.UTC(b[0], --b[1], b[2], b[3], b[4], b[5], b[6]))\n      : new Date(Date.UTC(b[0], --b[1], b[2]));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExpensesService.html":{"url":"injectables/ExpensesService.html","title":"injectable - ExpensesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ExpensesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/expenses/expenses.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                expenses$\n                            \n                            \n                                page$\n                            \n                            \n                                pageCount$\n                            \n                            \n                                sort$\n                            \n                            \n                                    Private\n                                store$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchExpense\n                            \n                            \n                                removeExpense\n                            \n                            \n                                saveExpense\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(expensesProvider: ExpensesProviderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/expenses/expenses.service.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        expensesProvider\n                                                  \n                                                        \n                                                                        ExpensesProviderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchExpense\n                        \n                        \n                    \n                \n            \n            \n                \nfetchExpense(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/expenses/expenses.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeExpense\n                        \n                        \n                    \n                \n            \n            \n                \nremoveExpense(expense: Expense)\n                \n            \n\n\n            \n                \n                    Defined in src/app/expenses/expenses.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expense\n                                    \n                                                Expense\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveExpense\n                        \n                        \n                    \n                \n            \n            \n                \nsaveExpense(expense: Expense)\n                \n            \n\n\n            \n                \n                    Defined in src/app/expenses/expenses.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expense\n                                    \n                                                Expense\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sort\n                        \n                        \n                    \n                \n            \n            \n                \nsort(sort: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/expenses/expenses.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sort\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expenses$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store$\n    .asObservable()\n    .pipe(\n      map(({ entities }) => Object.keys(entities).map(key => entities[key]))\n    )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/expenses/expenses.service.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            page$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store$\n    .asObservable()\n    .pipe(map(({ page }) => page))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/expenses/expenses.service.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageCount$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store$\n    .asObservable()\n    .pipe(map(({ count }) => Math.ceil(count / itemsPerPage)))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/expenses/expenses.service.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store$\n    .asObservable()\n    .pipe(map(({ sort, direction }) => ({ sort, direction })))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/expenses/expenses.service.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            store$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(initialStore)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/expenses/expenses.service.ts:29\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { ExpensesProviderService } from \"./expenses.provider.service\";\nimport { Observable, BehaviorSubject } from \"rxjs\";\nimport { Expense } from \"./expense\";\nimport { map, tap } from \"rxjs/operators\";\n\nconst itemsPerPage = 5;\n\ninterface Store {\n  count: number;\n  entities: { [id: string]: Expense };\n  page: number;\n  sort: string;\n  direction: string;\n}\n\nconst initialStore: Store = {\n  count: 10,\n  entities: {},\n  page: 0,\n  sort: \"createdAt\",\n  direction: \"asc\"\n};\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ExpensesService {\n  private store$: BehaviorSubject = new BehaviorSubject(initialStore);\n\n  expenses$: Observable = this.store$\n    .asObservable()\n    .pipe(\n      map(({ entities }) => Object.keys(entities).map(key => entities[key]))\n    );\n\n  pageCount$: Observable = this.store$\n    .asObservable()\n    .pipe(map(({ count }) => Math.ceil(count / itemsPerPage)));\n\n  page$: Observable = this.store$\n    .asObservable()\n    .pipe(map(({ page }) => page));\n\n  sort$: Observable = this.store$\n    .asObservable()\n    .pipe(map(({ sort, direction }) => ({ sort, direction })));\n\n  constructor(private expensesProvider: ExpensesProviderService) {}\n\n  sort(sort: string) {\n    let { page, sort: old, direction } = this.store$.value;\n    if (sort === old) direction = direction === \"asc\" ? \"desc\" : \"asc\";\n    else page = 1;\n    this.fetchExpense({ page, sort, direction });\n  }\n\n  fetchExpense({\n    page,\n    sort,\n    direction\n  }: {\n    page?: number;\n    sort?: string;\n    direction?: string;\n  }) {\n    const stored = this.store$.value;\n    sort = sort || stored.sort;\n    direction = direction || stored.direction;\n    page = page || stored.page;\n    this.expensesProvider\n      .getExpenses(page, itemsPerPage, sort, direction)\n      .subscribe(({ items, count }) => {\n        this.store$.next({\n          ...stored,\n          page,\n          sort,\n          direction,\n          count,\n          entities: items.reduce(\n            (acc, expense) => ({ ...acc, [expense.id]: expense }),\n            {}\n          )\n        });\n      });\n  }\n\n  removeExpense(expense: Expense) {\n    this.expensesProvider\n      .removeExpense(expense.id)\n      .subscribe(() => this.fetchExpense({}));\n  }\n\n  // note used as we edit from list with all informations\n  // getExpense(id: string): Observable {\n  //   // @TODO search in store or get from api if not found\n  //   return this.getExpense({ page: id });\n  // }\n\n  saveExpense(expense: Expense): Observable {\n    const isNewExpense = !expense.createdAt;\n    const stored = this.store$.value;\n    return this.expensesProvider.saveExpense(expense).pipe(\n      tap(savedExpense => {\n        if (isNewExpense) {\n          const page = Math.ceil((stored.count + 1) / itemsPerPage);\n          this.fetchExpense({ page });\n        } else {\n          this.store$.next({\n            ...stored,\n            entities: { ...stored.entities, [savedExpense.id]: savedExpense }\n          });\n        }\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormComponent.html":{"url":"components/FormComponent.html","title":"component - FormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/expenses/form/form.component.ts\n\n\n    \n        Description\n    \n    \n        Expense form component\n\nValidation\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                t8g-form\n            \n\n            \n                styleUrls\n                ./form.component.css\n            \n\n\n\n            \n                templateUrl\n                ./form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                amountForm\n                            \n                            \n                                    Public\n                                convertedForm\n                            \n                            \n                                    Public\n                                displayConverted$\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                matcher\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currencies\n                            \n                            \n                                expense\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onCancel\n                            \n                            \n                                onSave\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(currencyService: CurrencyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/expenses/form/form.component.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        currencyService\n                                                  \n                                                        \n                                                                        CurrencyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currencies\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/expenses/form/form.component.ts:51\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        expense\n                    \n                \n                \n                    \n                        Type :         Expense\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/expenses/form/form.component.ts:50\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onCancel\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/expenses/form/form.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onSave\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/expenses/form/form.component.ts:52\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/expenses/form/form.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/expenses/form/form.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            save\n                        \n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/expenses/form/form.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            amountForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/expenses/form/form.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            convertedForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/expenses/form/form.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            displayConverted$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/expenses/form/form.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/expenses/form/form.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/expenses/form/form.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matcher\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MyErrorStateMatcher()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/expenses/form/form.component.ts:61\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  EventEmitter\n} from \"@angular/core\";\nimport {\n  FormGroup,\n  FormControl,\n  Validators,\n  FormGroupDirective,\n  NgForm\n} from \"@angular/forms\";\nimport { Expense } from \"../expense\";\nimport { map, switchMap, startWith, tap } from \"rxjs/operators\";\nimport { CurrencyService } from \"../currency.service\";\nimport { Observable } from \"rxjs\";\n\nimport { ErrorStateMatcher } from \"@angular/material/core\";\n\n/** Error when invalid control is dirty, touched, or submitted. */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(\n    control: FormControl | null,\n    form: FormGroupDirective | NgForm | null\n  ): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(\n      control &&\n      control.invalid &&\n      (control.dirty || control.touched || isSubmitted)\n    );\n  }\n}\n\n/**\n * Expense form component\n *\n * - Validation\n */\n@Component({\n  selector: \"t8g-form\",\n  templateUrl: \"./form.component.html\",\n  styleUrls: [\"./form.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FormComponent implements OnInit {\n  @Input() expense: Expense;\n  @Input() currencies: string[];\n  @Output() onSave: EventEmitter = new EventEmitter();\n  @Output() onCancel = new EventEmitter();\n\n  public form: FormGroup;\n  public amountForm: FormGroup;\n  public convertedForm: FormGroup;\n  public displayConverted$: Observable;\n  public loading = false;\n\n  matcher = new MyErrorStateMatcher();\n\n  constructor(private currencyService: CurrencyService) {\n    this.amountForm = new FormGroup({\n      amount: new FormControl(),\n      currency: new FormControl()\n    });\n    this.form = new FormGroup({\n      purchasedOn: new FormControl(),\n      nature: new FormControl(\"\", [\n        Validators.required,\n        Validators.maxLength(120)\n      ]),\n      comment: new FormControl(),\n      originalAmount: this.amountForm,\n      convertedAmount: new FormGroup({\n        amount: new FormControl(),\n        currency: new FormControl()\n      })\n    });\n\n    this.amountForm.valueChanges\n      .pipe(\n        tap(() => (this.loading = true)),\n        switchMap(({ amount, currency }) =>\n          this.currencyService.convert(\n            amount,\n            currency,\n            this.expense.convertedAmount.currency\n          )\n        ),\n        tap(() => (this.loading = false))\n      )\n      .subscribe((amount: number) => {\n        this.form.controls[\"convertedAmount\"].patchValue({ amount });\n      });\n  }\n\n  ngOnInit() {\n    this.form.patchValue(this.expense);\n    this.displayConverted$ = this.amountForm.controls[\n      \"currency\"\n    ].valueChanges.pipe(\n      map(\n        (currency: string) => currency !== this.expense.convertedAmount.currency\n      ),\n      startWith(\n        this.expense.originalAmount.currency !==\n          this.expense.convertedAmount.currency\n      )\n    );\n  }\n\n  save() {\n    if (this.form.valid) {\n      this.onSave.emit({\n        ...this.expense,\n        ...this.form.value\n      });\n    }\n  }\n\n  cancel() {\n    this.onCancel.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n  \n\n  \n    \n    Mandatory, max 120 char\n    \n      Too long\n    \n    \n      Nature required\n    \n  \n\n  \n    \n      \n        \n          \n        \n      \n      \n        \n          Currency\n          \n            \n              {{ currency }}\n            \n          \n        \n      \n    \n  \n\n  \n    \n      Converted Amount\n      \n    \n    \n      \n    \n  \n\n  \n    \n  \n\n  \n    Save\n  \n  \n    Cancel\n  \n\n\n    \n\n    \n                \n                    ./form.component.css\n                \n                .full-width {\n  width: 100%;\n}\n\ntable {\n  margin: 0;\n  padding: 0;\n  border: none;\n  width: 100%;\n}\n\n.convertedAmount {\n  padding-bottom: 1.25em;\n  color: rgba(0, 0, 0, 0.54);\n  font-size: 0.75em;\n}\n\n.hidden {\n  display: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Mandatory, max 120 char          Too long              Nature required                                                                          Currency                                    {{ currency }}                                                      Converted Amount                                        Save        Cancel  '\n    var COMPONENTS = [{'name': 'AmountComponent', 'selector': 't8g-amount'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 't8g-card'},{'name': 'ConfirmButtonComponent', 'selector': 't8g-confirm-button'},{'name': 'DrawerComponent', 'selector': 't8g-drawer'},{'name': 'FormComponent', 'selector': 't8g-form'},{'name': 'ListComponent', 'selector': 't8g-list'},{'name': 'LoaderComponent', 'selector': 't8g-loader'},{'name': 'PaginationComponent', 'selector': 't8g-pagination'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListComponent.html":{"url":"components/ListComponent.html","title":"component - ListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/expenses/list/list.component.ts\n\n\n    \n        Description\n    \n    \n        List of expenses\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                t8g-list\n            \n\n            \n                styleUrls\n                ./list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                expenses$\n                            \n                            \n                                    Public\n                                page$\n                            \n                            \n                                    Public\n                                pageCount$\n                            \n                            \n                                    Public\n                                updatedItemId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addExpense\n                            \n                            \n                                editExpense\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                pageChange\n                            \n                            \n                                removeExpense\n                            \n                            \n                                sort\n                            \n                            \n                                sortClass\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(expensesService: ExpensesService, drawer: DrawerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/expenses/list/list.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        expensesService\n                                                  \n                                                        \n                                                                        ExpensesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        drawer\n                                                  \n                                                        \n                                                                        DrawerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addExpense\n                        \n                        \n                    \n                \n            \n            \n                \naddExpense()\n                \n            \n\n\n            \n                \n                    Defined in src/app/expenses/list/list.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editExpense\n                        \n                        \n                    \n                \n            \n            \n                \neditExpense(expense: Expense)\n                \n            \n\n\n            \n                \n                    Defined in src/app/expenses/list/list.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expense\n                                    \n                                                Expense\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/expenses/list/list.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pageChange\n                        \n                        \n                    \n                \n            \n            \n                \npageChange(page: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/expenses/list/list.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeExpense\n                        \n                        \n                    \n                \n            \n            \n                \nremoveExpense(expense: Expense)\n                \n            \n\n\n            \n                \n                    Defined in src/app/expenses/list/list.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expense\n                                    \n                                                Expense\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sort\n                        \n                        \n                    \n                \n            \n            \n                \nsort(by)\n                \n            \n\n\n            \n                \n                    Defined in src/app/expenses/list/list.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    by\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortClass\n                        \n                        \n                    \n                \n            \n            \n                \nsortClass(by)\n                \n            \n\n\n            \n                \n                    Defined in src/app/expenses/list/list.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    by\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expenses$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.expensesService.expenses$\n                        \n                    \n                        \n                            \n                                    Defined in src/app/expenses/list/list.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            page$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.expensesService.page$\n                        \n                    \n                        \n                            \n                                    Defined in src/app/expenses/list/list.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pageCount$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.expensesService.pageCount$\n                        \n                    \n                        \n                            \n                                    Defined in src/app/expenses/list/list.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updatedItemId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/expenses/list/list.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ChangeDetectionStrategy } from \"@angular/core\";\nimport { ExpensesService } from \"../expenses.service\";\nimport { Observable } from \"rxjs\";\nimport { Expense } from \"../expense\";\nimport { DrawerService, DrawerRef } from \"../../drawer/drawer.service\";\nimport { CardComponent } from \"../card/card.component\";\nimport uuid from \"uuid/v4\";\nimport { tap, map } from \"rxjs/operators\";\n\n/**\n * List of expenses\n */\n@Component({\n  selector: \"t8g-list\",\n  templateUrl: \"./list.component.html\",\n  styleUrls: [\"./list.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListComponent implements OnInit {\n  public expenses$: Observable = this.expensesService.expenses$;\n  public updatedItemId: string;\n  public pageCount$: Observable = this.expensesService.pageCount$;\n  public page$: Observable = this.expensesService.page$;\n\n  constructor(\n    private expensesService: ExpensesService,\n    private drawer: DrawerService\n  ) {}\n\n  ngOnInit() {\n    this.expensesService.fetchExpense({ page: 1 });\n  }\n\n  editExpense(expense: Expense) {\n    const drawerRef: DrawerRef = this.drawer.open(\n      CardComponent,\n      expense\n    );\n    drawerRef.onModalClose().subscribe((expense: Expense | null) => {\n      this.updatedItemId = expense && expense.id;\n    });\n  }\n\n  addExpense() {\n    this.editExpense({\n      id: uuid(),\n      purchasedOn: new Date(),\n      comment: \"\",\n      originalAmount: {\n        amount: 0,\n        currency: \"EUR\"\n      },\n      convertedAmount: {\n        amount: 0,\n        currency: \"EUR\"\n      },\n      nature: \"\"\n    });\n  }\n\n  removeExpense(expense: Expense) {\n    this.expensesService.removeExpense(expense);\n  }\n\n  sort(by) {\n    this.expensesService.sort(by);\n  }\n\n  sortClass(by): Observable {\n    return this.expensesService.sort$.pipe(\n      map(({ sort, direction }) => (sort !== by ? \"\" : direction))\n    );\n  }\n\n  pageChange(page: number) {\n    this.expensesService.fetchExpense({ page });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Date\n      \n      \n        Nature\n      \n      \n        Amount\n      \n      Comment\n      \n    \n  \n\n  \n    \n      \n        {{ expense.purchasedOn | date }}\n        {{ expense.nature }}\n        \n          \n        \n        {{ expense.comment }}\n        \n          \n            Edit&nbsp;\n          Remove\n        \n      \n    \n  \n\n  \n    \n      \n        \n      \n      \n        \n          Add an expense\n        \n      \n    \n  \n\n\n\n  \n    \n      \n        \n      \n    \n  \n\n\n\n  \n    No expenses, please create one.\n  \n\n\n    \n\n    \n                \n                    ./list.component.css\n                \n                table,\nth,\ntd {\n  border: none;\n}\n\ntable {\n  width: 100%;\n  display: table;\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\nthead {\n  color: rgba(0, 0, 0, 0.6);\n}\n\ntable > tbody > tr {\n  -webkit-transition: background-color 0.25s ease;\n  transition: background-color 0.25s ease;\n}\n\ntable > tbody > tr:hover {\n  background-color: rgba(242, 242, 242, 0.5);\n}\n\ntr {\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n  opacity: 1;\n}\n\ntd,\nth {\n  padding: 15px 5px;\n  display: table-cell;\n  text-align: left;\n  vertical-align: middle;\n  border-radius: 2px;\n}\n\nth.right,\ntd.right {\n  text-align: right;\n}\n\ntfoot tr {\n  border: none;\n}\n\n@keyframes updated {\n  from {\n    background-color: #3f51b5;\n    opacity: 0.5;\n  }\n  to {\n    background-color: inherit;\n    opacity: 1;\n  }\n}\n.updated {\n  animation: updated 1s;\n}\n\nth a {\n  text-decoration: underline;\n  cursor: pointer;\n}\n\nth:after {\n  font-weight: 200;\n}\nth.asc:after {\n  content: \" \\2193\";\n}\nth.desc:after {\n  content: \" \\2191\";\n}\n\nt8g-amount {\n  transform: scale(0.8);\n  display: block;\n  margin-left: -25px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Date                    Nature                    Amount            Comment                                {{ expense.purchasedOn | date }}        {{ expense.nature }}                                  {{ expense.comment }}                              Edit           Remove                                                                      Add an expense                                                          No expenses, please create one.  '\n    var COMPONENTS = [{'name': 'AmountComponent', 'selector': 't8g-amount'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 't8g-card'},{'name': 'ConfirmButtonComponent', 'selector': 't8g-confirm-button'},{'name': 'DrawerComponent', 'selector': 't8g-drawer'},{'name': 'FormComponent', 'selector': 't8g-form'},{'name': 'ListComponent', 'selector': 't8g-list'},{'name': 'LoaderComponent', 'selector': 't8g-loader'},{'name': 'PaginationComponent', 'selector': 't8g-pagination'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/expenses/loader/loader.component.ts\n\n\n    \n        Description\n    \n    \n        Simple html/css loader (no logic)\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                t8g-loader\n            \n\n            \n                styleUrls\n                ./loader.component.css\n            \n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/expenses/loader/loader.component.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/expenses/loader/loader.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ChangeDetectionStrategy } from \"@angular/core\";\n\n/**\n * Simple html/css loader (no logic)\n */\n@Component({\n  selector: \"t8g-loader\",\n  templateUrl: \"./loader.component.html\",\n  styleUrls: [\"./loader.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LoaderComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./loader.component.css\n                \n                .spinner {\n  display: inline;\n}\n\n.spinner > div {\n  width: 6px;\n  height: 6px;\n  background-color: #333;\n\n  border-radius: 100%;\n  display: inline-block;\n  -webkit-animation: sk-bouncedelay 1.4s infinite ease-in-out both;\n  animation: sk-bouncedelay 1.4s infinite ease-in-out both;\n}\n\n.spinner .bounce1 {\n  -webkit-animation-delay: -0.32s;\n  animation-delay: -0.32s;\n}\n\n.spinner .bounce2 {\n  -webkit-animation-delay: -0.16s;\n  animation-delay: -0.16s;\n}\n\n@-webkit-keyframes sk-bouncedelay {\n  0%,\n  80%,\n  100% {\n    -webkit-transform: scale(0);\n  }\n  40% {\n    -webkit-transform: scale(1);\n  }\n}\n\n@keyframes sk-bouncedelay {\n  0%,\n  80%,\n  100% {\n    -webkit-transform: scale(0);\n    transform: scale(0);\n  }\n  40% {\n    -webkit-transform: scale(1);\n    transform: scale(1);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AmountComponent', 'selector': 't8g-amount'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 't8g-card'},{'name': 'ConfirmButtonComponent', 'selector': 't8g-confirm-button'},{'name': 'DrawerComponent', 'selector': 't8g-drawer'},{'name': 'FormComponent', 'selector': 't8g-form'},{'name': 'ListComponent', 'selector': 't8g-list'},{'name': 'LoaderComponent', 'selector': 't8g-loader'},{'name': 'PaginationComponent', 'selector': 't8g-pagination'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyErrorStateMatcher.html":{"url":"classes/MyErrorStateMatcher.html","title":"class - MyErrorStateMatcher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyErrorStateMatcher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/expenses/form/form.component.ts\n        \n\n            \n                Description\n            \n            \n                Error when invalid control is dirty, touched, or submitted. \n\n            \n\n\n            \n                Implements\n            \n            \n                        ErrorStateMatcher\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isErrorState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isErrorState\n                        \n                        \n                    \n                \n            \n            \n                \nisErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/expenses/form/form.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                            FormControl | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    form\n                                    \n                                            FormGroupDirective | NgForm | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  EventEmitter\n} from \"@angular/core\";\nimport {\n  FormGroup,\n  FormControl,\n  Validators,\n  FormGroupDirective,\n  NgForm\n} from \"@angular/forms\";\nimport { Expense } from \"../expense\";\nimport { map, switchMap, startWith, tap } from \"rxjs/operators\";\nimport { CurrencyService } from \"../currency.service\";\nimport { Observable } from \"rxjs\";\n\nimport { ErrorStateMatcher } from \"@angular/material/core\";\n\n/** Error when invalid control is dirty, touched, or submitted. */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(\n    control: FormControl | null,\n    form: FormGroupDirective | NgForm | null\n  ): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(\n      control &&\n      control.invalid &&\n      (control.dirty || control.touched || isSubmitted)\n    );\n  }\n}\n\n/**\n * Expense form component\n *\n * - Validation\n */\n@Component({\n  selector: \"t8g-form\",\n  templateUrl: \"./form.component.html\",\n  styleUrls: [\"./form.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FormComponent implements OnInit {\n  @Input() expense: Expense;\n  @Input() currencies: string[];\n  @Output() onSave: EventEmitter = new EventEmitter();\n  @Output() onCancel = new EventEmitter();\n\n  public form: FormGroup;\n  public amountForm: FormGroup;\n  public convertedForm: FormGroup;\n  public displayConverted$: Observable;\n  public loading = false;\n\n  matcher = new MyErrorStateMatcher();\n\n  constructor(private currencyService: CurrencyService) {\n    this.amountForm = new FormGroup({\n      amount: new FormControl(),\n      currency: new FormControl()\n    });\n    this.form = new FormGroup({\n      purchasedOn: new FormControl(),\n      nature: new FormControl(\"\", [\n        Validators.required,\n        Validators.maxLength(120)\n      ]),\n      comment: new FormControl(),\n      originalAmount: this.amountForm,\n      convertedAmount: new FormGroup({\n        amount: new FormControl(),\n        currency: new FormControl()\n      })\n    });\n\n    this.amountForm.valueChanges\n      .pipe(\n        tap(() => (this.loading = true)),\n        switchMap(({ amount, currency }) =>\n          this.currencyService.convert(\n            amount,\n            currency,\n            this.expense.convertedAmount.currency\n          )\n        ),\n        tap(() => (this.loading = false))\n      )\n      .subscribe((amount: number) => {\n        this.form.controls[\"convertedAmount\"].patchValue({ amount });\n      });\n  }\n\n  ngOnInit() {\n    this.form.patchValue(this.expense);\n    this.displayConverted$ = this.amountForm.controls[\n      \"currency\"\n    ].valueChanges.pipe(\n      map(\n        (currency: string) => currency !== this.expense.convertedAmount.currency\n      ),\n      startWith(\n        this.expense.originalAmount.currency !==\n          this.expense.convertedAmount.currency\n      )\n    );\n  }\n\n  save() {\n    if (this.form.valid) {\n      this.onSave.emit({\n        ...this.expense,\n        ...this.form.value\n      });\n    }\n  }\n\n  cancel() {\n    this.onCancel.emit();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaginationComponent.html":{"url":"components/PaginationComponent.html","title":"component - PaginationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PaginationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pagination/pagination/pagination.component.ts\n\n\n    \n        Description\n    \n    \n        Simple pagination\n\nprev & next\nall pages are displayed\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                t8g-pagination\n            \n\n            \n                styleUrls\n                ./pagination.component.css\n            \n\n\n\n            \n                templateUrl\n                ./pagination.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                setPage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentPage\n                            \n                            \n                                pageCount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                pageChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pagination/pagination/pagination.component.ts:26\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentPage\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in src/app/pagination/pagination/pagination.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pageCount\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/pagination/pagination/pagination.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        pageChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pagination/pagination/pagination.component.ts:25\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pagination/pagination/pagination.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPage\n                        \n                        \n                    \n                \n            \n            \n                \nsetPage(page)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pagination/pagination/pagination.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pagination/pagination/pagination.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges\n} from \"@angular/core\";\n\n/**\n * Simple pagination\n *\n * - prev & next\n * - all pages are displayed\n */\n@Component({\n  selector: \"t8g-pagination\",\n  templateUrl: \"./pagination.component.html\",\n  styleUrls: [\"./pagination.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PaginationComponent implements OnChanges {\n  @Input() pageCount: number = 0;\n  @Input() currentPage: number = 1;\n  @Output() pageChange: EventEmitter = new EventEmitter();\n  pages: number[] = [];\n\n  constructor() {}\n\n  ngOnChanges() {\n    this.pages = Array(this.pageCount)\n      .fill(0)\n      .map((_, i) => i + 1);\n  }\n\n  setPage(page) {\n    if (page  this.pageCount) return;\n    this.currentPage = page;\n    this.pageChange.emit(this.currentPage);\n  }\n}\n\n    \n\n    \n         1\">\n  \n    Prev\n  \n  1 -->\n\n  \n    {{ page }}\n  \n\n  \n    Next\n  \n\n\n    \n\n    \n                \n                    ./pagination.component.css\n                \n                :host {\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\n    Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif;\n  font-weight: 400;\n}\n\nul.pagination {\n  margin: 0;\n  padding: 0;\n}\n\n.pagination li {\n  display: inline-block;\n  border-radius: 2px;\n  text-align: center;\n  vertical-align: top;\n  height: 30px;\n}\n\n.pagination li a {\n  color: #444;\n  display: inline-block;\n  font-size: 1.2rem;\n  padding: 0 10px;\n  line-height: 30px;\n  cursor: pointer;\n}\n\n.pagination li.active a {\n  color: #fff;\n}\n\n.pagination li.active {\n  background-color: #ee6e73;\n}\n\n.pagination li.disabled a {\n  cursor: default;\n  color: #999;\n}\n\n.pagination li i {\n  font-size: 2rem;\n}\n\n.pagination li.pages ul li {\n  display: inline-block;\n  float: none;\n}\n\n@media only screen and (max-width: 992px) {\n  .pagination {\n    width: 100%;\n  }\n  .pagination li.prev,\n  .pagination li.next {\n    width: 10%;\n  }\n  .pagination li.pages {\n    width: 80%;\n    overflow: hidden;\n    white-space: nowrap;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 1\">      Prev    1 -->      {{ page }}        Next  '\n    var COMPONENTS = [{'name': 'AmountComponent', 'selector': 't8g-amount'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 't8g-card'},{'name': 'ConfirmButtonComponent', 'selector': 't8g-confirm-button'},{'name': 'DrawerComponent', 'selector': 't8g-drawer'},{'name': 'FormComponent', 'selector': 't8g-form'},{'name': 'ListComponent', 'selector': 't8g-list'},{'name': 'LoaderComponent', 'selector': 't8g-loader'},{'name': 'PaginationComponent', 'selector': 't8g-pagination'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PaginationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaginationModule.html":{"url":"modules/PaginationModule.html","title":"module - PaginationModule","body":"\n                   \n\n\n\n\n    Modules\n    PaginationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PaginationModule\n\n\n\ncluster_PaginationModule_declarations\n\n\n\ncluster_PaginationModule_exports\n\n\n\n\nPaginationComponent\n\nPaginationComponent\n\n\n\nPaginationModule\n\nPaginationModule\n\nPaginationModule -->\n\nPaginationComponent->PaginationModule\n\n\n\n\n\nPaginationComponent \n\nPaginationComponent \n\nPaginationComponent  -->\n\nPaginationModule->PaginationComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pagination/pagination.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PaginationComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PaginationComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { PaginationComponent } from \"./pagination/pagination.component\";\n\n@NgModule({\n  declarations: [PaginationComponent],\n  imports: [CommonModule],\n  exports: [PaginationComponent]\n})\nexport class PaginationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Store.html":{"url":"interfaces/Store.html","title":"interface - Store","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Store\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/expenses/expenses.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        count\n                                \n                                \n                                        direction\n                                \n                                \n                                        entities\n                                \n                                \n                                        page\n                                \n                                \n                                        sort\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                    \n                                \n                                \n                                    \n                                        direction:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entities\n                                    \n                                \n                                \n                                    \n                                        entities:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sort\n                                    \n                                \n                                \n                                    \n                                        sort:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { ExpensesProviderService } from \"./expenses.provider.service\";\nimport { Observable, BehaviorSubject } from \"rxjs\";\nimport { Expense } from \"./expense\";\nimport { map, tap } from \"rxjs/operators\";\n\nconst itemsPerPage = 5;\n\ninterface Store {\n  count: number;\n  entities: { [id: string]: Expense };\n  page: number;\n  sort: string;\n  direction: string;\n}\n\nconst initialStore: Store = {\n  count: 10,\n  entities: {},\n  page: 0,\n  sort: \"createdAt\",\n  direction: \"asc\"\n};\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ExpensesService {\n  private store$: BehaviorSubject = new BehaviorSubject(initialStore);\n\n  expenses$: Observable = this.store$\n    .asObservable()\n    .pipe(\n      map(({ entities }) => Object.keys(entities).map(key => entities[key]))\n    );\n\n  pageCount$: Observable = this.store$\n    .asObservable()\n    .pipe(map(({ count }) => Math.ceil(count / itemsPerPage)));\n\n  page$: Observable = this.store$\n    .asObservable()\n    .pipe(map(({ page }) => page));\n\n  sort$: Observable = this.store$\n    .asObservable()\n    .pipe(map(({ sort, direction }) => ({ sort, direction })));\n\n  constructor(private expensesProvider: ExpensesProviderService) {}\n\n  sort(sort: string) {\n    let { page, sort: old, direction } = this.store$.value;\n    if (sort === old) direction = direction === \"asc\" ? \"desc\" : \"asc\";\n    else page = 1;\n    this.fetchExpense({ page, sort, direction });\n  }\n\n  fetchExpense({\n    page,\n    sort,\n    direction\n  }: {\n    page?: number;\n    sort?: string;\n    direction?: string;\n  }) {\n    const stored = this.store$.value;\n    sort = sort || stored.sort;\n    direction = direction || stored.direction;\n    page = page || stored.page;\n    this.expensesProvider\n      .getExpenses(page, itemsPerPage, sort, direction)\n      .subscribe(({ items, count }) => {\n        this.store$.next({\n          ...stored,\n          page,\n          sort,\n          direction,\n          count,\n          entities: items.reduce(\n            (acc, expense) => ({ ...acc, [expense.id]: expense }),\n            {}\n          )\n        });\n      });\n  }\n\n  removeExpense(expense: Expense) {\n    this.expensesProvider\n      .removeExpense(expense.id)\n      .subscribe(() => this.fetchExpense({}));\n  }\n\n  // note used as we edit from list with all informations\n  // getExpense(id: string): Observable {\n  //   // @TODO search in store or get from api if not found\n  //   return this.getExpense({ page: id });\n  // }\n\n  saveExpense(expense: Expense): Observable {\n    const isNewExpense = !expense.createdAt;\n    const stored = this.store$.value;\n    return this.expensesProvider.saveExpense(expense).pipe(\n      tap(savedExpense => {\n        if (isNewExpense) {\n          const page = Math.ceil((stored.count + 1) / itemsPerPage);\n          this.fetchExpense({ page });\n        } else {\n          this.store$.next({\n            ...stored,\n            entities: { ...stored.entities, [savedExpense.id]: savedExpense }\n          });\n        }\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/confirm-button/confirm-button/confirm-button.component.ts\n            \n            component\n            ConfirmButtonComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/drawer/drawer.service.ts\n            \n            class\n            DrawerRef\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/drawer/drawer.service.ts\n            \n            injectable\n            DrawerService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/drawer/drawer.service.ts\n            \n            variable\n            DRAWER_DATA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/drawer/drawer/drawer.component.ts\n            \n            component\n            DrawerComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/expenses/amount/amount.component.ts\n            \n            component\n            AmountComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/expenses/card/card.component.ts\n            \n            component\n            CardComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/expenses/currency.service.ts\n            \n            injectable\n            CurrencyService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/expenses/currency.service.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/expenses/expense.ts\n            \n            interface\n            Amount\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/expenses/expense.ts\n            \n            interface\n            Expense\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/expenses/expense.ts\n            \n            interface\n            ExpenseStore\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/expenses/expenses.provider.service.ts\n            \n            injectable\n            ExpensesProviderService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/expenses/expenses.provider.service.ts\n            \n            variable\n            headers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/expenses/expenses.provider.service.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/expenses/expenses.service.ts\n            \n            injectable\n            ExpensesService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/expenses/expenses.service.ts\n            \n            interface\n            Store\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/expenses/expenses.service.ts\n            \n            variable\n            initialStore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/expenses/expenses.service.ts\n            \n            variable\n            itemsPerPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/expenses/form/form.component.ts\n            \n            component\n            FormComponent\n            \n                6 %\n                (1/15)\n            \n        \n        \n            \n                \n                src/app/expenses/form/form.component.ts\n            \n            class\n            MyErrorStateMatcher\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/expenses/list/list.component.ts\n            \n            component\n            ListComponent\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/app/expenses/loader/loader.component.ts\n            \n            component\n            LoaderComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/pagination/pagination/pagination.component.ts\n            \n            component\n            PaginationComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.0.1\n        \n            @angular/cdk : ^8.0.1\n        \n            @angular/common : ~8.0.1\n        \n            @angular/compiler : ~8.0.1\n        \n            @angular/core : ~8.0.1\n        \n            @angular/forms : ~8.0.1\n        \n            @angular/material : ^8.0.1\n        \n            @angular/platform-browser : ~8.0.1\n        \n            @angular/platform-browser-dynamic : ~8.0.1\n        \n            @angular/router : ~8.0.1\n        \n            bulma : ^0.7.5\n        \n            materialize-css : ^1.0.0-rc.2\n        \n            rxjs : ~6.4.0\n        \n            tslib : ^1.9.0\n        \n            uuid : ^3.3.2\n        \n            zone.js : ~0.9.1\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nExpenses\nSmall and incomplete SPA (Single Page Application) for hiring test.\nObject: Using a given API, create a SPA to enter expenses for a business trip.\nMissing stuff :\n\n Add more tests (only Pagination component is partialy tested)\n Add i18n\n Routing could be a good idea (including pagination & edition)\n\n\nGetting Started\nDevelopment\nWith NPM\nnpm install && npm start\nWith yarn\nyarn && yarn start\nAnd open a browser on http://localhost:4200/\nDuring development, The API is emulated thanks to json-server\nBuild\nChange the token in environment.prod.ts for expense api.\nWith NPM\nnpm run build\nWith yarn\nyarn build\nRunning the tests\nWith NPM\nnpm run test\nWith yarn\nyarn test\nBuilt With\n\nAngular - The web framework used\nAngular CLI - Angular CLI\nAngular Material - Material Design components for Angular\nJson-server - Zero config JSON api server\n\nAuthors\n\nThomas Moyse - t8g\n\nLicense\nThis project is licensed under the MIT License - see the LICENSE.md file for details\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nReleased under MIT License\nCopyright (c) 2019 Thomas Moyse.\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfirmButtonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DrawerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExpensesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaginationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ConfirmButtonModule\n\n\n\ncluster_ConfirmButtonModule_declarations\n\n\n\ncluster_ConfirmButtonModule_exports\n\n\n\ncluster_DrawerModule\n\n\n\ncluster_DrawerModule_declarations\n\n\n\ncluster_ExpensesModule\n\n\n\ncluster_ExpensesModule_declarations\n\n\n\ncluster_ExpensesModule_imports\n\n\n\ncluster_ExpensesModule_exports\n\n\n\ncluster_PaginationModule\n\n\n\ncluster_PaginationModule_declarations\n\n\n\ncluster_PaginationModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nExpensesModule\n\nExpensesModule\n\nAppModule -->\n\nExpensesModule->AppModule\n\n\n\n\n\nListComponent \n\nListComponent \n\nListComponent  -->\n\nExpensesModule->ListComponent \n\n\n\n\n\nConfirmButtonComponent\n\nConfirmButtonComponent\n\n\n\nConfirmButtonModule\n\nConfirmButtonModule\n\nConfirmButtonModule -->\n\nConfirmButtonComponent->ConfirmButtonModule\n\n\n\nExpensesModule -->\n\nConfirmButtonModule->ExpensesModule\n\n\n\n\n\nConfirmButtonComponent \n\nConfirmButtonComponent \n\nConfirmButtonComponent  -->\n\nConfirmButtonModule->ConfirmButtonComponent \n\n\n\n\n\nDrawerComponent\n\nDrawerComponent\n\n\n\nDrawerModule\n\nDrawerModule\n\nDrawerModule -->\n\nDrawerComponent->DrawerModule\n\n\n\nExpensesModule -->\n\nDrawerModule->ExpensesModule\n\n\n\n\n\nAmountComponent\n\nAmountComponent\n\nExpensesModule -->\n\nAmountComponent->ExpensesModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\nExpensesModule -->\n\nCardComponent->ExpensesModule\n\n\n\n\n\nFormComponent\n\nFormComponent\n\nExpensesModule -->\n\nFormComponent->ExpensesModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nExpensesModule -->\n\nListComponent->ExpensesModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nExpensesModule -->\n\nLoaderComponent->ExpensesModule\n\n\n\n\n\nPaginationModule\n\nPaginationModule\n\nExpensesModule -->\n\nPaginationModule->ExpensesModule\n\n\n\n\n\nPaginationComponent \n\nPaginationComponent \n\nPaginationComponent  -->\n\nPaginationModule->PaginationComponent \n\n\n\n\n\nPaginationComponent\n\nPaginationComponent\n\nPaginationModule -->\n\nPaginationComponent->PaginationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Rates   (src/.../currency.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/expenses/currency.service.ts\n    \n    \n        \n            \n                \n                    \n                    Rates\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DRAWER_DATA   (src/.../drawer.service.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            headers   (src/.../expenses.provider.service.ts)\n                        \n                        \n                            initialStore   (src/.../expenses.service.ts)\n                        \n                        \n                            itemsPerPage   (src/.../expenses.service.ts)\n                        \n                        \n                               (src/.../currency.service.ts)\n                        \n                        \n                               (src/.../expenses.provider.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/drawer/drawer.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DRAWER_DATA\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken(\"PortalData\")\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  expenseApi: {\n    url: \"https://mobile.ilucca-dev.net/api/expenseItems\",\n    token: \"793ed839b844d7b18667156be72d7eb0471ec706\"\n  },\n  currencyApi: {\n    url: \"https://api.exchangeratesapi.io/latest\"\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  expenseApi: {\n    url: \"http://localhost:3000/expenseItems\",\n    token: \"\"\n  },\n  currencyApi: {\n    url: \"https://api.exchangeratesapi.io/latest\"\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/expenses/expenses.provider.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                    \n                        \n                            Default value : new HttpHeaders({\n  Authorization: `Bearer ${token}`\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.expenseApi\n                        \n                    \n\n\n            \n        \n\n    src/app/expenses/expenses.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initialStore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Store\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  count: 10,\n  entities: {},\n  page: 0,\n  sort: \"createdAt\",\n  direction: \"asc\"\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            itemsPerPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n\n\n            \n        \n\n    src/app/expenses/currency.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.currencyApi\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
